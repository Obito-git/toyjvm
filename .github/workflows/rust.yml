name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [ stable ]
        jdk: [ '24.0.2' ]
        jdk_distribution: [ 'oracle' ]

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up rust (${{ matrix.rust }})
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Set up Java (${{ matrix.jdk_distribution }} ${{ matrix.jdk }})
        uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.jdk_distribution }}
          java-version: ${{ matrix.jdk }}

      - name: Cache compiled fixtures
        id: cache-fixtures
        uses: actions/cache@v4
        with:
          path: target/test-classes
          key: >
            ${{ runner.os }}-jdk-${{ matrix.jdk }}-${{ matrix.jdk_distribution }}-fixtures-
            ${{ hashFiles('testdata/java/**/*.java', 'testdata/prepare_fixtures.py', 'fixtures.toml') }}

      - name: Prepare fixtures (compile + extract)
        if: steps.cache-fixtures.outputs.cache-hit != 'true'
        run: python3 testdata/prepare_fixtures.py

      - name: Build
        run: cargo build --verbose --locked

      #- name: Run tests
      #  run: cargo test --all-features --verbose --locked
