---
source: jclass/src/lib.rs
expression: display
---
abstract class java.util.HashMap$HashIterator 
  minor version: 0
  major version: 68
  flags: (0x0420) ACC_SUPER, ACC_ABSTRACT
  this_class: #2                       //java/util/HashMap$HashIterator
  super_class: #8                      //java/lang/Object
  interfaces: 0, fields: 5, methods: 4, attributes: 3
Constant pool:
   #1 = Fieldref           #2.#3            // java/util/HashMap$HashIterator.this$0:Ljava/util/HashMap;
   #2 = Class              #4               // java/util/HashMap$HashIterator
   #3 = NameAndType        #5:#6            // this$0:Ljava/util/HashMap;
   #4 = Utf8               java/util/HashMap$HashIterator
   #5 = Utf8               this$0
   #6 = Utf8               Ljava/util/HashMap;
   #7 = Methodref          #8.#9            // java/lang/Object."<init>":()V
   #8 = Class              #10              // java/lang/Object
   #9 = NameAndType        #11:#12          // "<init>":()V
  #10 = Utf8               java/lang/Object
  #11 = Utf8               <init>
  #12 = Utf8               ()V
  #13 = Fieldref           #14.#15          // java/util/HashMap.modCount:I
  #14 = Class              #16              // java/util/HashMap
  #15 = NameAndType        #17:#18          // modCount:I
  #16 = Utf8               java/util/HashMap
  #17 = Utf8               modCount
  #18 = Utf8               I
  #19 = Fieldref           #2.#20           // java/util/HashMap$HashIterator.expectedModCount:I
  #20 = NameAndType        #21:#18          // expectedModCount:I
  #21 = Utf8               expectedModCount
  #22 = Fieldref           #14.#23          // java/util/HashMap.table:[Ljava/util/HashMap$Node;
  #23 = NameAndType        #24:#25          // table:[Ljava/util/HashMap$Node;
  #24 = Utf8               table
  #25 = Utf8               [Ljava/util/HashMap$Node;
  #26 = Fieldref           #2.#27           // java/util/HashMap$HashIterator.next:Ljava/util/HashMap$Node;
  #27 = NameAndType        #28:#29          // next:Ljava/util/HashMap$Node;
  #28 = Utf8               next
  #29 = Utf8               Ljava/util/HashMap$Node;
  #30 = Fieldref           #2.#31           // java/util/HashMap$HashIterator.current:Ljava/util/HashMap$Node;
  #31 = NameAndType        #32:#29          // current:Ljava/util/HashMap$Node;
  #32 = Utf8               current
  #33 = Fieldref           #2.#34           // java/util/HashMap$HashIterator.index:I
  #34 = NameAndType        #35:#18          // index:I
  #35 = Utf8               index
  #36 = Fieldref           #14.#37          // java/util/HashMap.size:I
  #37 = NameAndType        #38:#18          // size:I
  #38 = Utf8               size
  #39 = Class              #40              // java/util/ConcurrentModificationException
  #40 = Utf8               java/util/ConcurrentModificationException
  #41 = Methodref          #39.#9           // java/util/ConcurrentModificationException."<init>":()V
  #42 = Class              #43              // java/util/NoSuchElementException
  #43 = Utf8               java/util/NoSuchElementException
  #44 = Methodref          #42.#9           // java/util/NoSuchElementException."<init>":()V
  #45 = Fieldref           #46.#27          // java/util/HashMap$Node.next:Ljava/util/HashMap$Node;
  #46 = Class              #47              // java/util/HashMap$Node
  #47 = Utf8               java/util/HashMap$Node
  #48 = Class              #49              // java/lang/IllegalStateException
  #49 = Utf8               java/lang/IllegalStateException
  #50 = Methodref          #48.#9           // java/lang/IllegalStateException."<init>":()V
  #51 = Fieldref           #46.#52          // java/util/HashMap$Node.hash:I
  #52 = NameAndType        #53:#18          // hash:I
  #53 = Utf8               hash
  #54 = Fieldref           #46.#55          // java/util/HashMap$Node.key:Ljava/lang/Object;
  #55 = NameAndType        #56:#57          // key:Ljava/lang/Object;
  #56 = Utf8               key
  #57 = Utf8               Ljava/lang/Object;
  #58 = Methodref          #14.#59          // java/util/HashMap.removeNode:(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
  #59 = NameAndType        #60:#61          // removeNode:(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
  #60 = Utf8               removeNode
  #61 = Utf8               (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
  #62 = Utf8               Signature
  #63 = Utf8               Ljava/util/HashMap$Node<TK;TV;>;
  #64 = Utf8               (Ljava/util/HashMap;)V
  #65 = Utf8               Code
  #66 = Utf8               LineNumberTable
  #67 = Utf8               LocalVariableTable
  #68 = Utf8               this
  #69 = Utf8               Ljava/util/HashMap$HashIterator;
  #70 = Utf8               t
  #71 = Utf8               LocalVariableTypeTable
  #72 = Utf8               Ljava/util/HashMap<TK;TV;>.HashIterator;
  #73 = Utf8               [Ljava/util/HashMap$Node<TK;TV;>;
  #74 = Utf8               StackMapTable
  #75 = Class              #25              // "[Ljava/util/HashMap$Node;"
  #76 = Utf8               MethodParameters
  #77 = Utf8               hasNext
  #78 = Utf8               ()Z
  #79 = Utf8               nextNode
  #80 = Utf8               ()Ljava/util/HashMap$Node;
  #81 = Utf8               e
  #82 = Utf8               ()Ljava/util/HashMap$Node<TK;TV;>;
  #83 = Utf8               remove
  #84 = Utf8               p
  #85 = Utf8               SourceFile
  #86 = Utf8               HashMap.java
  #87 = Utf8               NestHost
  #88 = Utf8               InnerClasses
  #89 = Utf8               HashIterator
  #90 = Utf8               Node
{
  java.util.HashMap$Node<K, V> next;
    descriptor: Ljava/util/HashMap$Node;
    flags: (0x0000) 
    Signature: #63                         // Ljava/util/HashMap$Node<TK;TV;>;
  
  java.util.HashMap$Node<K, V> current;
    descriptor: Ljava/util/HashMap$Node;
    flags: (0x0000) 
    Signature: #63                         // Ljava/util/HashMap$Node<TK;TV;>;
  
  int expectedModCount;
    descriptor: I
    flags: (0x0000) 
  
  int index;
    descriptor: I
    flags: (0x0000) 
  
  final java.util.HashMap this$0;
    descriptor: Ljava/util/HashMap;
    flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC
  
  java.util.HashMap$HashIterator(java.util.HashMap);
    descriptor: (Ljava/util/HashMap;)V
    flags: (0x0000) 
    Code: 
      stack=6, locals=3, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: putfield      #1                  // Field this$0:Ljava/util/HashMap;
         5: aload_0                 
         6: invokespecial #7                  // Method java/lang/Object."<init>":()V
         9: aload_0                 
        10: aload_1                 
        11: getfield      #13                 // Field java/util/HashMap.modCount:I
        14: putfield      #19                 // Field expectedModCount:I
        17: aload_1                 
        18: getfield      #22                 // Field java/util/HashMap.table:[Ljava/util/HashMap$Node;
        21: astore_2                
        22: aload_0                 
        23: aload_0                 
        24: aconst_null             
        25: dup_x1                  
        26: putfield      #26                 // Field next:Ljava/util/HashMap$Node;
        29: putfield      #30                 // Field current:Ljava/util/HashMap$Node;
        32: aload_0                 
        33: iconst_0                
        34: putfield      #33                 // Field index:I
        37: aload_2                 
        38: ifnull        78                
        41: aload_1                 
        42: getfield      #36                 // Field java/util/HashMap.size:I
        45: ifle          78                
        48: aload_0                 
        49: getfield      #33                 // Field index:I
        52: aload_2                 
        53: arraylength             
        54: if_icmpge     78                
        57: aload_0                 
        58: aload_2                 
        59: aload_0                 
        60: dup                     
        61: getfield      #33                 // Field index:I
        64: dup_x1                  
        65: iconst_1                
        66: iadd                    
        67: putfield      #33                 // Field index:I
        70: aaload                  
        71: dup_x1                  
        72: putfield      #26                 // Field next:Ljava/util/HashMap$Node;
        75: ifnull        48                
        78: return                  
      LineNumberTable:
        line 1588: 0
        line 1589: 9
        line 1590: 17
        line 1591: 22
        line 1592: 32
        line 1593: 37
        line 1594: 48
        line 1596: 78
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       79     0  this   Ljava/util/HashMap$HashIterator;
           0       79     1  this$0 Ljava/util/HashMap;
          22       57     2  t      [Ljava/util/HashMap$Node;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       79     0  this   Ljava/util/HashMap<TK;TV;>.HashIterator;
            22       57     2  t      [Ljava/util/HashMap$Node<TK;TV;>;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [class java/util/HashMap$HashIterator, class java/util/HashMap, class "[Ljava/util/HashMap$Node;"]
          stack = []
        frame_type = 29 /* same */
    MethodParameters:
      Name                             Flags
      <no name>                        final mandated 
  
  public final boolean hasNext();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #26                 // Field next:Ljava/util/HashMap$Node;
         4: ifnull        11                
         7: iconst_1                
         8: goto          12                
        11: iconst_0                
        12: ireturn                 
      LineNumberTable:
        line 1599: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  this   Ljava/util/HashMap$HashIterator;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       13     0  this   Ljava/util/HashMap<TK;TV;>.HashIterator;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  final java.util.HashMap$Node<K, V> nextNode();
    descriptor: ()Ljava/util/HashMap$Node;
    flags: (0x0010) ACC_FINAL
    Code: 
      stack=6, locals=3, args_size=1
         0: aload_0                 
         1: getfield      #26                 // Field next:Ljava/util/HashMap$Node;
         4: astore_2                
         5: aload_0                 
         6: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         9: getfield      #13                 // Field java/util/HashMap.modCount:I
        12: aload_0                 
        13: getfield      #19                 // Field expectedModCount:I
        16: if_icmpeq     27                
        19: new           #39                 // class java/util/ConcurrentModificationException
        22: dup                     
        23: invokespecial #41                 // Method java/util/ConcurrentModificationException."<init>":()V
        26: athrow                  
        27: aload_2                 
        28: ifnonnull     39                
        31: new           #42                 // class java/util/NoSuchElementException
        34: dup                     
        35: invokespecial #44                 // Method java/util/NoSuchElementException."<init>":()V
        38: athrow                  
        39: aload_0                 
        40: aload_0                 
        41: aload_2                 
        42: dup_x1                  
        43: putfield      #30                 // Field current:Ljava/util/HashMap$Node;
        46: getfield      #45                 // Field java/util/HashMap$Node.next:Ljava/util/HashMap$Node;
        49: dup_x1                  
        50: putfield      #26                 // Field next:Ljava/util/HashMap$Node;
        53: ifnonnull     98                
        56: aload_0                 
        57: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        60: getfield      #22                 // Field java/util/HashMap.table:[Ljava/util/HashMap$Node;
        63: dup                     
        64: astore_1                
        65: ifnull        98                
        68: aload_0                 
        69: getfield      #33                 // Field index:I
        72: aload_1                 
        73: arraylength             
        74: if_icmpge     98                
        77: aload_0                 
        78: aload_1                 
        79: aload_0                 
        80: dup                     
        81: getfield      #33                 // Field index:I
        84: dup_x1                  
        85: iconst_1                
        86: iadd                    
        87: putfield      #33                 // Field index:I
        90: aaload                  
        91: dup_x1                  
        92: putfield      #26                 // Field next:Ljava/util/HashMap$Node;
        95: ifnull        68                
        98: aload_2                 
        99: areturn                 
      LineNumberTable:
        line 1604: 0
        line 1605: 5
        line 1606: 19
        line 1607: 27
        line 1608: 31
        line 1609: 39
        line 1610: 68
        line 1612: 98
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          65       33     1  t      [Ljava/util/HashMap$Node;
           0      100     0  this   Ljava/util/HashMap$HashIterator;
           5       95     2  e      Ljava/util/HashMap$Node;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
            65       33     1  t      [Ljava/util/HashMap$Node<TK;TV;>;
             0      100     0  this   Ljava/util/HashMap<TK;TV;>.HashIterator;
             5       95     2  e      Ljava/util/HashMap$Node<TK;TV;>;
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [top, class java/util/HashMap$Node]
        frame_type = 11 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [class java/util/HashMap$HashIterator, class "[Ljava/util/HashMap$Node;", class java/util/HashMap$Node]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [class java/util/HashMap$HashIterator, top, class java/util/HashMap$Node]
          stack = []
    Signature: #82                         // ()Ljava/util/HashMap$Node<TK;TV;>;
  
  public final void remove();
    descriptor: ()V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=6, locals=2, args_size=1
         0: aload_0                 
         1: getfield      #30                 // Field current:Ljava/util/HashMap$Node;
         4: astore_1                
         5: aload_1                 
         6: ifnonnull     17                
         9: new           #48                 // class java/lang/IllegalStateException
        12: dup                     
        13: invokespecial #50                 // Method java/lang/IllegalStateException."<init>":()V
        16: athrow                  
        17: aload_0                 
        18: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        21: getfield      #13                 // Field java/util/HashMap.modCount:I
        24: aload_0                 
        25: getfield      #19                 // Field expectedModCount:I
        28: if_icmpeq     39                
        31: new           #39                 // class java/util/ConcurrentModificationException
        34: dup                     
        35: invokespecial #41                 // Method java/util/ConcurrentModificationException."<init>":()V
        38: athrow                  
        39: aload_0                 
        40: aconst_null             
        41: putfield      #30                 // Field current:Ljava/util/HashMap$Node;
        44: aload_0                 
        45: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        48: aload_1                 
        49: getfield      #51                 // Field java/util/HashMap$Node.hash:I
        52: aload_1                 
        53: getfield      #54                 // Field java/util/HashMap$Node.key:Ljava/lang/Object;
        56: aconst_null             
        57: iconst_0                
        58: iconst_0                
        59: invokevirtual #58                 // Method java/util/HashMap.removeNode:(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
        62: pop                     
        63: aload_0                 
        64: aload_0                 
        65: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        68: getfield      #13                 // Field java/util/HashMap.modCount:I
        71: putfield      #19                 // Field expectedModCount:I
        74: return                  
      LineNumberTable:
        line 1616: 0
        line 1617: 5
        line 1618: 9
        line 1619: 17
        line 1620: 31
        line 1621: 39
        line 1622: 44
        line 1623: 63
        line 1624: 74
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       75     0  this   Ljava/util/HashMap$HashIterator;
           5       70     1  p      Ljava/util/HashMap$Node;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       75     0  this   Ljava/util/HashMap<TK;TV;>.HashIterator;
             5       70     1  p      Ljava/util/HashMap$Node<TK;TV;>;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [class java/util/HashMap$Node]
        frame_type = 21 /* same */
}
SourceFile: "HashMap.java"
NestHost: class java/util/HashMap
InnerClasses:
  abstract #89= #2 of #14;                    // HashIterator=class java/util/HashMap$HashIterator of class java/util/HashMap
  static #90= #46 of #14;                     // Node=class java/util/HashMap$Node of class java/util/HashMap
