---
source: jclass/src/lib.rs
expression: display
---
public final class java.lang.Math 
  minor version: 0
  major version: 68
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #1                       //java/lang/Math
  super_class: #6                      //java/lang/Object
  interfaces: 0, fields: 10, methods: 104, attributes: 3
Constant pool:
    #1 = Class              #2               // java/lang/Math
    #2 = Utf8               java/lang/Math
    #3 = Class              #4               // java/lang/Double
    #4 = Utf8               java/lang/Double
    #5 = Methodref          #6.#7            // java/lang/Object."<init>":()V
    #6 = Class              #8               // java/lang/Object
    #7 = NameAndType        #9:#10           // "<init>":()V
    #8 = Utf8               java/lang/Object
    #9 = Utf8               <init>
   #10 = Utf8               ()V
   #11 = Methodref          #12.#13          // java/lang/StrictMath.sin:(D)D
   #12 = Class              #14              // java/lang/StrictMath
   #13 = NameAndType        #15:#16          // sin:(D)D
   #14 = Utf8               java/lang/StrictMath
   #15 = Utf8               sin
   #16 = Utf8               (D)D
   #17 = Methodref          #12.#18          // java/lang/StrictMath.cos:(D)D
   #18 = NameAndType        #19:#16          // cos:(D)D
   #19 = Utf8               cos
   #20 = Methodref          #12.#21          // java/lang/StrictMath.tan:(D)D
   #21 = NameAndType        #22:#16          // tan:(D)D
   #22 = Utf8               tan
   #23 = Methodref          #12.#24          // java/lang/StrictMath.asin:(D)D
   #24 = NameAndType        #25:#16          // asin:(D)D
   #25 = Utf8               asin
   #26 = Methodref          #12.#27          // java/lang/StrictMath.acos:(D)D
   #27 = NameAndType        #28:#16          // acos:(D)D
   #28 = Utf8               acos
   #29 = Methodref          #12.#30          // java/lang/StrictMath.atan:(D)D
   #30 = NameAndType        #31:#16          // atan:(D)D
   #31 = Utf8               atan
   #32 = Double             0.017453292519943295d
   #34 = Double             57.29577951308232d
   #36 = Methodref          #12.#37          // java/lang/StrictMath.exp:(D)D
   #37 = NameAndType        #38:#16          // exp:(D)D
   #38 = Utf8               exp
   #39 = Methodref          #12.#40          // java/lang/StrictMath.log:(D)D
   #40 = NameAndType        #41:#16          // log:(D)D
   #41 = Utf8               log
   #42 = Methodref          #12.#43          // java/lang/StrictMath.log10:(D)D
   #43 = NameAndType        #44:#16          // log10:(D)D
   #44 = Utf8               log10
   #45 = Methodref          #12.#46          // java/lang/StrictMath.sqrt:(D)D
   #46 = NameAndType        #47:#16          // sqrt:(D)D
   #47 = Utf8               sqrt
   #48 = Methodref          #12.#49          // java/lang/StrictMath.cbrt:(D)D
   #49 = NameAndType        #50:#16          // cbrt:(D)D
   #50 = Utf8               cbrt
   #51 = Methodref          #12.#52          // java/lang/StrictMath.IEEEremainder:(DD)D
   #52 = NameAndType        #53:#54          // IEEEremainder:(DD)D
   #53 = Utf8               IEEEremainder
   #54 = Utf8               (DD)D
   #55 = Methodref          #12.#56          // java/lang/StrictMath.ceil:(D)D
   #56 = NameAndType        #57:#16          // ceil:(D)D
   #57 = Utf8               ceil
   #58 = Methodref          #12.#59          // java/lang/StrictMath.floor:(D)D
   #59 = NameAndType        #60:#16          // floor:(D)D
   #60 = Utf8               floor
   #61 = Methodref          #12.#62          // java/lang/StrictMath.rint:(D)D
   #62 = NameAndType        #63:#16          // rint:(D)D
   #63 = Utf8               rint
   #64 = Methodref          #12.#65          // java/lang/StrictMath.atan2:(DD)D
   #65 = NameAndType        #66:#54          // atan2:(DD)D
   #66 = Utf8               atan2
   #67 = Methodref          #12.#68          // java/lang/StrictMath.pow:(DD)D
   #68 = NameAndType        #69:#54          // pow:(DD)D
   #69 = Utf8               pow
   #70 = Methodref          #71.#72          // java/lang/Float.floatToRawIntBits:(F)I
   #71 = Class              #73              // java/lang/Float
   #72 = NameAndType        #74:#75          // floatToRawIntBits:(F)I
   #73 = Utf8               java/lang/Float
   #74 = Utf8               floatToRawIntBits
   #75 = Utf8               (F)I
   #76 = Class              #77              // jdk/internal/math/FloatConsts
   #77 = Utf8               jdk/internal/math/FloatConsts
   #78 = Integer            2139095040
   #79 = Integer            8388607
   #80 = Integer            8388608
   #81 = Methodref          #3.#82           // java/lang/Double.doubleToRawLongBits:(D)J
   #82 = NameAndType        #83:#84          // doubleToRawLongBits:(D)J
   #83 = Utf8               doubleToRawLongBits
   #84 = Utf8               (D)J
   #85 = Class              #86              // jdk/internal/math/DoubleConsts
   #86 = Utf8               jdk/internal/math/DoubleConsts
   #87 = Long               9218868437227405312l
   #89 = Long               1074l
   #91 = Long               -64l
   #93 = Long               4503599627370495l
   #95 = Long               4503599627370496l
   #97 = Fieldref           #98.#99          // java/lang/Math$RandomNumberGeneratorHolder.randomNumberGenerator:Ljava/util/Random;
   #98 = Class              #100             // java/lang/Math$RandomNumberGeneratorHolder
   #99 = NameAndType        #101:#102        // randomNumberGenerator:Ljava/util/Random;
  #100 = Utf8               java/lang/Math$RandomNumberGeneratorHolder
  #101 = Utf8               randomNumberGenerator
  #102 = Utf8               Ljava/util/Random;
  #103 = Methodref          #104.#105        // java/util/Random.nextDouble:()D
  #104 = Class              #106             // java/util/Random
  #105 = NameAndType        #107:#108        // nextDouble:()D
  #106 = Utf8               java/util/Random
  #107 = Utf8               nextDouble
  #108 = Utf8               ()D
  #109 = Class              #110             // java/lang/ArithmeticException
  #110 = Utf8               java/lang/ArithmeticException
  #111 = String             #112             // integer overflow
  #112 = Utf8               integer overflow
  #113 = Methodref          #109.#114        // java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
  #114 = NameAndType        #9:#115          // "<init>":(Ljava/lang/String;)V
  #115 = Utf8               (Ljava/lang/String;)V
  #116 = String             #117             // long overflow
  #117 = Utf8               long overflow
  #118 = Methodref          #1.#119          // java/lang/Math.multiplyExact:(JJ)J
  #119 = NameAndType        #120:#121        // multiplyExact:(JJ)J
  #120 = Utf8               multiplyExact
  #121 = Utf8               (JJ)J
  #122 = Methodref          #1.#123          // java/lang/Math.abs:(J)J
  #123 = NameAndType        #124:#125        // abs:(J)J
  #124 = Utf8               abs
  #125 = Utf8               (J)J
  #126 = Class              #127             // java/lang/Long
  #127 = Utf8               java/lang/Long
  #128 = Long               -9223372036854775808l
  #130 = Long               -1l
  #132 = Class              #133             // java/lang/Integer
  #133 = Utf8               java/lang/Integer
  #134 = Integer            2147483647
  #135 = Long               9223372036854775807l
  #137 = Integer            -2147483648
  #138 = Long               4294967295l
  #140 = Methodref          #1.#141          // java/lang/Math.multiplyHigh:(JJ)J
  #141 = NameAndType        #142:#121        // multiplyHigh:(JJ)J
  #142 = Utf8               multiplyHigh
  #143 = Methodref          #1.#144          // java/lang/Math.floorDiv:(JJ)J
  #144 = NameAndType        #145:#121        // floorDiv:(JJ)J
  #145 = Utf8               floorDiv
  #146 = Methodref          #1.#147          // java/lang/Math.floorMod:(JJ)J
  #147 = NameAndType        #148:#121        // floorMod:(JJ)J
  #148 = Utf8               floorMod
  #149 = Methodref          #1.#150          // java/lang/Math.ceilDiv:(JJ)J
  #150 = NameAndType        #151:#121        // ceilDiv:(JJ)J
  #151 = Utf8               ceilDiv
  #152 = Methodref          #1.#153          // java/lang/Math.ceilMod:(JJ)J
  #153 = NameAndType        #154:#121        // ceilMod:(JJ)J
  #154 = Utf8               ceilMod
  #155 = String             #156             // Overflow to represent absolute value of Integer.MIN_VALUE
  #156 = Utf8               Overflow to represent absolute value of Integer.MIN_VALUE
  #157 = Methodref          #1.#158          // java/lang/Math.abs:(I)I
  #158 = NameAndType        #124:#159        // abs:(I)I
  #159 = Utf8               (I)I
  #160 = String             #161             // Overflow to represent absolute value of Long.MIN_VALUE
  #161 = Utf8               Overflow to represent absolute value of Long.MIN_VALUE
  #162 = Methodref          #71.#163         // java/lang/Float.intBitsToFloat:(I)F
  #163 = NameAndType        #164:#165        // intBitsToFloat:(I)F
  #164 = Utf8               intBitsToFloat
  #165 = Utf8               (I)F
  #166 = Methodref          #3.#167          // java/lang/Double.longBitsToDouble:(J)D
  #167 = NameAndType        #168:#169        // longBitsToDouble:(J)D
  #168 = Utf8               longBitsToDouble
  #169 = Utf8               (J)D
  #170 = Fieldref           #1.#171          // java/lang/Math.negativeZeroFloatBits:J
  #171 = NameAndType        #172:#173        // negativeZeroFloatBits:J
  #172 = Utf8               negativeZeroFloatBits
  #173 = Utf8               J
  #174 = Fieldref           #1.#175          // java/lang/Math.negativeZeroDoubleBits:J
  #175 = NameAndType        #176:#173        // negativeZeroDoubleBits:J
  #176 = Utf8               negativeZeroDoubleBits
  #177 = Class              #178             // java/lang/IllegalArgumentException
  #178 = Utf8               java/lang/IllegalArgumentException
  #179 = Class              #180             // java/lang/StringBuilder
  #180 = Utf8               java/lang/StringBuilder
  #181 = Methodref          #179.#7          // java/lang/StringBuilder."<init>":()V
  #182 = Methodref          #179.#183        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #183 = NameAndType        #184:#185        // append:(I)Ljava/lang/StringBuilder;
  #184 = Utf8               append
  #185 = Utf8               (I)Ljava/lang/StringBuilder;
  #186 = String             #187             //  > 
  #187 = Utf8                > 
  #188 = Methodref          #179.#189        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #189 = NameAndType        #184:#190        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #190 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #191 = Methodref          #179.#192        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #192 = NameAndType        #193:#194        // toString:()Ljava/lang/String;
  #193 = Utf8               toString
  #194 = Utf8               ()Ljava/lang/String;
  #195 = Methodref          #177.#114        // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #196 = Methodref          #1.#197          // java/lang/Math.max:(JJ)J
  #197 = NameAndType        #198:#121        // max:(JJ)J
  #198 = Utf8               max
  #199 = Methodref          #1.#200          // java/lang/Math.min:(JJ)J
  #200 = NameAndType        #201:#121        // min:(JJ)J
  #201 = Utf8               min
  #202 = Methodref          #179.#203        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #203 = NameAndType        #184:#204        // append:(J)Ljava/lang/StringBuilder;
  #204 = Utf8               (J)Ljava/lang/StringBuilder;
  #205 = Methodref          #3.#206          // java/lang/Double.isNaN:(D)Z
  #206 = NameAndType        #207:#208        // isNaN:(D)Z
  #207 = Utf8               isNaN
  #208 = Utf8               (D)Z
  #209 = String             #210             // min is NaN
  #210 = Utf8               min is NaN
  #211 = String             #212             // max is NaN
  #212 = Utf8               max is NaN
  #213 = Methodref          #3.#214          // java/lang/Double.compare:(DD)I
  #214 = NameAndType        #215:#216        // compare:(DD)I
  #215 = Utf8               compare
  #216 = Utf8               (DD)I
  #217 = Methodref          #179.#218        // java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
  #218 = NameAndType        #184:#219        // append:(D)Ljava/lang/StringBuilder;
  #219 = Utf8               (D)Ljava/lang/StringBuilder;
  #220 = Methodref          #1.#221          // java/lang/Math.max:(DD)D
  #221 = NameAndType        #198:#54         // max:(DD)D
  #222 = Methodref          #1.#223          // java/lang/Math.min:(DD)D
  #223 = NameAndType        #201:#54         // min:(DD)D
  #224 = Methodref          #71.#225         // java/lang/Float.isNaN:(F)Z
  #225 = NameAndType        #207:#226        // isNaN:(F)Z
  #226 = Utf8               (F)Z
  #227 = Methodref          #71.#228         // java/lang/Float.compare:(FF)I
  #228 = NameAndType        #215:#229        // compare:(FF)I
  #229 = Utf8               (FF)I
  #230 = Methodref          #179.#231        // java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
  #231 = NameAndType        #184:#232        // append:(F)Ljava/lang/StringBuilder;
  #232 = Utf8               (F)Ljava/lang/StringBuilder;
  #233 = Methodref          #1.#234          // java/lang/Math.max:(FF)F
  #234 = NameAndType        #198:#235        // max:(FF)F
  #235 = Utf8               (FF)F
  #236 = Methodref          #1.#237          // java/lang/Math.min:(FF)F
  #237 = NameAndType        #201:#235        // min:(FF)F
  #238 = Double             NaNd
  #240 = Methodref          #3.#241          // java/lang/Double.isInfinite:(D)Z
  #241 = NameAndType        #242:#208        // isInfinite:(D)Z
  #242 = Utf8               isInfinite
  #243 = Fieldref           #1.#244          // java/lang/Math.$assertionsDisabled:Z
  #244 = NameAndType        #245:#246        // $assertionsDisabled:Z
  #245 = Utf8               $assertionsDisabled
  #246 = Utf8               Z
  #247 = Class              #248             // java/lang/AssertionError
  #248 = Utf8               java/lang/AssertionError
  #249 = Methodref          #247.#7          // java/lang/AssertionError."<init>":()V
  #250 = Methodref          #3.#251          // java/lang/Double.isFinite:(D)Z
  #251 = NameAndType        #252:#208        // isFinite:(D)Z
  #252 = Utf8               isFinite
  #253 = Class              #254             // java/math/BigDecimal
  #254 = Utf8               java/math/BigDecimal
  #255 = Methodref          #253.#256        // java/math/BigDecimal."<init>":(D)V
  #256 = NameAndType        #9:#257          // "<init>":(D)V
  #257 = Utf8               (D)V
  #258 = Methodref          #253.#259        // java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #259 = NameAndType        #260:#261        // multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #260 = Utf8               multiply
  #261 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #262 = Methodref          #253.#263        // java/math/BigDecimal.doubleValue:()D
  #263 = NameAndType        #264:#108        // doubleValue:()D
  #264 = Utf8               doubleValue
  #265 = Methodref          #253.#266        // java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #266 = NameAndType        #267:#261        // add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #267 = Utf8               add
  #268 = Methodref          #71.#269         // java/lang/Float.isFinite:(F)Z
  #269 = NameAndType        #252:#226        // isFinite:(F)Z
  #270 = Methodref          #253.#271        // java/math/BigDecimal.floatValue:()F
  #271 = NameAndType        #272:#273        // floatValue:()F
  #272 = Utf8               floatValue
  #273 = Utf8               ()F
  #274 = Methodref          #1.#275          // java/lang/Math.fma:(DDD)D
  #275 = NameAndType        #276:#277        // fma:(DDD)D
  #276 = Utf8               fma
  #277 = Utf8               (DDD)D
  #278 = Methodref          #1.#279          // java/lang/Math.getExponent:(D)I
  #279 = NameAndType        #280:#281        // getExponent:(D)I
  #280 = Utf8               getExponent
  #281 = Utf8               (D)I
  #282 = Methodref          #1.#283          // java/lang/Math.abs:(D)D
  #283 = NameAndType        #124:#16         // abs:(D)D
  #284 = Double             4.9E-324d
  #286 = Methodref          #1.#287          // java/lang/Math.powerOfTwoD:(I)D
  #287 = NameAndType        #288:#289        // powerOfTwoD:(I)D
  #288 = Utf8               powerOfTwoD
  #289 = Utf8               (I)D
  #290 = Methodref          #1.#291          // java/lang/Math.getExponent:(F)I
  #291 = NameAndType        #280:#75         // getExponent:(F)I
  #292 = Methodref          #1.#293          // java/lang/Math.abs:(F)F
  #293 = NameAndType        #124:#294        // abs:(F)F
  #294 = Utf8               (F)F
  #295 = Float              1.4E-45f
  #296 = Methodref          #1.#297          // java/lang/Math.powerOfTwoF:(I)F
  #297 = NameAndType        #298:#165        // powerOfTwoF:(I)F
  #298 = Utf8               powerOfTwoF
  #299 = Methodref          #1.#300          // java/lang/Math.copySign:(DD)D
  #300 = NameAndType        #301:#54         // copySign:(DD)D
  #301 = Utf8               copySign
  #302 = Methodref          #1.#303          // java/lang/Math.copySign:(FF)F
  #303 = NameAndType        #301:#235        // copySign:(FF)F
  #304 = Methodref          #12.#305         // java/lang/StrictMath.sinh:(D)D
  #305 = NameAndType        #306:#16         // sinh:(D)D
  #306 = Utf8               sinh
  #307 = Methodref          #12.#308         // java/lang/StrictMath.cosh:(D)D
  #308 = NameAndType        #309:#16         // cosh:(D)D
  #309 = Utf8               cosh
  #310 = Methodref          #12.#311         // java/lang/StrictMath.tanh:(D)D
  #311 = NameAndType        #312:#16         // tanh:(D)D
  #312 = Utf8               tanh
  #313 = Methodref          #12.#314         // java/lang/StrictMath.hypot:(DD)D
  #314 = NameAndType        #315:#54         // hypot:(DD)D
  #315 = Utf8               hypot
  #316 = Methodref          #12.#317         // java/lang/StrictMath.expm1:(D)D
  #317 = NameAndType        #318:#16         // expm1:(D)D
  #318 = Utf8               expm1
  #319 = Methodref          #12.#320         // java/lang/StrictMath.log1p:(D)D
  #320 = NameAndType        #321:#16         // log1p:(D)D
  #321 = Utf8               log1p
  #322 = Long               1023l
  #324 = Double             -4.9E-324d
  #326 = Float              -1.4E-45f
  #327 = Double             Infinityd
  #329 = Float              Infinityf
  #330 = Double             -Infinityd
  #332 = Float              -Infinityf
  #333 = Methodref          #1.#334          // java/lang/Math.primPowerOfTwoD:(I)D
  #334 = NameAndType        #335:#289        // primPowerOfTwoD:(I)D
  #335 = Utf8               primPowerOfTwoD
  #336 = Double             8.98846567431158E307d
  #338 = Double             1.1125369292536007E-308d
  #340 = Methodref          #1.#341          // java/lang/Math.min:(II)I
  #341 = NameAndType        #201:#342        // min:(II)I
  #342 = Utf8               (II)I
  #343 = Methodref          #1.#344          // java/lang/Math.max:(II)I
  #344 = NameAndType        #198:#342        // max:(II)I
  #345 = Methodref          #346.#347        // java/lang/Class.desiredAssertionStatus:()Z
  #346 = Class              #348             // java/lang/Class
  #347 = NameAndType        #349:#350        // desiredAssertionStatus:()Z
  #348 = Utf8               java/lang/Class
  #349 = Utf8               desiredAssertionStatus
  #350 = Utf8               ()Z
  #351 = Float              -0.0f
  #352 = Double             -0.0d
  #354 = Utf8               E
  #355 = Utf8               D
  #356 = Utf8               ConstantValue
  #357 = Double             2.718281828459045d
  #359 = Utf8               PI
  #360 = Double             3.141592653589793d
  #362 = Utf8               TAU
  #363 = Double             6.283185307179586d
  #365 = Utf8               DEGREES_TO_RADIANS
  #366 = Utf8               RADIANS_TO_DEGREES
  #367 = Utf8               F_UP
  #368 = Utf8               F_DOWN
  #369 = Utf8               Code
  #370 = Utf8               LineNumberTable
  #371 = Utf8               LocalVariableTable
  #372 = Utf8               this
  #373 = Utf8               Ljava/lang/Math;
  #374 = Utf8               a
  #375 = Utf8               RuntimeVisibleAnnotations
  #376 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;
  #377 = Utf8               toRadians
  #378 = Utf8               angdeg
  #379 = Utf8               toDegrees
  #380 = Utf8               angrad
  #381 = Utf8               f1
  #382 = Utf8               f2
  #383 = Utf8               y
  #384 = Utf8               x
  #385 = Utf8               b
  #386 = Utf8               round
  #387 = Utf8               r
  #388 = Utf8               I
  #389 = Utf8               F
  #390 = Utf8               intBits
  #391 = Utf8               biasedExp
  #392 = Utf8               shift
  #393 = Utf8               StackMapTable
  #394 = Utf8               longBits
  #395 = Utf8               random
  #396 = Utf8               addExact
  #397 = Utf8               subtractExact
  #398 = Utf8               (JI)J
  #399 = Utf8               ax
  #400 = Utf8               ay
  #401 = Utf8               divideExact
  #402 = Utf8               q
  #403 = Utf8               floorDivExact
  #404 = Utf8               ceilDivExact
  #405 = Utf8               incrementExact
  #406 = Utf8               decrementExact
  #407 = Utf8               negateExact
  #408 = Utf8               toIntExact
  #409 = Utf8               (J)I
  #410 = Utf8               value
  #411 = Utf8               multiplyFull
  #412 = Utf8               (II)J
  #413 = Utf8               x1
  #414 = Utf8               x2
  #415 = Utf8               y1
  #416 = Utf8               y2
  #417 = Utf8               z2
  #418 = Utf8               t
  #419 = Utf8               z1
  #420 = Utf8               z0
  #421 = Utf8               unsignedMultiplyHigh
  #422 = Utf8               result
  #423 = Utf8               (JI)I
  #424 = Utf8               absExact
  #425 = Utf8               clamp
  #426 = Utf8               (JII)I
  #427 = Utf8               (JJJ)J
  #428 = Utf8               (FFF)F
  #429 = Utf8               product
  #430 = Utf8               Ljava/math/BigDecimal;
  #431 = Utf8               infiniteA
  #432 = Utf8               infiniteB
  #433 = Utf8               infiniteC
  #434 = Utf8               c
  #435 = Utf8               ulp
  #436 = Utf8               d
  #437 = Utf8               f
  #438 = Utf8               signum
  #439 = Utf8               magnitude
  #440 = Utf8               sign
  #441 = Utf8               nextAfter
  #442 = Utf8               transducer
  #443 = Utf8               start
  #444 = Utf8               direction
  #445 = Utf8               (FD)F
  #446 = Utf8               nextUp
  #447 = Utf8               nextDown
  #448 = Utf8               scalb
  #449 = Utf8               (DI)D
  #450 = Utf8               scaleFactor
  #451 = Utf8               (FI)F
  #452 = Utf8               MAX_SCALE
  #453 = Utf8               n
  #454 = Utf8               <clinit>
  #455 = Utf8               SourceFile
  #456 = Utf8               Math.java
  #457 = Utf8               NestMembers
  #458 = Utf8               InnerClasses
  #459 = Utf8               RandomNumberGeneratorHolder
{
  public static final double E;
    descriptor: D
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: double 2.718281828459045d
  
  public static final double PI;
    descriptor: D
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: double 3.141592653589793d
  
  public static final double TAU;
    descriptor: D
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: double 6.283185307179586d
  
  private static final double DEGREES_TO_RADIANS;
    descriptor: D
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: double 0.017453292519943295d
  
  private static final double RADIANS_TO_DEGREES;
    descriptor: D
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: double 57.29577951308232d
  
  private static final long negativeZeroFloatBits;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final long negativeZeroDoubleBits;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final double F_UP;
    descriptor: D
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: double 8.98846567431158E307d
  
  private static final double F_DOWN;
    descriptor: D
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: double 1.1125369292536007E-308d
  
  static final boolean $assertionsDisabled;
    descriptor: Z
    flags: (0x1018) ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
  
  private java.lang.Math();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #5                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/Math;
  
  public static double sin(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #11                 // Method java/lang/StrictMath.sin:(D)D
         4: dreturn                 
      LineNumberTable:
        line 189: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double cos(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #17                 // Method java/lang/StrictMath.cos:(D)D
         4: dreturn                 
      LineNumberTable:
        line 207: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double tan(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #20                 // Method java/lang/StrictMath.tan:(D)D
         4: dreturn                 
      LineNumberTable:
        line 225: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double asin(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #23                 // Method java/lang/StrictMath.asin:(D)D
         4: dreturn                 
      LineNumberTable:
        line 243: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
  
  public static double acos(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #26                 // Method java/lang/StrictMath.acos:(D)D
         4: dreturn                 
      LineNumberTable:
        line 261: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
  
  public static double atan(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #29                 // Method java/lang/StrictMath.atan:(D)D
         4: dreturn                 
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
  
  public static double toRadians(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: dload_0                 
         1: ldc2_w        #32                 // double 0.017453292519943295d
         4: dmul                    
         5: dreturn                 
      LineNumberTable:
        line 296: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  angdeg D
  
  public static double toDegrees(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: dload_0                 
         1: ldc2_w        #34                 // double 57.29577951308232d
         4: dmul                    
         5: dreturn                 
      LineNumberTable:
        line 312: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  angrad D
  
  public static double exp(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #36                 // Method java/lang/StrictMath.exp:(D)D
         4: dreturn                 
      LineNumberTable:
        line 335: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double log(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #39                 // Method java/lang/StrictMath.log:(D)D
         4: dreturn                 
      LineNumberTable:
        line 360: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double log10(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #42                 // Method java/lang/StrictMath.log10:(D)D
         4: dreturn                 
      LineNumberTable:
        line 388: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double sqrt(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #45                 // Method java/lang/StrictMath.sqrt:(D)D
         4: dreturn                 
      LineNumberTable:
        line 414: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double cbrt(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #48                 // Method java/lang/StrictMath.cbrt:(D)D
         4: dreturn                 
      LineNumberTable:
        line 449: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
  
  public static double IEEEremainder(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: dload_0                 
         1: dload_2                 
         2: invokestatic  #51                 // Method java/lang/StrictMath.IEEEremainder:(DD)D
         5: dreturn                 
      LineNumberTable:
        line 475: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  f1     D
           0        6     2  f2     D
  
  public static double ceil(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #55                 // Method java/lang/StrictMath.ceil:(D)D
         4: dreturn                 
      LineNumberTable:
        line 502: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double floor(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #58                 // Method java/lang/StrictMath.floor:(D)D
         4: dreturn                 
      LineNumberTable:
        line 526: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double rint(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #61                 // Method java/lang/StrictMath.rint:(D)D
         4: dreturn                 
      LineNumberTable:
        line 550: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double atan2(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: dload_0                 
         1: dload_2                 
         2: invokestatic  #64                 // Method java/lang/StrictMath.atan2:(DD)D
         5: dreturn                 
      LineNumberTable:
        line 616: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  y      D
           0        6     2  x      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double pow(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: dload_0                 
         1: dload_2                 
         2: invokestatic  #67                 // Method java/lang/StrictMath.pow:(DD)D
         5: dreturn                 
      LineNumberTable:
        line 754: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  a      D
           0        6     2  b      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int round(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=5, args_size=1
         0: fload_0                 
         1: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
         4: istore_1                
         5: iload_1                 
         6: ldc           #78                 // int 2139095040
         8: iand                    
         9: bipush        23                
        11: ishr                    
        12: istore_2                
        13: sipush        149               
        16: iload_2                 
        17: isub                    
        18: istore_3                
        19: iload_3                 
        20: bipush        -32               
        22: iand                    
        23: ifne          53                
        26: iload_1                 
        27: ldc           #79                 // int 8388607
        29: iand                    
        30: ldc           #80                 // int 8388608
        32: ior                     
        33: istore        4                 
        35: iload_1                 
        36: ifge          44                
        39: iload         4                 
        41: ineg                    
        42: istore        4                 
        44: iload         4                 
        46: iload_3                 
        47: ishr                    
        48: iconst_1                
        49: iadd                    
        50: iconst_1                
        51: ishr                    
        52: ireturn                 
        53: fload_0                 
        54: f2i                     
        55: ireturn                 
      LineNumberTable:
        line 779: 0
        line 780: 5
        line 782: 13
        line 784: 19
        line 786: 26
        line 788: 35
        line 789: 39
        line 797: 44
        line 803: 53
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          35       18     4  r      I
           0       56     0  a      F
           5       51     1  intBits I
          13       43     2  biasedExp I
          19       37     3  shift  I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [float, int, int, int, int]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 8
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long round(double);
    descriptor: (D)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=10, args_size=1
         0: dload_0                 
         1: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
         4: lstore_2                
         5: lload_2                 
         6: ldc2_w        #87                 // long 9218868437227405312l
         9: land                    
        10: bipush        52                
        12: lshr                    
        13: lstore        4                 
        15: ldc2_w        #89                 // long 1074l
        18: lload         4                 
        20: lsub                    
        21: lstore        6                 
        23: lload         6                 
        25: ldc2_w        #91                 // long -64l
        28: land                    
        29: lconst_0                
        30: lcmp                    
        31: ifne          67                
        34: lload_2                 
        35: ldc2_w        #93                 // long 4503599627370495l
        38: land                    
        39: ldc2_w        #95                 // long 4503599627370496l
        42: lor                     
        43: lstore        8                 
        45: lload_2                 
        46: lconst_0                
        47: lcmp                    
        48: ifge          56                
        51: lload         8                 
        53: lneg                    
        54: lstore        8                 
        56: lload         8                 
        58: lload         6                 
        60: l2i                     
        61: lshr                    
        62: lconst_1                
        63: ladd                    
        64: iconst_1                
        65: lshr                    
        66: lreturn                 
        67: dload_0                 
        68: d2l                     
        69: lreturn                 
      LineNumberTable:
        line 829: 0
        line 830: 5
        line 832: 15
        line 834: 23
        line 836: 34
        line 838: 45
        line 839: 51
        line 847: 56
        line 853: 67
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          45       22     8  r      J
           0       70     0  a      D
           5       65     2  longBits J
          15       55     4  biasedExp J
          23       47     6  shift  J
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [double, long, long, long, long]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 10
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double random();
    descriptor: ()D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #97                 // Field java/lang/Math$RandomNumberGeneratorHolder.randomNumberGenerator:Ljava/util/Random;
         3: invokevirtual #103                // Method java/util/Random.nextDouble:()D
         6: dreturn                 
      LineNumberTable:
        line 896: 0
  
  public static int addExact(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: iadd                    
         3: istore_2                
         4: iload_0                 
         5: iload_2                 
         6: ixor                    
         7: iload_1                 
         8: iload_2                 
         9: ixor                    
        10: iand                    
        11: ifge          24                
        14: new           #109                // class java/lang/ArithmeticException
        17: dup                     
        18: ldc           #111                // String integer overflow
        20: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        23: athrow                  
        24: iload_2                 
        25: ireturn                 
      LineNumberTable:
        line 911: 0
        line 913: 4
        line 914: 14
        line 916: 24
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       26     0  x      I
           0       26     1  y      I
           4       22     2  r      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [int]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long addExact(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: ladd                    
         3: lstore        4                 
         5: lload_0                 
         6: lload         4                 
         8: lxor                    
         9: lload_2                 
        10: lload         4                 
        12: lxor                    
        13: land                    
        14: lconst_0                
        15: lcmp                    
        16: ifge          29                
        19: new           #109                // class java/lang/ArithmeticException
        22: dup                     
        23: ldc           #116                // String long overflow
        25: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        28: athrow                  
        29: lload         4                 
        31: lreturn                 
      LineNumberTable:
        line 931: 0
        line 933: 5
        line 934: 19
        line 936: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       32     0  x      J
           0       32     2  y      J
           5       27     4  r      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [long]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int subtractExact(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: isub                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: ixor                    
         7: iload_0                 
         8: iload_2                 
         9: ixor                    
        10: iand                    
        11: ifge          24                
        14: new           #109                // class java/lang/ArithmeticException
        17: dup                     
        18: ldc           #111                // String integer overflow
        20: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        23: athrow                  
        24: iload_2                 
        25: ireturn                 
      LineNumberTable:
        line 951: 0
        line 954: 4
        line 955: 14
        line 957: 24
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       26     0  x      I
           0       26     1  y      I
           4       22     2  r      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [int]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long subtractExact(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: lsub                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: lxor                    
         8: lload_0                 
         9: lload         4                 
        11: lxor                    
        12: land                    
        13: lconst_0                
        14: lcmp                    
        15: ifge          28                
        18: new           #109                // class java/lang/ArithmeticException
        21: dup                     
        22: ldc           #116                // String long overflow
        24: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        27: athrow                  
        28: lload         4                 
        30: lreturn                 
      LineNumberTable:
        line 972: 0
        line 975: 5
        line 976: 18
        line 978: 28
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       31     0  x      J
           0       31     2  y      J
           5       26     4  r      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [long]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int multiplyExact(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: iload_0                 
         1: i2l                     
         2: iload_1                 
         3: i2l                     
         4: lmul                    
         5: lstore_2                
         6: lload_2                 
         7: l2i                     
         8: i2l                     
         9: lload_2                 
        10: lcmp                    
        11: ifeq          24                
        14: new           #109                // class java/lang/ArithmeticException
        17: dup                     
        18: ldc           #111                // String integer overflow
        20: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        23: athrow                  
        24: lload_2                 
        25: l2i                     
        26: ireturn                 
      LineNumberTable:
        line 993: 0
        line 994: 6
        line 995: 14
        line 997: 24
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       27     0  x      I
           0       27     1  y      I
           6       21     2  r      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [long]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long multiplyExact(long, int);
    descriptor: (JI)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: lload_0                 
         1: iload_2                 
         2: i2l                     
         3: invokestatic  #118                // Method multiplyExact:(JJ)J
         6: lreturn                 
      LineNumberTable:
        line 1011: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  x      J
           0        7     2  y      I
  
  public static long multiplyExact(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=10, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: lmul                    
         3: lstore        4                 
         5: lload_0                 
         6: invokestatic  #122                // Method abs:(J)J
         9: lstore        6                 
        11: lload_2                 
        12: invokestatic  #122                // Method abs:(J)J
        15: lstore        8                 
        17: lload         6                 
        19: lload         8                 
        21: lor                     
        22: bipush        31                
        24: lushr                   
        25: lconst_0                
        26: lcmp                    
        27: ifeq          71                
        30: lload_2                 
        31: lconst_0                
        32: lcmp                    
        33: ifeq          45                
        36: lload         4                 
        38: lload_2                 
        39: ldiv                    
        40: lload_0                 
        41: lcmp                    
        42: ifne          61                
        45: lload_0                 
        46: ldc2_w        #128                // long -9223372036854775808l
        49: lcmp                    
        50: ifne          71                
        53: lload_2                 
        54: ldc2_w        #130                // long -1l
        57: lcmp                    
        58: ifne          71                
        61: new           #109                // class java/lang/ArithmeticException
        64: dup                     
        65: ldc           #116                // String long overflow
        67: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        70: athrow                  
        71: lload         4                 
        73: lreturn                 
      LineNumberTable:
        line 1026: 0
        line 1027: 5
        line 1028: 11
        line 1029: 17
        line 1033: 30
        line 1035: 61
        line 1038: 71
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       74     0  x      J
           0       74     2  y      J
           5       69     4  r      J
          11       63     6  ax     J
          17       57     8  ay     J
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 45
          locals = [long, long, long]
        frame_type = 15 /* same */
        frame_type = 9 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int divideExact(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: idiv                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: iand                    
         7: iload_2                 
         8: iand                    
         9: iflt          14                
        12: iload_2                 
        13: ireturn                 
        14: new           #109                // class java/lang/ArithmeticException
        17: dup                     
        18: ldc           #111                // String integer overflow
        20: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        23: athrow                  
      LineNumberTable:
        line 1064: 0
        line 1065: 4
        line 1066: 12
        line 1068: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       24     0  x      I
           0       24     1  y      I
           4       20     2  q      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [int]
  
  public static long divideExact(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: ldiv                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: land                    
         8: lload         4                 
        10: land                    
        11: lconst_0                
        12: lcmp                    
        13: iflt          19                
        16: lload         4                 
        18: lreturn                 
        19: new           #109                // class java/lang/ArithmeticException
        22: dup                     
        23: ldc           #116                // String long overflow
        25: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        28: athrow                  
      LineNumberTable:
        line 1094: 0
        line 1095: 5
        line 1096: 16
        line 1098: 19
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       29     0  x      J
           0       29     2  y      J
           5       24     4  q      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [long]
  
  public static int floorDivExact(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: idiv                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: iand                    
         7: iload_2                 
         8: iand                    
         9: iflt          31                
        12: iload_0                 
        13: iload_1                 
        14: ixor                    
        15: ifge          29                
        18: iload_2                 
        19: iload_1                 
        20: imul                    
        21: iload_0                 
        22: if_icmpeq     29                
        25: iload_2                 
        26: iconst_1                
        27: isub                    
        28: ireturn                 
        29: iload_2                 
        30: ireturn                 
        31: new           #109                // class java/lang/ArithmeticException
        34: dup                     
        35: ldc           #111                // String integer overflow
        37: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        40: athrow                  
      LineNumberTable:
        line 1127: 0
        line 1128: 4
        line 1130: 12
        line 1131: 25
        line 1133: 29
        line 1135: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       41     0  x      I
           0       41     1  y      I
           4       37     2  q      I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [int]
        frame_type = 1 /* same */
  
  public static long floorDivExact(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: ldiv                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: land                    
         8: lload         4                 
        10: land                    
        11: lconst_0                
        12: lcmp                    
        13: iflt          41                
        16: lload_0                 
        17: lload_2                 
        18: lxor                    
        19: lconst_0                
        20: lcmp                    
        21: ifge          38                
        24: lload         4                 
        26: lload_2                 
        27: lmul                    
        28: lload_0                 
        29: lcmp                    
        30: ifeq          38                
        33: lload         4                 
        35: lconst_1                
        36: lsub                    
        37: lreturn                 
        38: lload         4                 
        40: lreturn                 
        41: new           #109                // class java/lang/ArithmeticException
        44: dup                     
        45: ldc           #116                // String long overflow
        47: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        50: athrow                  
      LineNumberTable:
        line 1164: 0
        line 1165: 5
        line 1167: 16
        line 1168: 33
        line 1170: 38
        line 1172: 41
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  x      J
           0       51     2  y      J
           5       46     4  q      J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [long]
        frame_type = 2 /* same */
  
  public static int ceilDivExact(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: idiv                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: iand                    
         7: iload_2                 
         8: iand                    
         9: iflt          31                
        12: iload_0                 
        13: iload_1                 
        14: ixor                    
        15: iflt          29                
        18: iload_2                 
        19: iload_1                 
        20: imul                    
        21: iload_0                 
        22: if_icmpeq     29                
        25: iload_2                 
        26: iconst_1                
        27: iadd                    
        28: ireturn                 
        29: iload_2                 
        30: ireturn                 
        31: new           #109                // class java/lang/ArithmeticException
        34: dup                     
        35: ldc           #111                // String integer overflow
        37: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        40: athrow                  
      LineNumberTable:
        line 1201: 0
        line 1202: 4
        line 1204: 12
        line 1205: 25
        line 1207: 29
        line 1209: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       41     0  x      I
           0       41     1  y      I
           4       37     2  q      I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [int]
        frame_type = 1 /* same */
  
  public static long ceilDivExact(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: ldiv                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: land                    
         8: lload         4                 
        10: land                    
        11: lconst_0                
        12: lcmp                    
        13: iflt          41                
        16: lload_0                 
        17: lload_2                 
        18: lxor                    
        19: lconst_0                
        20: lcmp                    
        21: iflt          38                
        24: lload         4                 
        26: lload_2                 
        27: lmul                    
        28: lload_0                 
        29: lcmp                    
        30: ifeq          38                
        33: lload         4                 
        35: lconst_1                
        36: ladd                    
        37: lreturn                 
        38: lload         4                 
        40: lreturn                 
        41: new           #109                // class java/lang/ArithmeticException
        44: dup                     
        45: ldc           #116                // String long overflow
        47: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        50: athrow                  
      LineNumberTable:
        line 1238: 0
        line 1239: 5
        line 1241: 16
        line 1242: 33
        line 1244: 38
        line 1246: 41
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  x      J
           0       51     2  y      J
           5       46     4  q      J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [long]
        frame_type = 2 /* same */
  
  public static int incrementExact(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: ldc           #134                // int 2147483647
         3: if_icmpne     16                
         6: new           #109                // class java/lang/ArithmeticException
         9: dup                     
        10: ldc           #111                // String integer overflow
        12: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: iload_0                 
        17: iconst_1                
        18: iadd                    
        19: ireturn                 
      LineNumberTable:
        line 1261: 0
        line 1262: 6
        line 1265: 16
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  a      I
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long incrementExact(long);
    descriptor: (J)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: ldc2_w        #135                // long 9223372036854775807l
         4: lcmp                    
         5: ifne          18                
         8: new           #109                // class java/lang/ArithmeticException
        11: dup                     
        12: ldc           #116                // String long overflow
        14: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        17: athrow                  
        18: lload_0                 
        19: lconst_1                
        20: ladd                    
        21: lreturn                 
      LineNumberTable:
        line 1280: 0
        line 1281: 8
        line 1284: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  a      J
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int decrementExact(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: ldc           #137                // int -2147483648
         3: if_icmpne     16                
         6: new           #109                // class java/lang/ArithmeticException
         9: dup                     
        10: ldc           #111                // String integer overflow
        12: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: iload_0                 
        17: iconst_1                
        18: isub                    
        19: ireturn                 
      LineNumberTable:
        line 1299: 0
        line 1300: 6
        line 1303: 16
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  a      I
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long decrementExact(long);
    descriptor: (J)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: ldc2_w        #128                // long -9223372036854775808l
         4: lcmp                    
         5: ifne          18                
         8: new           #109                // class java/lang/ArithmeticException
        11: dup                     
        12: ldc           #116                // String long overflow
        14: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        17: athrow                  
        18: lload_0                 
        19: lconst_1                
        20: lsub                    
        21: lreturn                 
      LineNumberTable:
        line 1318: 0
        line 1319: 8
        line 1322: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  a      J
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int negateExact(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: ldc           #137                // int -2147483648
         3: if_icmpne     16                
         6: new           #109                // class java/lang/ArithmeticException
         9: dup                     
        10: ldc           #111                // String integer overflow
        12: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: iload_0                 
        17: ineg                    
        18: ireturn                 
      LineNumberTable:
        line 1337: 0
        line 1338: 6
        line 1341: 16
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       19     0  a      I
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long negateExact(long);
    descriptor: (J)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: ldc2_w        #128                // long -9223372036854775808l
         4: lcmp                    
         5: ifne          18                
         8: new           #109                // class java/lang/ArithmeticException
        11: dup                     
        12: ldc           #116                // String long overflow
        14: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        17: athrow                  
        18: lload_0                 
        19: lneg                    
        20: lreturn                 
      LineNumberTable:
        line 1356: 0
        line 1357: 8
        line 1360: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  a      J
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int toIntExact(long);
    descriptor: (J)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: l2i                     
         2: i2l                     
         3: lload_0                 
         4: lcmp                    
         5: ifeq          18                
         8: new           #109                // class java/lang/ArithmeticException
        11: dup                     
        12: ldc           #111                // String integer overflow
        14: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        17: athrow                  
        18: lload_0                 
        19: l2i                     
        20: ireturn                 
      LineNumberTable:
        line 1373: 0
        line 1374: 8
        line 1376: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
  
  public static long multiplyFull(int, int);
    descriptor: (II)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=2
         0: iload_0                 
         1: i2l                     
         2: iload_1                 
         3: i2l                     
         4: lmul                    
         5: lreturn                 
      LineNumberTable:
        line 1388: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  x      I
           0        6     1  y      I
  
  public static long multiplyHigh(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=20, args_size=2
         0: lload_0                 
         1: bipush        32                
         3: lshr                    
         4: lstore        4                 
         6: lload_0                 
         7: ldc2_w        #138                // long 4294967295l
        10: land                    
        11: lstore        6                 
        13: lload_2                 
        14: bipush        32                
        16: lshr                    
        17: lstore        8                 
        19: lload_2                 
        20: ldc2_w        #138                // long 4294967295l
        23: land                    
        24: lstore        10                
        26: lload         6                 
        28: lload         10                
        30: lmul                    
        31: lstore        12                
        33: lload         4                 
        35: lload         10                
        37: lmul                    
        38: lload         12                
        40: bipush        32                
        42: lushr                   
        43: ladd                    
        44: lstore        14                
        46: lload         14                
        48: ldc2_w        #138                // long 4294967295l
        51: land                    
        52: lstore        16                
        54: lload         14                
        56: bipush        32                
        58: lshr                    
        59: lstore        18                
        61: lload         16                
        63: lload         6                 
        65: lload         8                 
        67: lmul                    
        68: ladd                    
        69: lstore        16                
        71: lload         4                 
        73: lload         8                 
        75: lmul                    
        76: lload         18                
        78: ladd                    
        79: lload         16                
        81: bipush        32                
        83: lshr                    
        84: ladd                    
        85: lreturn                 
      LineNumberTable:
        line 1405: 0
        line 1406: 6
        line 1407: 13
        line 1408: 19
        line 1410: 26
        line 1411: 33
        line 1412: 46
        line 1413: 54
        line 1414: 61
        line 1416: 71
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       86     0  x      J
           0       86     2  y      J
           6       80     4  x1     J
          13       73     6  x2     J
          19       67     8  y1     J
          26       60    10  y2     J
          33       53    12  z2     J
          46       40    14  t      J
          54       32    16  z1     J
          61       25    18  z0     J
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long unsignedMultiplyHigh(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=7, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: invokestatic  #140                // Method multiplyHigh:(JJ)J
         5: lstore        4                 
         7: lload         4                 
         9: lload_2                 
        10: lload_0                 
        11: bipush        63                
        13: lshr                    
        14: land                    
        15: ladd                    
        16: lstore        4                 
        18: lload         4                 
        20: lload_0                 
        21: lload_2                 
        22: bipush        63                
        24: lshr                    
        25: land                    
        26: ladd                    
        27: lstore        4                 
        29: lload         4                 
        31: lreturn                 
      LineNumberTable:
        line 1432: 0
        line 1433: 7
        line 1434: 18
        line 1435: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       32     0  x      J
           0       32     2  y      J
           7       25     4  result J
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int floorDiv(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: idiv                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: ixor                    
         7: ifge          21                
        10: iload_2                 
        11: iload_1                 
        12: imul                    
        13: iload_0                 
        14: if_icmpeq     21                
        17: iload_2                 
        18: iconst_1                
        19: isub                    
        20: ireturn                 
        21: iload_2                 
        22: ireturn                 
      LineNumberTable:
        line 1475: 0
        line 1477: 4
        line 1478: 17
        line 1480: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       23     0  x      I
           0       23     1  y      I
           4       19     2  q      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [int]
  
  public static long floorDiv(long, int);
    descriptor: (JI)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: lload_0                 
         1: iload_2                 
         2: i2l                     
         3: invokestatic  #143                // Method floorDiv:(JJ)J
         6: lreturn                 
      LineNumberTable:
        line 1509: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  x      J
           0        7     2  y      I
  
  public static long floorDiv(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: ldiv                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: lxor                    
         8: lconst_0                
         9: lcmp                    
        10: ifge          27                
        13: lload         4                 
        15: lload_2                 
        16: lmul                    
        17: lload_0                 
        18: lcmp                    
        19: ifeq          27                
        22: lload         4                 
        24: lconst_1                
        25: lsub                    
        26: lreturn                 
        27: lload         4                 
        29: lreturn                 
      LineNumberTable:
        line 1538: 0
        line 1540: 5
        line 1541: 22
        line 1543: 27
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  x      J
           0       30     2  y      J
           5       25     4  q      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [long]
  
  public static int floorMod(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: irem                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: ixor                    
         7: ifge          18                
        10: iload_2                 
        11: ifeq          18                
        14: iload_2                 
        15: iload_1                 
        16: iadd                    
        17: ireturn                 
        18: iload_2                 
        19: ireturn                 
      LineNumberTable:
        line 1586: 0
        line 1588: 4
        line 1589: 14
        line 1591: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  x      I
           0       20     1  y      I
           4       16     2  r      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [int]
  
  public static int floorMod(long, int);
    descriptor: (JI)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: lload_0                 
         1: iload_2                 
         2: i2l                     
         3: invokestatic  #146                // Method floorMod:(JJ)J
         6: l2i                     
         7: ireturn                 
      LineNumberTable:
        line 1618: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  x      J
           0        8     2  y      I
  
  public static long floorMod(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: lrem                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: lxor                    
         8: lconst_0                
         9: lcmp                    
        10: ifge          25                
        13: lload         4                 
        15: lconst_0                
        16: lcmp                    
        17: ifeq          25                
        20: lload         4                 
        22: lload_2                 
        23: ladd                    
        24: lreturn                 
        25: lload         4                 
        27: lreturn                 
      LineNumberTable:
        line 1644: 0
        line 1646: 5
        line 1647: 20
        line 1649: 25
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       28     0  x      J
           0       28     2  y      J
           5       23     4  r      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [long]
  
  public static int ceilDiv(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: idiv                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: ixor                    
         7: iflt          21                
        10: iload_2                 
        11: iload_1                 
        12: imul                    
        13: iload_0                 
        14: if_icmpeq     21                
        17: iload_2                 
        18: iconst_1                
        19: iadd                    
        20: ireturn                 
        21: iload_2                 
        22: ireturn                 
      LineNumberTable:
        line 1689: 0
        line 1691: 4
        line 1692: 17
        line 1694: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       23     0  x      I
           0       23     1  y      I
           4       19     2  q      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [int]
  
  public static long ceilDiv(long, int);
    descriptor: (JI)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: lload_0                 
         1: iload_2                 
         2: i2l                     
         3: invokestatic  #149                // Method ceilDiv:(JJ)J
         6: lreturn                 
      LineNumberTable:
        line 1723: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  x      J
           0        7     2  y      I
  
  public static long ceilDiv(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: ldiv                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: lxor                    
         8: lconst_0                
         9: lcmp                    
        10: iflt          27                
        13: lload         4                 
        15: lload_2                 
        16: lmul                    
        17: lload_0                 
        18: lcmp                    
        19: ifeq          27                
        22: lload         4                 
        24: lconst_1                
        25: ladd                    
        26: lreturn                 
        27: lload         4                 
        29: lreturn                 
      LineNumberTable:
        line 1752: 0
        line 1754: 5
        line 1755: 22
        line 1757: 27
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  x      J
           0       30     2  y      J
           5       25     4  q      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [long]
  
  public static int ceilMod(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=3, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: irem                    
         3: istore_2                
         4: iload_0                 
         5: iload_1                 
         6: ixor                    
         7: iflt          18                
        10: iload_2                 
        11: ifeq          18                
        14: iload_2                 
        15: iload_1                 
        16: isub                    
        17: ireturn                 
        18: iload_2                 
        19: ireturn                 
      LineNumberTable:
        line 1800: 0
        line 1802: 4
        line 1803: 14
        line 1805: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  x      I
           0       20     1  y      I
           4       16     2  r      I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [int]
  
  public static int ceilMod(long, int);
    descriptor: (JI)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: lload_0                 
         1: iload_2                 
         2: i2l                     
         3: invokestatic  #152                // Method ceilMod:(JJ)J
         6: l2i                     
         7: ireturn                 
      LineNumberTable:
        line 1832: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  x      J
           0        8     2  y      I
  
  public static long ceilMod(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=6, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: lrem                    
         3: lstore        4                 
         5: lload_0                 
         6: lload_2                 
         7: lxor                    
         8: lconst_0                
         9: lcmp                    
        10: iflt          25                
        13: lload         4                 
        15: lconst_0                
        16: lcmp                    
        17: ifeq          25                
        20: lload         4                 
        22: lload_2                 
        23: lsub                    
        24: lreturn                 
        25: lload         4                 
        27: lreturn                 
      LineNumberTable:
        line 1858: 0
        line 1860: 5
        line 1861: 20
        line 1863: 25
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       28     0  x      J
           0       28     2  y      J
           5       23     4  r      J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [long]
  
  public static int abs(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: iload_0                 
         1: ifge          9                 
         4: iload_0                 
         5: ineg                    
         6: goto          10                
         9: iload_0                 
        10: ireturn                 
      LineNumberTable:
        line 1883: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  a      I
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int absExact(int);
    descriptor: (I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: ldc           #137                // int -2147483648
         3: if_icmpne     16                
         6: new           #109                // class java/lang/ArithmeticException
         9: dup                     
        10: ldc           #155                // String Overflow to represent absolute value of Integer.MIN_VALUE
        12: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: iload_0                 
        17: invokestatic  #157                // Method abs:(I)I
        20: ireturn                 
      LineNumberTable:
        line 1905: 0
        line 1906: 6
        line 1909: 16
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  a      I
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
  
  public static long abs(long);
    descriptor: (J)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: lconst_0                
         2: lcmp                    
         3: ifge          11                
         6: lload_0                 
         7: lneg                    
         8: goto          12                
        11: lload_0                 
        12: lreturn                 
      LineNumberTable:
        line 1929: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  a      J
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long absExact(long);
    descriptor: (J)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: ldc2_w        #128                // long -9223372036854775808l
         4: lcmp                    
         5: ifne          18                
         8: new           #109                // class java/lang/ArithmeticException
        11: dup                     
        12: ldc           #160                // String Overflow to represent absolute value of Long.MIN_VALUE
        14: invokespecial #113                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        17: athrow                  
        18: lload_0                 
        19: invokestatic  #122                // Method abs:(J)J
        22: lreturn                 
      LineNumberTable:
        line 1951: 0
        line 1952: 8
        line 1955: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       23     0  a      J
      StackMapTable: number_of_entries = 1
        frame_type = 18 /* same */
  
  public static float abs(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
         4: ldc           #134                // int 2147483647
         6: iand                    
         7: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        10: freturn                 
      LineNumberTable:
        line 1981: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  a      F
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double abs(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
         4: ldc2_w        #135                // long 9223372036854775807l
         7: land                    
         8: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        11: dreturn                 
      LineNumberTable:
        line 2007: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  a      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int max(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: if_icmplt     9                 
         5: iload_0                 
         6: goto          10                
         9: iload_1                 
        10: ireturn                 
      LineNumberTable:
        line 2023: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  a      I
           0       11     1  b      I
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long max(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: lcmp                    
         3: iflt          10                
         6: lload_0                 
         7: goto          11                
        10: lload_2                 
        11: lreturn                 
      LineNumberTable:
        line 2037: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  a      J
           0       12     2  b      J
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
  
  public static float max(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=2
         0: fload_0                 
         1: fload_0                 
         2: fcmpl                   
         3: ifeq          8                 
         6: fload_0                 
         7: freturn                 
         8: fload_0                 
         9: fconst_0                
        10: fcmpl                   
        11: ifne          34                
        14: fload_1                 
        15: fconst_0                
        16: fcmpl                   
        17: ifne          34                
        20: fload_0                 
        21: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        24: i2l                     
        25: getstatic     #170                // Field negativeZeroFloatBits:J
        28: lcmp                    
        29: ifne          34                
        32: fload_1                 
        33: freturn                 
        34: fload_0                 
        35: fload_1                 
        36: fcmpl                   
        37: iflt          44                
        40: fload_0                 
        41: goto          45                
        44: fload_1                 
        45: freturn                 
      LineNumberTable:
        line 2064: 0
        line 2065: 6
        line 2066: 8
        line 2068: 21
        line 2070: 32
        line 2072: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  a      F
           0       46     1  b      F
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 25 /* same */
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ float ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double max(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: dload_0                 
         1: dload_0                 
         2: dcmpl                   
         3: ifeq          8                 
         6: dload_0                 
         7: dreturn                 
         8: dload_0                 
         9: dconst_0                
        10: dcmpl                   
        11: ifne          33                
        14: dload_2                 
        15: dconst_0                
        16: dcmpl                   
        17: ifne          33                
        20: dload_0                 
        21: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        24: getstatic     #174                // Field negativeZeroDoubleBits:J
        27: lcmp                    
        28: ifne          33                
        31: dload_2                 
        32: dreturn                 
        33: dload_0                 
        34: dload_2                 
        35: dcmpl                   
        36: iflt          43                
        39: dload_0                 
        40: goto          44                
        43: dload_2                 
        44: dreturn                 
      LineNumberTable:
        line 2095: 0
        line 2096: 6
        line 2097: 8
        line 2099: 21
        line 2101: 31
        line 2103: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       45     0  a      D
           0       45     2  b      D
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 24 /* same */
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ double ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int min(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: if_icmpgt     9                 
         5: iload_0                 
         6: goto          10                
         9: iload_1                 
        10: ireturn                 
      LineNumberTable:
        line 2118: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  a      I
           0       11     1  b      I
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static long min(long, long);
    descriptor: (JJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: lload_0                 
         1: lload_2                 
         2: lcmp                    
         3: ifgt          10                
         6: lload_0                 
         7: goto          11                
        10: lload_2                 
        11: lreturn                 
      LineNumberTable:
        line 2132: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  a      J
           0       12     2  b      J
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
  
  public static float min(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=2
         0: fload_0                 
         1: fload_0                 
         2: fcmpl                   
         3: ifeq          8                 
         6: fload_0                 
         7: freturn                 
         8: fload_0                 
         9: fconst_0                
        10: fcmpl                   
        11: ifne          34                
        14: fload_1                 
        15: fconst_0                
        16: fcmpl                   
        17: ifne          34                
        20: fload_1                 
        21: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        24: i2l                     
        25: getstatic     #170                // Field negativeZeroFloatBits:J
        28: lcmp                    
        29: ifne          34                
        32: fload_1                 
        33: freturn                 
        34: fload_0                 
        35: fload_1                 
        36: fcmpg                   
        37: ifgt          44                
        40: fload_0                 
        41: goto          45                
        44: fload_1                 
        45: freturn                 
      LineNumberTable:
        line 2155: 0
        line 2156: 6
        line 2157: 8
        line 2159: 21
        line 2161: 32
        line 2163: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  a      F
           0       46     1  b      F
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 25 /* same */
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ float ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double min(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: dload_0                 
         1: dload_0                 
         2: dcmpl                   
         3: ifeq          8                 
         6: dload_0                 
         7: dreturn                 
         8: dload_0                 
         9: dconst_0                
        10: dcmpl                   
        11: ifne          33                
        14: dload_2                 
        15: dconst_0                
        16: dcmpl                   
        17: ifne          33                
        20: dload_2                 
        21: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        24: getstatic     #174                // Field negativeZeroDoubleBits:J
        27: lcmp                    
        28: ifne          33                
        31: dload_2                 
        32: dreturn                 
        33: dload_0                 
        34: dload_2                 
        35: dcmpg                   
        36: ifgt          43                
        39: dload_0                 
        40: goto          44                
        43: dload_2                 
        44: dreturn                 
      LineNumberTable:
        line 2186: 0
        line 2187: 6
        line 2188: 8
        line 2190: 21
        line 2192: 31
        line 2194: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       45     0  a      D
           0       45     2  b      D
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 24 /* same */
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ double ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int clamp(long, int, int);
    descriptor: (JII)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=4, args_size=3
         0: iload_2                 
         1: iload_3                 
         2: if_icmple     36                
         5: new           #177                // class java/lang/IllegalArgumentException
         8: dup                     
         9: new           #179                // class java/lang/StringBuilder
        12: dup                     
        13: invokespecial #181                // Method java/lang/StringBuilder."<init>":()V
        16: iload_2                 
        17: invokevirtual #182                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        20: ldc           #186                // String  > 
        22: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: iload_3                 
        26: invokevirtual #182                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        29: invokevirtual #191                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        35: athrow                  
        36: iload_3                 
        37: i2l                     
        38: lload_0                 
        39: iload_2                 
        40: i2l                     
        41: invokestatic  #196                // Method max:(JJ)J
        44: invokestatic  #199                // Method min:(JJ)J
        47: l2i                     
        48: ireturn                 
      LineNumberTable:
        line 2217: 0
        line 2218: 5
        line 2220: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       49     0  value  J
           0       49     2  min    I
           0       49     3  max    I
      StackMapTable: number_of_entries = 1
        frame_type = 36 /* same */
  
  public static long clamp(long, long, long);
    descriptor: (JJJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=6, args_size=3
         0: lload_2                 
         1: lload         4                 
         3: lcmp                    
         4: ifle          39                
         7: new           #177                // class java/lang/IllegalArgumentException
        10: dup                     
        11: new           #179                // class java/lang/StringBuilder
        14: dup                     
        15: invokespecial #181                // Method java/lang/StringBuilder."<init>":()V
        18: lload_2                 
        19: invokevirtual #202                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        22: ldc           #186                // String  > 
        24: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: lload         4                 
        29: invokevirtual #202                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        32: invokevirtual #191                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        35: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        38: athrow                  
        39: lload         4                 
        41: lload_0                 
        42: lload_2                 
        43: invokestatic  #196                // Method max:(JJ)J
        46: invokestatic  #199                // Method min:(JJ)J
        49: lreturn                 
      LineNumberTable:
        line 2238: 0
        line 2239: 7
        line 2241: 39
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       50     0  value  J
           0       50     2  min    J
           0       50     4  max    J
      StackMapTable: number_of_entries = 1
        frame_type = 39 /* same */
  
  public static double clamp(double, double, double);
    descriptor: (DDD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=6, args_size=3
         0: dload_2                 
         1: dload         4                 
         3: dcmpg                   
         4: iflt          83                
         7: dload_2                 
         8: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
        11: ifeq          24                
        14: new           #177                // class java/lang/IllegalArgumentException
        17: dup                     
        18: ldc           #209                // String min is NaN
        20: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        23: athrow                  
        24: dload         4                 
        26: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
        29: ifeq          42                
        32: new           #177                // class java/lang/IllegalArgumentException
        35: dup                     
        36: ldc           #211                // String max is NaN
        38: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        41: athrow                  
        42: dload_2                 
        43: dload         4                 
        45: invokestatic  #213                // Method java/lang/Double.compare:(DD)I
        48: ifle          83                
        51: new           #177                // class java/lang/IllegalArgumentException
        54: dup                     
        55: new           #179                // class java/lang/StringBuilder
        58: dup                     
        59: invokespecial #181                // Method java/lang/StringBuilder."<init>":()V
        62: dload_2                 
        63: invokevirtual #217                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
        66: ldc           #186                // String  > 
        68: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        71: dload         4                 
        73: invokevirtual #217                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
        76: invokevirtual #191                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        79: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        82: athrow                  
        83: dload         4                 
        85: dload_0                 
        86: dload_2                 
        87: invokestatic  #220                // Method max:(DD)D
        90: invokestatic  #222                // Method min:(DD)D
        93: dreturn                 
      LineNumberTable:
        line 2269: 0
        line 2270: 7
        line 2271: 14
        line 2273: 24
        line 2274: 32
        line 2276: 42
        line 2277: 51
        line 2282: 83
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       94     0  value  D
           0       94     2  min    D
           0       94     4  max    D
      StackMapTable: number_of_entries = 3
        frame_type = 24 /* same */
        frame_type = 17 /* same */
        frame_type = 40 /* same */
  
  public static float clamp(float, float, float);
    descriptor: (FFF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=3
         0: fload_1                 
         1: fload_2                 
         2: fcmpg                   
         3: iflt          79                
         6: fload_1                 
         7: invokestatic  #224                // Method java/lang/Float.isNaN:(F)Z
        10: ifeq          23                
        13: new           #177                // class java/lang/IllegalArgumentException
        16: dup                     
        17: ldc           #209                // String min is NaN
        19: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        22: athrow                  
        23: fload_2                 
        24: invokestatic  #224                // Method java/lang/Float.isNaN:(F)Z
        27: ifeq          40                
        30: new           #177                // class java/lang/IllegalArgumentException
        33: dup                     
        34: ldc           #211                // String max is NaN
        36: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        39: athrow                  
        40: fload_1                 
        41: fload_2                 
        42: invokestatic  #227                // Method java/lang/Float.compare:(FF)I
        45: ifle          79                
        48: new           #177                // class java/lang/IllegalArgumentException
        51: dup                     
        52: new           #179                // class java/lang/StringBuilder
        55: dup                     
        56: invokespecial #181                // Method java/lang/StringBuilder."<init>":()V
        59: fload_1                 
        60: invokevirtual #230                // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
        63: ldc           #186                // String  > 
        65: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        68: fload_2                 
        69: invokevirtual #230                // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
        72: invokevirtual #191                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        75: invokespecial #195                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        78: athrow                  
        79: fload_2                 
        80: fload_0                 
        81: fload_1                 
        82: invokestatic  #233                // Method max:(FF)F
        85: invokestatic  #236                // Method min:(FF)F
        88: freturn                 
      LineNumberTable:
        line 2310: 0
        line 2311: 6
        line 2312: 13
        line 2314: 23
        line 2315: 30
        line 2317: 40
        line 2318: 48
        line 2323: 79
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       89     0  value  F
           0       89     1  min    F
           0       89     2  max    F
      StackMapTable: number_of_entries = 3
        frame_type = 23 /* same */
        frame_type = 16 /* same */
        frame_type = 38 /* same */
  
  public static double fma(double, double, double);
    descriptor: (DDD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=5, locals=13, args_size=3
         0: dload_0                 
         1: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
         4: ifne          22                
         7: dload_2                 
         8: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
        11: ifne          22                
        14: dload         4                 
        16: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
        19: ifeq          26                
        22: ldc2_w        #238                // double NaNd
        25: dreturn                 
        26: dload_0                 
        27: invokestatic  #240                // Method java/lang/Double.isInfinite:(D)Z
        30: istore        6                 
        32: dload_2                 
        33: invokestatic  #240                // Method java/lang/Double.isInfinite:(D)Z
        36: istore        7                 
        38: dload         4                 
        40: invokestatic  #240                // Method java/lang/Double.isInfinite:(D)Z
        43: istore        8                 
        45: iload         6                 
        47: ifne          60                
        50: iload         7                 
        52: ifne          60                
        55: iload         8                 
        57: ifeq          166               
        60: iload         6                 
        62: ifeq          71                
        65: dload_2                 
        66: dconst_0                
        67: dcmpl                   
        68: ifeq          82                
        71: iload         7                 
        73: ifeq          86                
        76: dload_0                 
        77: dconst_0                
        78: dcmpl                   
        79: ifne          86                
        82: ldc2_w        #238                // double NaNd
        85: dreturn                 
        86: dload_0                 
        87: dload_2                 
        88: dmul                    
        89: dstore        11                
        91: dload         11                
        93: invokestatic  #240                // Method java/lang/Double.isInfinite:(D)Z
        96: ifeq          134               
        99: iload         6                 
       101: ifne          134               
       104: iload         7                 
       106: ifne          134               
       109: getstatic     #243                // Field $assertionsDisabled:Z
       112: ifne          131               
       115: dload         4                 
       117: invokestatic  #240                // Method java/lang/Double.isInfinite:(D)Z
       120: ifne          131               
       123: new           #247                // class java/lang/AssertionError
       126: dup                     
       127: invokespecial #249                // Method java/lang/AssertionError."<init>":()V
       130: athrow                  
       131: dload         4                 
       133: dreturn                 
       134: dload         11                
       136: dload         4                 
       138: dadd                    
       139: dstore        9                 
       141: getstatic     #243                // Field $assertionsDisabled:Z
       144: ifne          163               
       147: dload         9                 
       149: invokestatic  #250                // Method java/lang/Double.isFinite:(D)Z
       152: ifeq          163               
       155: new           #247                // class java/lang/AssertionError
       158: dup                     
       159: invokespecial #249                // Method java/lang/AssertionError."<init>":()V
       162: athrow                  
       163: dload         9                 
       165: dreturn                 
       166: new           #253                // class java/math/BigDecimal
       169: dup                     
       170: dload_0                 
       171: invokespecial #255                // Method java/math/BigDecimal."<init>":(D)V
       174: new           #253                // class java/math/BigDecimal
       177: dup                     
       178: dload_2                 
       179: invokespecial #255                // Method java/math/BigDecimal."<init>":(D)V
       182: invokevirtual #258                // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       185: astore        11                
       187: dload         4                 
       189: dconst_0                
       190: dcmpl                   
       191: ifne          219               
       194: dload_0                 
       195: dconst_0                
       196: dcmpl                   
       197: ifeq          206               
       200: dload_2                 
       201: dconst_0                
       202: dcmpl                   
       203: ifne          213               
       206: dload_0                 
       207: dload_2                 
       208: dmul                    
       209: dload         4                 
       211: dadd                    
       212: dreturn                 
       213: aload         11                
       215: invokevirtual #262                // Method java/math/BigDecimal.doubleValue:()D
       218: dreturn                 
       219: aload         11                
       221: new           #253                // class java/math/BigDecimal
       224: dup                     
       225: dload         4                 
       227: invokespecial #255                // Method java/math/BigDecimal."<init>":(D)V
       230: invokevirtual #265                // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
       233: invokevirtual #262                // Method java/math/BigDecimal.doubleValue:()D
       236: dreturn                 
      LineNumberTable:
        line 2390: 0
        line 2391: 22
        line 2393: 26
        line 2394: 32
        line 2395: 38
        line 2398: 45
        line 2399: 60
        line 2401: 82
        line 2403: 86
        line 2404: 91
        line 2407: 109
        line 2408: 131
        line 2410: 134
        line 2411: 141
        line 2412: 163
        line 2415: 166
        line 2416: 187
        line 2422: 194
        line 2423: 206
        line 2431: 213
        line 2434: 219
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          91       75    11  product D
         141       25     9  result D
         187       50    11  product Ljava/math/BigDecimal;
          32      205     6  infiniteA Z
          38      199     7  infiniteB Z
          45      192     8  infiniteC Z
           0      237     0  a      D
           0      237     2  b      D
           0      237     4  c      D
      StackMapTable: number_of_entries = 13
        frame_type = 22 /* same */
        frame_type = 3 /* same */
        frame_type = 254 /* append */
          offset_delta = 33
          locals = [int, int, int]
        frame_type = 10 /* same */
        frame_type = 10 /* same */
        frame_type = 3 /* same */
        frame_type = 254 /* append */
          offset_delta = 44
          locals = [top, top, double]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [double, double, double, int, int, int, double, double]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 254 /* append */
          offset_delta = 39
          locals = [top, top, class java/math/BigDecimal]
        frame_type = 6 /* same */
        frame_type = 5 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static float fma(float, float, float);
    descriptor: (FFF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=3, args_size=3
         0: fload_0                 
         1: invokestatic  #268                // Method java/lang/Float.isFinite:(F)Z
         4: ifeq          69                
         7: fload_1                 
         8: invokestatic  #268                // Method java/lang/Float.isFinite:(F)Z
        11: ifeq          69                
        14: fload_2                 
        15: invokestatic  #268                // Method java/lang/Float.isFinite:(F)Z
        18: ifeq          69                
        21: fload_0                 
        22: f2d                     
        23: dconst_0                
        24: dcmpl                   
        25: ifeq          35                
        28: fload_1                 
        29: f2d                     
        30: dconst_0                
        31: dcmpl                   
        32: ifne          41                
        35: fload_0                 
        36: fload_1                 
        37: fmul                    
        38: fload_2                 
        39: fadd                    
        40: freturn                 
        41: new           #253                // class java/math/BigDecimal
        44: dup                     
        45: fload_0                 
        46: f2d                     
        47: fload_1                 
        48: f2d                     
        49: dmul                    
        50: invokespecial #255                // Method java/math/BigDecimal."<init>":(D)V
        53: new           #253                // class java/math/BigDecimal
        56: dup                     
        57: fload_2                 
        58: f2d                     
        59: invokespecial #255                // Method java/math/BigDecimal."<init>":(D)V
        62: invokevirtual #265                // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
        65: invokevirtual #270                // Method java/math/BigDecimal.floatValue:()F
        68: freturn                 
        69: fload_0                 
        70: f2d                     
        71: fload_1                 
        72: f2d                     
        73: fload_2                 
        74: f2d                     
        75: invokestatic  #274                // Method fma:(DDD)D
        78: d2f                     
        79: freturn                 
      LineNumberTable:
        line 2492: 0
        line 2493: 21
        line 2494: 35
        line 2496: 41
        line 2497: 62
        line 2498: 65
        line 2496: 68
        line 2505: 69
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       80     0  a      F
           0       80     1  b      F
           0       80     2  c      F
      StackMapTable: number_of_entries = 3
        frame_type = 35 /* same */
        frame_type = 5 /* same */
        frame_type = 27 /* same */
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double ulp(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=1
         0: dload_0                 
         1: invokestatic  #278                // Method getExponent:(D)I
         4: istore_2                
         5: iload_2                 
         6: lookupswitch  { // 2
                     -1023: 39
                      1024: 32
                   default: 45
            }
        32: dload_0                 
        33: invokestatic  #282                // Method abs:(D)D
        36: goto          102               
        39: ldc2_w        #284                // double 4.9E-324d
        42: goto          102               
        45: getstatic     #243                // Field $assertionsDisabled:Z
        48: ifne          73                
        51: iload_2                 
        52: sipush        1023              
        55: if_icmpgt     65                
        58: iload_2                 
        59: sipush        -1022             
        62: if_icmpge     73                
        65: new           #247                // class java/lang/AssertionError
        68: dup                     
        69: invokespecial #249                // Method java/lang/AssertionError."<init>":()V
        72: athrow                  
        73: iload_2                 
        74: bipush        52                
        76: isub                    
        77: istore_2                
        78: iload_2                 
        79: sipush        -1022             
        82: if_icmplt     92                
        85: iload_2                 
        86: invokestatic  #286                // Method powerOfTwoD:(I)D
        89: goto          102               
        92: lconst_1                
        93: iload_2                 
        94: sipush        -1074             
        97: isub                    
        98: lshl                    
        99: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
       102: dreturn                 
      LineNumberTable:
        line 2533: 0
        line 2535: 5
        line 2536: 32
        line 2537: 39
        line 2539: 45
        line 2542: 73
        line 2543: 78
        line 2544: 85
        line 2549: 92
        line 2535: 102
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      103     0  d      D
           5       98     2  exp    I
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [int]
        frame_type = 6 /* same */
        frame_type = 5 /* same */
        frame_type = 19 /* same */
        frame_type = 7 /* same */
        frame_type = 18 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ double ]
  
  public static float ulp(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=1
         0: fload_0                 
         1: invokestatic  #290                // Method getExponent:(F)I
         4: istore_1                
         5: iload_1                 
         6: lookupswitch  { // 2
                      -127: 39
                       128: 32
                   default: 45
            }
        32: fload_0                 
        33: invokestatic  #292                // Method abs:(F)F
        36: goto          99                
        39: ldc_w         #295                // float 1.4E-45f
        42: goto          99                
        45: getstatic     #243                // Field $assertionsDisabled:Z
        48: ifne          71                
        51: iload_1                 
        52: bipush        127               
        54: if_icmpgt     63                
        57: iload_1                 
        58: bipush        -126              
        60: if_icmpge     71                
        63: new           #247                // class java/lang/AssertionError
        66: dup                     
        67: invokespecial #249                // Method java/lang/AssertionError."<init>":()V
        70: athrow                  
        71: iload_1                 
        72: bipush        23                
        74: isub                    
        75: istore_1                
        76: iload_1                 
        77: bipush        -126              
        79: if_icmplt     89                
        82: iload_1                 
        83: invokestatic  #296                // Method powerOfTwoF:(I)F
        86: goto          99                
        89: iconst_1                
        90: iload_1                 
        91: sipush        -149              
        94: isub                    
        95: ishl                    
        96: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        99: freturn                 
      LineNumberTable:
        line 2580: 0
        line 2582: 5
        line 2583: 32
        line 2584: 39
        line 2586: 45
        line 2589: 71
        line 2590: 76
        line 2591: 82
        line 2596: 89
        line 2582: 99
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      100     0  f      F
           5       95     1  exp    I
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [int]
        frame_type = 6 /* same */
        frame_type = 5 /* same */
        frame_type = 17 /* same */
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ float ]
  
  public static double signum(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: dload_0                 
         1: dconst_0                
         2: dcmpl                   
         3: ifeq          13                
         6: dload_0                 
         7: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
        10: ifeq          17                
        13: dload_0                 
        14: goto          22                
        17: dconst_1                
        18: dload_0                 
        19: invokestatic  #299                // Method copySign:(DD)D
        22: dreturn                 
      LineNumberTable:
        line 2622: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       23     0  d      D
      StackMapTable: number_of_entries = 3
        frame_type = 13 /* same */
        frame_type = 3 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ double ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static float signum(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: fload_0                 
         1: fconst_0                
         2: fcmpl                   
         3: ifeq          13                
         6: fload_0                 
         7: invokestatic  #224                // Method java/lang/Float.isNaN:(F)Z
        10: ifeq          17                
        13: fload_0                 
        14: goto          22                
        17: fconst_1                
        18: fload_0                 
        19: invokestatic  #302                // Method copySign:(FF)F
        22: freturn                 
      LineNumberTable:
        line 2644: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       23     0  f      F
      StackMapTable: number_of_entries = 3
        frame_type = 13 /* same */
        frame_type = 3 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ float ]
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double sinh(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #304                // Method java/lang/StrictMath.sinh:(D)D
         4: dreturn                 
      LineNumberTable:
        line 2673: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  x      D
  
  public static double cosh(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #307                // Method java/lang/StrictMath.cosh:(D)D
         4: dreturn                 
      LineNumberTable:
        line 2701: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  x      D
  
  public static double tanh(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #310                // Method java/lang/StrictMath.tanh:(D)D
         4: dreturn                 
      LineNumberTable:
        line 2742: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  x      D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static double hypot(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: dload_0                 
         1: dload_2                 
         2: invokestatic  #313                // Method java/lang/StrictMath.hypot:(DD)D
         5: dreturn                 
      LineNumberTable:
        line 2772: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  x      D
           0        6     2  y      D
  
  public static double expm1(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #316                // Method java/lang/StrictMath.expm1:(D)D
         4: dreturn                 
      LineNumberTable:
        line 2810: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  x      D
  
  public static double log1p(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #319                // Method java/lang/StrictMath.log1p:(D)D
         4: dreturn                 
      LineNumberTable:
        line 2847: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  x      D
  
  public static double copySign(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=4, args_size=2
         0: dload_2                 
         1: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
         4: ldc2_w        #128                // long -9223372036854775808l
         7: land                    
         8: dload_0                 
         9: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        12: ldc2_w        #135                // long 9223372036854775807l
        15: land                    
        16: lor                     
        17: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        20: dreturn                 
      LineNumberTable:
        line 2871: 0
        line 2873: 9
        line 2871: 17
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  magnitude D
           0       21     2  sign   D
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static float copySign(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=2
         0: fload_1                 
         1: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
         4: ldc           #137                // int -2147483648
         6: iand                    
         7: fload_0                 
         8: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        11: ldc           #134                // int 2147483647
        13: iand                    
        14: ior                     
        15: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        18: freturn                 
      LineNumberTable:
        line 2899: 0
        line 2901: 8
        line 2899: 15
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       19     0  magnitude F
           0       19     1  sign   F
    RuntimeVisibleAnnotations:
      0: #376()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static int getExponent(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
         4: ldc           #78                 // int 2139095040
         6: iand                    
         7: bipush        23                
         9: ishr                    
        10: bipush        127               
        12: isub                    
        13: ireturn                 
      LineNumberTable:
        line 2930: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  f      F
  
  public static int getExponent(double);
    descriptor: (D)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
         4: ldc2_w        #87                 // long 9218868437227405312l
         7: land                    
         8: bipush        52                
        10: lshr                    
        11: ldc2_w        #322                // long 1023l
        14: lsub                    
        15: l2i                     
        16: ireturn                 
      LineNumberTable:
        line 2958: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       17     0  d      D
  
  public static double nextAfter(double, double);
    descriptor: (DD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=6, args_size=2
         0: dload_0                 
         1: dload_2                 
         2: dcmpl                   
         3: ifle          43                
         6: dload_0                 
         7: dconst_0                
         8: dcmpl                   
         9: ifeq          39                
        12: dload_0                 
        13: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        16: lstore        4                 
        18: lload         4                 
        20: lload         4                 
        22: lconst_0                
        23: lcmp                    
        24: ifle          33                
        27: ldc2_w        #130                // long -1l
        30: goto          34                
        33: lconst_1                
        34: ladd                    
        35: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        38: dreturn                 
        39: ldc2_w        #324                // double -4.9E-324d
        42: dreturn                 
        43: dload_0                 
        44: dload_2                 
        45: dcmpg                   
        46: ifge          78                
        49: dload_0                 
        50: dconst_0                
        51: dadd                    
        52: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        55: lstore        4                 
        57: lload         4                 
        59: lload         4                 
        61: lconst_0                
        62: lcmp                    
        63: iflt          70                
        66: lconst_1                
        67: goto          73                
        70: ldc2_w        #130                // long -1l
        73: ladd                    
        74: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        77: dreturn                 
        78: dload_0                 
        79: dload_2                 
        80: dcmpl                   
        81: ifne          86                
        84: dload_2                 
        85: dreturn                 
        86: dload_0                 
        87: dload_2                 
        88: dadd                    
        89: dreturn                 
      LineNumberTable:
        line 3028: 0
        line 3029: 6
        line 3030: 12
        line 3031: 18
        line 3033: 39
        line 3035: 43
        line 3038: 49
        line 3039: 57
        line 3040: 78
        line 3041: 84
        line 3043: 86
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          18       21     4  transducer J
          57       21     4  transducer J
           0       90     0  start  D
           0       90     2  direction D
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [double, double, long]
          stack = [long]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [double, double, long]
          stack = [long, long]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [double, double, long]
          stack = [long]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [double, double, long]
          stack = [long, long]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 7 /* same */
  
  public static float nextAfter(float, double);
    descriptor: (FD)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: fload_0                 
         1: f2d                     
         2: dload_1                 
         3: dcmpl                   
         4: ifle          37                
         7: fload_0                 
         8: fconst_0                
         9: fcmpl                   
        10: ifeq          33                
        13: fload_0                 
        14: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        17: istore_3                
        18: iload_3                 
        19: iload_3                 
        20: ifle          27                
        23: iconst_m1               
        24: goto          28                
        27: iconst_1                
        28: iadd                    
        29: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        32: freturn                 
        33: ldc_w         #326                // float -1.4E-45f
        36: freturn                 
        37: fload_0                 
        38: f2d                     
        39: dload_1                 
        40: dcmpg                   
        41: ifge          66                
        44: fload_0                 
        45: fconst_0                
        46: fadd                    
        47: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        50: istore_3                
        51: iload_3                 
        52: iload_3                 
        53: iflt          60                
        56: iconst_1                
        57: goto          61                
        60: iconst_m1               
        61: iadd                    
        62: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        65: freturn                 
        66: fload_0                 
        67: f2d                     
        68: dload_1                 
        69: dcmpl                   
        70: ifne          76                
        73: dload_1                 
        74: d2f                     
        75: freturn                 
        76: fload_0                 
        77: dload_1                 
        78: d2f                     
        79: fadd                    
        80: freturn                 
      LineNumberTable:
        line 3112: 0
        line 3113: 7
        line 3114: 13
        line 3115: 18
        line 3117: 33
        line 3119: 37
        line 3122: 44
        line 3123: 51
        line 3124: 66
        line 3125: 73
        line 3127: 76
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          18       15     3  transducer I
          51       15     3  transducer I
           0       81     0  start  F
           0       81     1  direction D
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [float, double, int]
          stack = [int]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [float, double, int]
          stack = [int, int]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [float, double, int]
          stack = [int]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [float, double, int]
          stack = [int, int]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 9 /* same */
  
  public static double nextUp(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=4, args_size=1
         0: dload_0                 
         1: ldc2_w        #327                // double Infinityd
         4: dcmpg                   
         5: ifge          34                
         8: dload_0                 
         9: dconst_0                
        10: dadd                    
        11: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        14: lstore_2                
        15: lload_2                 
        16: lload_2                 
        17: lconst_0                
        18: lcmp                    
        19: iflt          26                
        22: lconst_1                
        23: goto          29                
        26: ldc2_w        #130                // long -1l
        29: ladd                    
        30: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        33: dreturn                 
        34: dload_0                 
        35: dreturn                 
      LineNumberTable:
        line 3161: 0
        line 3163: 8
        line 3164: 15
        line 3166: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          15       19     2  transducer J
           0       36     0  d      D
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [double, long]
          stack = [long]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [double, long]
          stack = [long, long]
        frame_type = 250 /* chop */
          offset_delta = 4
  
  public static float nextUp(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: fload_0                 
         1: ldc_w         #329                // float Infinityf
         4: fcmpg                   
         5: ifge          30                
         8: fload_0                 
         9: fconst_0                
        10: fadd                    
        11: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        14: istore_1                
        15: iload_1                 
        16: iload_1                 
        17: iflt          24                
        20: iconst_1                
        21: goto          25                
        24: iconst_m1               
        25: iadd                    
        26: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        29: freturn                 
        30: fload_0                 
        31: freturn                 
      LineNumberTable:
        line 3200: 0
        line 3202: 8
        line 3203: 15
        line 3205: 30
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          15       15     1  transducer I
           0       32     0  f      F
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [float, int]
          stack = [int]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [float, int]
          stack = [int, int]
        frame_type = 250 /* chop */
          offset_delta = 4
  
  public static double nextDown(double);
    descriptor: (D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=2, args_size=1
         0: dload_0                 
         1: invokestatic  #205                // Method java/lang/Double.isNaN:(D)Z
         4: ifne          15                
         7: dload_0                 
         8: ldc2_w        #330                // double -Infinityd
        11: dcmpl                   
        12: ifne          17                
        15: dload_0                 
        16: dreturn                 
        17: dload_0                 
        18: dconst_0                
        19: dcmpl                   
        20: ifne          27                
        23: ldc2_w        #324                // double -4.9E-324d
        26: dreturn                 
        27: dload_0                 
        28: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        31: dload_0                 
        32: dconst_0                
        33: dcmpl                   
        34: ifle          43                
        37: ldc2_w        #130                // long -1l
        40: goto          44                
        43: lconst_1                
        44: ladd                    
        45: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        48: dreturn                 
      LineNumberTable:
        line 3238: 0
        line 3239: 15
        line 3241: 17
        line 3242: 23
        line 3244: 27
        line 3245: 31
        line 3244: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       49     0  d      D
      StackMapTable: number_of_entries = 5
        frame_type = 15 /* same */
        frame_type = 1 /* same */
        frame_type = 9 /* same */
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [double]
          stack = [long, long]
  
  public static float nextDown(float);
    descriptor: (F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #224                // Method java/lang/Float.isNaN:(F)Z
         4: ifne          15                
         7: fload_0                 
         8: ldc_w         #332                // float -Infinityf
        11: fcmpl                   
        12: ifne          17                
        15: fload_0                 
        16: freturn                 
        17: fload_0                 
        18: fconst_0                
        19: fcmpl                   
        20: ifne          27                
        23: ldc_w         #326                // float -1.4E-45f
        26: freturn                 
        27: fload_0                 
        28: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        31: fload_0                 
        32: fconst_0                
        33: fcmpl                   
        34: ifle          41                
        37: iconst_m1               
        38: goto          42                
        41: iconst_1                
        42: iadd                    
        43: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        46: freturn                 
      LineNumberTable:
        line 3278: 0
        line 3279: 15
        line 3281: 17
        line 3282: 23
        line 3284: 27
        line 3285: 31
        line 3284: 43
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       47     0  f      F
      StackMapTable: number_of_entries = 5
        frame_type = 15 /* same */
        frame_type = 1 /* same */
        frame_type = 9 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [float]
          stack = [int, int]
  
  public static double scalb(double, int);
    descriptor: (DI)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: iload_2                 
         1: sipush        -1023             
         4: if_icmple     83                
         7: iload_2                 
         8: sipush        1023              
        11: if_icmpgt     21                
        14: dload_0                 
        15: iload_2                 
        16: invokestatic  #333                // Method primPowerOfTwoD:(I)D
        19: dmul                    
        20: dreturn                 
        21: iload_2                 
        22: sipush        2046              
        25: if_icmpgt     43                
        28: dload_0                 
        29: iload_2                 
        30: sipush        1023              
        33: isub                    
        34: invokestatic  #333                // Method primPowerOfTwoD:(I)D
        37: dmul                    
        38: ldc2_w        #336                // double 8.98846567431158E307d
        41: dmul                    
        42: dreturn                 
        43: iload_2                 
        44: sipush        2098              
        47: if_icmpge     69                
        50: dload_0                 
        51: iload_2                 
        52: sipush        2046              
        55: isub                    
        56: invokestatic  #333                // Method primPowerOfTwoD:(I)D
        59: dmul                    
        60: ldc2_w        #336                // double 8.98846567431158E307d
        63: dmul                    
        64: ldc2_w        #336                // double 8.98846567431158E307d
        67: dmul                    
        68: dreturn                 
        69: dload_0                 
        70: ldc2_w        #336                // double 8.98846567431158E307d
        73: dmul                    
        74: ldc2_w        #336                // double 8.98846567431158E307d
        77: dmul                    
        78: ldc2_w        #336                // double 8.98846567431158E307d
        81: dmul                    
        82: dreturn                 
        83: iload_2                 
        84: sipush        -2046             
        87: if_icmple     105               
        90: dload_0                 
        91: iload_2                 
        92: sipush        1023              
        95: iadd                    
        96: invokestatic  #333                // Method primPowerOfTwoD:(I)D
        99: dmul                    
       100: ldc2_w        #338                // double 1.1125369292536007E-308d
       103: dmul                    
       104: dreturn                 
       105: iload_2                 
       106: sipush        -2099             
       109: if_icmple     131               
       112: dload_0                 
       113: iload_2                 
       114: sipush        2046              
       117: iadd                    
       118: invokestatic  #333                // Method primPowerOfTwoD:(I)D
       121: dmul                    
       122: ldc2_w        #338                // double 1.1125369292536007E-308d
       125: dmul                    
       126: ldc2_w        #338                // double 1.1125369292536007E-308d
       129: dmul                    
       130: dreturn                 
       131: dload_0                 
       132: ldc2_w        #284                // double 4.9E-324d
       135: dmul                    
       136: ldc2_w        #284                // double 4.9E-324d
       139: dmul                    
       140: dreturn                 
      LineNumberTable:
        line 3323: 0
        line 3324: 7
        line 3325: 14
        line 3327: 21
        line 3328: 28
        line 3330: 43
        line 3331: 50
        line 3333: 69
        line 3335: 83
        line 3336: 90
        line 3338: 105
        line 3339: 112
        line 3341: 131
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      141     0  d      D
           0      141     2  scaleFactor I
      StackMapTable: number_of_entries = 6
        frame_type = 21 /* same */
        frame_type = 21 /* same */
        frame_type = 25 /* same */
        frame_type = 13 /* same */
        frame_type = 21 /* same */
        frame_type = 25 /* same */
  
  public static float scalb(float, int);
    descriptor: (FI)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: sipush        278               
         3: istore_2                
         4: iload_1                 
         5: sipush        278               
         8: invokestatic  #340                // Method min:(II)I
        11: sipush        -278              
        14: invokestatic  #343                // Method max:(II)I
        17: istore_1                
        18: fload_0                 
        19: f2d                     
        20: iload_1                 
        21: invokestatic  #286                // Method powerOfTwoD:(I)D
        24: dmul                    
        25: d2f                     
        26: freturn                 
      LineNumberTable:
        line 3379: 0
        line 3383: 4
        line 3392: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       27     0  f      F
           0       27     1  scaleFactor I
           4       23     2  MAX_SCALE I
  
  static double powerOfTwoD(int);
    descriptor: (I)D
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: getstatic     #243                // Field $assertionsDisabled:Z
         3: ifne          28                
         6: iload_0                 
         7: sipush        -1022             
        10: if_icmplt     20                
        13: iload_0                 
        14: sipush        1023              
        17: if_icmple     28                
        20: new           #247                // class java/lang/AssertionError
        23: dup                     
        24: invokespecial #249                // Method java/lang/AssertionError."<init>":()V
        27: athrow                  
        28: iload_0                 
        29: invokestatic  #333                // Method primPowerOfTwoD:(I)D
        32: dreturn                 
      LineNumberTable:
        line 3399: 0
        line 3400: 28
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       33     0  n      I
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 7 /* same */
  
  private static double primPowerOfTwoD(int);
    descriptor: (I)D
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: sipush        1023              
         4: iadd                    
         5: i2l                     
         6: bipush        52                
         8: lshl                    
         9: invokestatic  #166                // Method java/lang/Double.longBitsToDouble:(J)D
        12: dreturn                 
      LineNumberTable:
        line 3408: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  n      I
  
  static float powerOfTwoF(int);
    descriptor: (I)F
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: getstatic     #243                // Field $assertionsDisabled:Z
         3: ifne          26                
         6: iload_0                 
         7: bipush        -126              
         9: if_icmplt     18                
        12: iload_0                 
        13: bipush        127               
        15: if_icmple     26                
        18: new           #247                // class java/lang/AssertionError
        21: dup                     
        22: invokespecial #249                // Method java/lang/AssertionError."<init>":()V
        25: athrow                  
        26: iload_0                 
        27: bipush        127               
        29: iadd                    
        30: bipush        23                
        32: ishl                    
        33: ldc           #78                 // int 2139095040
        35: iand                    
        36: invokestatic  #162                // Method java/lang/Float.intBitsToFloat:(I)F
        39: freturn                 
      LineNumberTable:
        line 3415: 0
        line 3416: 26
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       40     0  n      I
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 7 /* same */
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: ldc           #1                  // class java/lang/Math
         2: invokevirtual #345                // Method java/lang/Class.desiredAssertionStatus:()Z
         5: ifne          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: putstatic     #243                // Field $assertionsDisabled:Z
        16: ldc_w         #351                // float -0.0f
        19: invokestatic  #70                 // Method java/lang/Float.floatToRawIntBits:(F)I
        22: i2l                     
        23: putstatic     #170                // Field negativeZeroFloatBits:J
        26: ldc2_w        #352                // double -0.0d
        29: invokestatic  #81                 // Method java/lang/Double.doubleToRawLongBits:(D)J
        32: putstatic     #174                // Field negativeZeroDoubleBits:J
        35: return                  
      LineNumberTable:
        line 129: 0
        line 2041: 16
        line 2042: 26
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
SourceFile: "Math.java"
NestMembers:
  java/lang/Math$RandomNumberGeneratorHolder
InnerClasses:
  private static final #459= #98 of #1;       // RandomNumberGeneratorHolder=class java/lang/Math$RandomNumberGeneratorHolder of class java/lang/Math
