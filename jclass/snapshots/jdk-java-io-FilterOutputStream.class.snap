---
source: jclass/src/lib.rs
expression: display
---
public class java.io.FilterOutputStream extends java.io.OutputStream
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                      //java/io/FilterOutputStream
  super_class: #2                      //java/io/OutputStream
  interfaces: 0, fields: 3, methods: 6, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3            // java/io/OutputStream."<init>":()V
   #2 = Class              #4               // java/io/OutputStream
   #3 = NameAndType        #5:#6            // "<init>":()V
   #4 = Utf8               java/io/OutputStream
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Class              #8               // java/lang/Object
   #8 = Utf8               java/lang/Object
   #9 = Methodref          #7.#3            // java/lang/Object."<init>":()V
  #10 = Fieldref           #11.#12          // java/io/FilterOutputStream.closeLock:Ljava/lang/Object;
  #11 = Class              #13              // java/io/FilterOutputStream
  #12 = NameAndType        #14:#15          // closeLock:Ljava/lang/Object;
  #13 = Utf8               java/io/FilterOutputStream
  #14 = Utf8               closeLock
  #15 = Utf8               Ljava/lang/Object;
  #16 = Fieldref           #11.#17          // java/io/FilterOutputStream.out:Ljava/io/OutputStream;
  #17 = NameAndType        #18:#19          // out:Ljava/io/OutputStream;
  #18 = Utf8               out
  #19 = Utf8               Ljava/io/OutputStream;
  #20 = Methodref          #2.#21           // java/io/OutputStream.write:(I)V
  #21 = NameAndType        #22:#23          // write:(I)V
  #22 = Utf8               write
  #23 = Utf8               (I)V
  #24 = Methodref          #11.#25          // java/io/FilterOutputStream.write:([BII)V
  #25 = NameAndType        #22:#26          // write:([BII)V
  #26 = Utf8               ([BII)V
  #27 = Methodref          #28.#29          // java/util/Objects.checkFromIndexSize:(III)I
  #28 = Class              #30              // java/util/Objects
  #29 = NameAndType        #31:#32          // checkFromIndexSize:(III)I
  #30 = Utf8               java/util/Objects
  #31 = Utf8               checkFromIndexSize
  #32 = Utf8               (III)I
  #33 = Methodref          #11.#21          // java/io/FilterOutputStream.write:(I)V
  #34 = Methodref          #2.#35           // java/io/OutputStream.flush:()V
  #35 = NameAndType        #36:#6           // flush:()V
  #36 = Utf8               flush
  #37 = Fieldref           #11.#38          // java/io/FilterOutputStream.closed:Z
  #38 = NameAndType        #39:#40          // closed:Z
  #39 = Utf8               closed
  #40 = Utf8               Z
  #41 = Methodref          #11.#35          // java/io/FilterOutputStream.flush:()V
  #42 = Methodref          #2.#43           // java/io/OutputStream.close:()V
  #43 = NameAndType        #44:#6           // close:()V
  #44 = Utf8               close
  #45 = Class              #46              // java/lang/Throwable
  #46 = Utf8               java/lang/Throwable
  #47 = Methodref          #45.#48          // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
  #48 = NameAndType        #49:#50          // addSuppressed:(Ljava/lang/Throwable;)V
  #49 = Utf8               addSuppressed
  #50 = Utf8               (Ljava/lang/Throwable;)V
  #51 = Utf8               (Ljava/io/OutputStream;)V
  #52 = Utf8               Code
  #53 = Utf8               LineNumberTable
  #54 = Utf8               LocalVariableTable
  #55 = Utf8               this
  #56 = Utf8               Ljava/io/FilterOutputStream;
  #57 = Utf8               b
  #58 = Utf8               I
  #59 = Utf8               Exceptions
  #60 = Class              #61              // java/io/IOException
  #61 = Utf8               java/io/IOException
  #62 = Utf8               ([B)V
  #63 = Utf8               [B
  #64 = Utf8               i
  #65 = Utf8               off
  #66 = Utf8               len
  #67 = Utf8               StackMapTable
  #68 = Utf8               closeException
  #69 = Utf8               Ljava/lang/Throwable;
  #70 = Utf8               e
  #71 = Utf8               flushException
  #72 = Utf8               SourceFile
  #73 = Utf8               FilterOutputStream.java
{
  protected java.io.OutputStream out;
    descriptor: Ljava/io/OutputStream;
    flags: (0x0004) ACC_PROTECTED
  
  private volatile boolean closed;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
  
  private final java.lang.Object closeLock;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  public java.io.FilterOutputStream(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
         4: aload_0                 
         5: new           #7                  // class java/lang/Object
         8: dup                     
         9: invokespecial #9                  // Method java/lang/Object."<init>":()V
        12: putfield      #10                 // Field closeLock:Ljava/lang/Object;
        15: aload_0                 
        16: aload_1                 
        17: putfield      #16                 // Field out:Ljava/io/OutputStream;
        20: return                  
      LineNumberTable:
        line 71: 0
        line 60: 4
        line 72: 15
        line 73: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  this   Ljava/io/FilterOutputStream;
           0       21     1  out    Ljava/io/OutputStream;
  
  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #16                 // Field out:Ljava/io/OutputStream;
         4: iload_1                 
         5: invokevirtual #20                 // Method java/io/OutputStream.write:(I)V
         8: return                  
      LineNumberTable:
        line 89: 0
        line 90: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/io/FilterOutputStream;
           0        9     1  b      I
    Exceptions:
      throws java.io.IOException
  
  public void write(byte[]) throws java.io.IOException;
    descriptor: ([B)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: aload_1                 
         4: arraylength             
         5: invokevirtual #24                 // Method write:([BII)V
         8: return                  
      LineNumberTable:
        line 110: 0
        line 111: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/io/FilterOutputStream;
           0        9     1  b      [B
    Exceptions:
      throws java.io.IOException
  
  public void write(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=5, args_size=4
         0: iload_2                 
         1: iload_3                 
         2: aload_1                 
         3: arraylength             
         4: invokestatic  #27                 // Method java/util/Objects.checkFromIndexSize:(III)I
         7: pop                     
         8: iconst_0                
         9: istore        4                 
        11: iload         4                 
        13: iload_3                 
        14: if_icmpge     33                
        17: aload_0                 
        18: aload_1                 
        19: iload_2                 
        20: iload         4                 
        22: iadd                    
        23: baload                  
        24: invokevirtual #33                 // Method write:(I)V
        27: iinc          4, 1              
        30: goto          11                
        33: return                  
      LineNumberTable:
        line 136: 0
        line 138: 8
        line 139: 17
        line 138: 27
        line 141: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          11       22     4  i      I
           0       34     0  this   Ljava/io/FilterOutputStream;
           0       34     1  b      [B
           0       34     2  off    I
           0       34     3  len    I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [int]
        frame_type = 250 /* chop */
          offset_delta = 21
    Exceptions:
      throws java.io.IOException
  
  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #16                 // Field out:Ljava/io/OutputStream;
         4: invokevirtual #34                 // Method java/io/OutputStream.flush:()V
         7: return                  
      LineNumberTable:
        line 155: 0
        line 156: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/FilterOutputStream;
    Exceptions:
      throws java.io.IOException
  
  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=5, args_size=1
         0: aload_0                 
         1: getfield      #37                 // Field closed:Z
         4: ifeq          8                 
         7: return                  
         8: aload_0                 
         9: getfield      #10                 // Field closeLock:Ljava/lang/Object;
        12: dup                     
        13: astore_1                
        14: monitorenter            
        15: aload_0                 
        16: getfield      #37                 // Field closed:Z
        19: ifeq          25                
        22: aload_1                 
        23: monitorexit             
        24: return                  
        25: aload_0                 
        26: iconst_1                
        27: putfield      #37                 // Field closed:Z
        30: aload_1                 
        31: monitorexit             
        32: goto          40                
        35: astore_2                
        36: aload_1                 
        37: monitorexit             
        38: aload_2                 
        39: athrow                  
        40: aconst_null             
        41: astore_1                
        42: aload_0                 
        43: invokevirtual #41                 // Method flush:()V
        46: aload_1                 
        47: ifnonnull     60                
        50: aload_0                 
        51: getfield      #16                 // Field out:Ljava/io/OutputStream;
        54: invokevirtual #42                 // Method java/io/OutputStream.close:()V
        57: goto          132               
        60: aload_0                 
        61: getfield      #16                 // Field out:Ljava/io/OutputStream;
        64: invokevirtual #42                 // Method java/io/OutputStream.close:()V
        67: goto          132               
        70: astore_2                
        71: aload_1                 
        72: aload_2                 
        73: if_acmpeq     81                
        76: aload_2                 
        77: aload_1                 
        78: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        81: aload_2                 
        82: athrow                  
        83: astore_2                
        84: aload_2                 
        85: astore_1                
        86: aload_2                 
        87: athrow                  
        88: astore_3                
        89: aload_1                 
        90: ifnonnull     103               
        93: aload_0                 
        94: getfield      #16                 // Field out:Ljava/io/OutputStream;
        97: invokevirtual #42                 // Method java/io/OutputStream.close:()V
       100: goto          130               
       103: aload_0                 
       104: getfield      #16                 // Field out:Ljava/io/OutputStream;
       107: invokevirtual #42                 // Method java/io/OutputStream.close:()V
       110: goto          130               
       113: astore        4                 
       115: aload_1                 
       116: aload         4                 
       118: if_acmpeq     127               
       121: aload         4                 
       123: aload_1                 
       124: invokevirtual #47                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       127: aload         4                 
       129: athrow                  
       130: aload_3                 
       131: athrow                  
       132: return                  
      Exception table:
          from       to target type
            15       24    35  any
            25       32    35  any
            35       38    35  any
            60       67    70  Class java/lang/Throwable
            42       46    83  Class java/lang/Throwable
            42       46    88  any
           103      110   113  Class java/lang/Throwable
            83       89    88  any
      LineNumberTable:
        line 172: 0
        line 173: 7
        line 175: 8
        line 176: 15
        line 177: 22
        line 179: 25
        line 180: 30
        line 182: 40
        line 184: 42
        line 189: 46
        line 190: 50
        line 193: 60
        line 199: 67
        line 194: 70
        line 195: 71
        line 196: 76
        line 198: 81
        line 185: 83
        line 186: 84
        line 187: 86
        line 189: 88
        line 190: 93
        line 193: 103
        line 199: 110
        line 194: 113
        line 195: 115
        line 196: 121
        line 198: 127
        line 201: 130
        line 202: 132
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          71       12     2  closeException Ljava/lang/Throwable;
          84        4     2  e      Ljava/lang/Throwable;
         115       15     4  closeException Ljava/lang/Throwable;
           0      133     0  this   Ljava/io/FilterOutputStream;
          42       91     1  flushException Ljava/lang/Throwable;
      StackMapTable: number_of_entries = 14
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [class java/lang/Object]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [class java/lang/Throwable]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [class java/lang/Throwable]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [class java/io/FilterOutputStream, class java/lang/Throwable]
          stack = [class java/lang/Throwable]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [top, class java/lang/Throwable]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [class java/lang/Throwable]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 1
    Exceptions:
      throws java.io.IOException
}
SourceFile: "FilterOutputStream.java"
