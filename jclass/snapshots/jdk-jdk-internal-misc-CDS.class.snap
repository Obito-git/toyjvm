---
source: jclass/src/lib.rs
expression: display
---
public class jdk.internal.misc.CDS 
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                       //jdk/internal/misc/CDS
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 10, methods: 24, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9            // jdk/internal/misc/CDS.configStatus:I
    #8 = Class              #10              // jdk/internal/misc/CDS
    #9 = NameAndType        #11:#12          // configStatus:I
   #10 = Utf8               jdk/internal/misc/CDS
   #11 = Utf8               configStatus
   #12 = Utf8               I
   #13 = Methodref          #8.#14           // jdk/internal/misc/CDS.isLoggingLambdaFormInvokers:()Z
   #14 = NameAndType        #15:#16          // isLoggingLambdaFormInvokers:()Z
   #15 = Utf8               isLoggingLambdaFormInvokers
   #16 = Utf8               ()Z
   #17 = Class              #18              // java/lang/StringBuilder
   #18 = Utf8               java/lang/StringBuilder
   #19 = Methodref          #17.#3           // java/lang/StringBuilder."<init>":()V
   #20 = Methodref          #17.#21          // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #21 = NameAndType        #22:#23          // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #22 = Utf8               append
   #23 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #24 = String             #25              //  
   #25 = Utf8                
   #26 = Methodref          #17.#27          // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #27 = NameAndType        #28:#29          // toString:()Ljava/lang/String;
   #28 = Utf8               toString
   #29 = Utf8               ()Ljava/lang/String;
   #30 = Methodref          #8.#31           // jdk/internal/misc/CDS.logLambdaFormInvoker:(Ljava/lang/String;)V
   #31 = NameAndType        #32:#33          // logLambdaFormInvoker:(Ljava/lang/String;)V
   #32 = Utf8               logLambdaFormInvoker
   #33 = Utf8               (Ljava/lang/String;)V
   #34 = String             #35              // java.lang.invoke.DirectMethodHandle$Holder
   #35 = Utf8               java.lang.invoke.DirectMethodHandle$Holder
   #36 = Methodref          #37.#38          // java/lang/String.equals:(Ljava/lang/Object;)Z
   #37 = Class              #39              // java/lang/String
   #38 = NameAndType        #40:#41          // equals:(Ljava/lang/Object;)Z
   #39 = Utf8               java/lang/String
   #40 = Utf8               equals
   #41 = Utf8               (Ljava/lang/Object;)Z
   #42 = String             #43              // java.lang.invoke.DelegatingMethodHandle$Holder
   #43 = Utf8               java.lang.invoke.DelegatingMethodHandle$Holder
   #44 = String             #45              // java.lang.invoke.LambdaForm$Holder
   #45 = Utf8               java.lang.invoke.LambdaForm$Holder
   #46 = String             #47              // java.lang.invoke.Invokers$Holder
   #47 = Utf8               java.lang.invoke.Invokers$Holder
   #48 = String             #49              // LIJFDV
   #49 = Utf8               LIJFDV
   #50 = Methodref          #37.#51          // java/lang/String.indexOf:(I)I
   #51 = NameAndType        #52:#53          // indexOf:(I)I
   #52 = Utf8               indexOf
   #53 = Utf8               (I)I
   #54 = String             #55              // _
   #55 = Utf8               _
   #56 = Methodref          #37.#57          // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
   #57 = NameAndType        #58:#59          // split:(Ljava/lang/String;)[Ljava/lang/String;
   #58 = Utf8               split
   #59 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;
   #60 = Methodref          #37.#61          // java/lang/String.length:()I
   #61 = NameAndType        #62:#63          // length:()I
   #62 = Utf8               length
   #63 = Utf8               ()I
   #64 = Methodref          #37.#65          // java/lang/String.charAt:(I)C
   #65 = NameAndType        #66:#67          // charAt:(I)C
   #66 = Utf8               charAt
   #67 = Utf8               (I)C
   #68 = Methodref          #8.#69           // jdk/internal/misc/CDS.isBasicTypeChar:(C)Z
   #69 = NameAndType        #70:#71          // isBasicTypeChar:(C)Z
   #70 = Utf8               isBasicTypeChar
   #71 = Utf8               (C)Z
   #72 = String             #73              // [LF_RESOLVE]
   #73 = Utf8               [LF_RESOLVE]
   #74 = Methodref          #37.#75          // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #75 = NameAndType        #76:#77          // startsWith:(Ljava/lang/String;)Z
   #76 = Utf8               startsWith
   #77 = Utf8               (Ljava/lang/String;)Z
   #78 = String             #79              // [SPECIES_RESOLVE]
   #79 = Utf8               [SPECIES_RESOLVE]
   #80 = Class              #81              // java/lang/IllegalArgumentException
   #81 = Utf8               java/lang/IllegalArgumentException
   #82 = String             #83              // Wrong prefix: 
   #83 = Utf8               Wrong prefix: 
   #84 = Methodref          #80.#85          // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #85 = NameAndType        #5:#33           // "<init>":(Ljava/lang/String;)V
   #86 = String             #87              // Incorrect number of items in the line: 
   #87 = Utf8               Incorrect number of items in the line: 
   #88 = Methodref          #17.#89          // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #89 = NameAndType        #22:#90          // append:(I)Ljava/lang/StringBuilder;
   #90 = Utf8               (I)Ljava/lang/StringBuilder;
   #91 = Methodref          #8.#92           // jdk/internal/misc/CDS.isValidHolderName:(Ljava/lang/String;)Z
   #92 = NameAndType        #93:#77          // isValidHolderName:(Ljava/lang/String;)Z
   #93 = Utf8               isValidHolderName
   #94 = String             #95              // Invalid holder class name: 
   #95 = Utf8               Invalid holder class name: 
   #96 = Methodref          #8.#97           // jdk/internal/misc/CDS.isValidMethodType:(Ljava/lang/String;)Z
   #97 = NameAndType        #98:#77          // isValidMethodType:(Ljava/lang/String;)Z
   #98 = Utf8               isValidMethodType
   #99 = String             #100             // Invalid method type: 
  #100 = Utf8               Invalid method type: 
  #101 = Methodref          #102.#103        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Class              #104             // java/util/Objects
  #103 = NameAndType        #105:#106        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #104 = Utf8               java/util/Objects
  #105 = Utf8               requireNonNull
  #106 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #107 = Methodref          #8.#108          // jdk/internal/misc/CDS.validateInputLines:([Ljava/lang/String;)V
  #108 = NameAndType        #109:#110        // validateInputLines:([Ljava/lang/String;)V
  #109 = Utf8               validateInputLines
  #110 = Utf8               ([Ljava/lang/String;)V
  #111 = Methodref          #112.#113        // java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #112 = Class              #114             // java/util/Arrays
  #113 = NameAndType        #115:#116        // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #114 = Utf8               java/util/Arrays
  #115 = Utf8               stream
  #116 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #117 = Methodref          #118.#119        // jdk/internal/access/SharedSecrets.getJavaLangInvokeAccess:()Ljdk/internal/access/JavaLangInvokeAccess;
  #118 = Class              #120             // jdk/internal/access/SharedSecrets
  #119 = NameAndType        #121:#122        // getJavaLangInvokeAccess:()Ljdk/internal/access/JavaLangInvokeAccess;
  #120 = Utf8               jdk/internal/access/SharedSecrets
  #121 = Utf8               getJavaLangInvokeAccess
  #122 = Utf8               ()Ljdk/internal/access/JavaLangInvokeAccess;
  #123 = InterfaceMethodref #124.#125        // jdk/internal/access/JavaLangInvokeAccess.generateHolderClasses:(Ljava/util/stream/Stream;)Ljava/util/Map;
  #124 = Class              #126             // jdk/internal/access/JavaLangInvokeAccess
  #125 = NameAndType        #127:#128        // generateHolderClasses:(Ljava/util/stream/Stream;)Ljava/util/Map;
  #126 = Utf8               jdk/internal/access/JavaLangInvokeAccess
  #127 = Utf8               generateHolderClasses
  #128 = Utf8               (Ljava/util/stream/Stream;)Ljava/util/Map;
  #129 = InterfaceMethodref #130.#131        // java/util/Map.size:()I
  #130 = Class              #132             // java/util/Map
  #131 = NameAndType        #133:#63         // size:()I
  #132 = Utf8               java/util/Map
  #133 = Utf8               size
  #134 = InterfaceMethodref #130.#135        // java/util/Map.entrySet:()Ljava/util/Set;
  #135 = NameAndType        #136:#137        // entrySet:()Ljava/util/Set;
  #136 = Utf8               entrySet
  #137 = Utf8               ()Ljava/util/Set;
  #138 = InterfaceMethodref #139.#140        // java/util/Set.iterator:()Ljava/util/Iterator;
  #139 = Class              #141             // java/util/Set
  #140 = NameAndType        #142:#143        // iterator:()Ljava/util/Iterator;
  #141 = Utf8               java/util/Set
  #142 = Utf8               iterator
  #143 = Utf8               ()Ljava/util/Iterator;
  #144 = InterfaceMethodref #145.#146        // java/util/Iterator.hasNext:()Z
  #145 = Class              #147             // java/util/Iterator
  #146 = NameAndType        #148:#16         // hasNext:()Z
  #147 = Utf8               java/util/Iterator
  #148 = Utf8               hasNext
  #149 = InterfaceMethodref #145.#150        // java/util/Iterator.next:()Ljava/lang/Object;
  #150 = NameAndType        #151:#152        // next:()Ljava/lang/Object;
  #151 = Utf8               next
  #152 = Utf8               ()Ljava/lang/Object;
  #153 = Class              #154             // java/util/Map$Entry
  #154 = Utf8               java/util/Map$Entry
  #155 = InterfaceMethodref #153.#156        // java/util/Map$Entry.getKey:()Ljava/lang/Object;
  #156 = NameAndType        #157:#152        // getKey:()Ljava/lang/Object;
  #157 = Utf8               getKey
  #158 = InterfaceMethodref #153.#159        // java/util/Map$Entry.getValue:()Ljava/lang/Object;
  #159 = NameAndType        #160:#152        // getValue:()Ljava/lang/Object;
  #160 = Utf8               getValue
  #161 = String             #162             // java_pid
  #162 = Utf8               java_pid
  #163 = Methodref          #17.#164         // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #164 = NameAndType        #22:#165         // append:(J)Ljava/lang/StringBuilder;
  #165 = Utf8               (J)Ljava/lang/StringBuilder;
  #166 = Class              #167             // java/lang/Thread
  #167 = Utf8               java/lang/Thread
  #168 = InvokeDynamic      #0:#169          // #0:run:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)Ljava/lang/Runnable;
  #169 = NameAndType        #170:#171        // run:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)Ljava/lang/Runnable;
  #170 = Utf8               run
  #171 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)Ljava/lang/Runnable;
  #172 = Methodref          #166.#173        // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
  #173 = NameAndType        #5:#174          // "<init>":(Ljava/lang/Runnable;)V
  #174 = Utf8               (Ljava/lang/Runnable;)V
  #175 = Methodref          #166.#176        // java/lang/Thread.start:()V
  #176 = NameAndType        #177:#6          // start:()V
  #177 = Utf8               start
  #178 = Fieldref           #8.#179          // jdk/internal/misc/CDS.excludeFlags:[Ljava/lang/String;
  #179 = NameAndType        #180:#181        // excludeFlags:[Ljava/lang/String;
  #180 = Utf8               excludeFlags
  #181 = Utf8               [Ljava/lang/String;
  #182 = Methodref          #37.#183         // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #183 = NameAndType        #184:#185        // contains:(Ljava/lang/CharSequence;)Z
  #184 = Utf8               contains
  #185 = Utf8               (Ljava/lang/CharSequence;)Z
  #186 = Class              #187             // java/io/File
  #187 = Utf8               java/io/File
  #188 = String             #189             // 
  #189 = Utf8               
  #190 = Methodref          #186.#85         // java/io/File."<init>":(Ljava/lang/String;)V
  #191 = Methodref          #186.#192        // java/io/File.getAbsolutePath:()Ljava/lang/String;
  #192 = NameAndType        #193:#29         // getAbsolutePath:()Ljava/lang/String;
  #193 = Utf8               getAbsolutePath
  #194 = InterfaceMethodref #195.#196        // java/lang/ProcessHandle.current:()Ljava/lang/ProcessHandle;
  #195 = Class              #197             // java/lang/ProcessHandle
  #196 = NameAndType        #198:#199        // current:()Ljava/lang/ProcessHandle;
  #197 = Utf8               java/lang/ProcessHandle
  #198 = Utf8               current
  #199 = Utf8               ()Ljava/lang/ProcessHandle;
  #200 = InterfaceMethodref #195.#201        // java/lang/ProcessHandle.pid:()J
  #201 = NameAndType        #202:#203        // pid:()J
  #202 = Utf8               pid
  #203 = Utf8               ()J
  #204 = Methodref          #37.#205         // java/lang/String.valueOf:(J)Ljava/lang/String;
  #205 = NameAndType        #206:#207        // valueOf:(J)Ljava/lang/String;
  #206 = Utf8               valueOf
  #207 = Utf8               (J)Ljava/lang/String;
  #208 = String             #209             // _static.jsa
  #209 = Utf8               _static.jsa
  #210 = String             #211             // _dynamic.jsa
  #211 = Utf8               _dynamic.jsa
  #212 = String             #213             // .temp
  #213 = Utf8               .temp
  #214 = Methodref          #186.#215        // java/io/File.exists:()Z
  #215 = NameAndType        #216:#16         // exists:()Z
  #216 = Utf8               exists
  #217 = Methodref          #186.#218        // java/io/File.createNewFile:()Z
  #218 = NameAndType        #219:#16         // createNewFile:()Z
  #219 = Utf8               createNewFile
  #220 = Methodref          #186.#221        // java/io/File.delete:()Z
  #221 = NameAndType        #222:#16         // delete:()Z
  #222 = Utf8               delete
  #223 = String             #224             // .classlist
  #224 = Utf8               .classlist
  #225 = Methodref          #8.#226          // jdk/internal/misc/CDS.dumpClassList:(Ljava/lang/String;)V
  #226 = NameAndType        #227:#33         // dumpClassList:(Ljava/lang/String;)V
  #227 = Utf8               dumpClassList
  #228 = Methodref          #229.#230        // jdk/internal/util/StaticProperty.javaHome:()Ljava/lang/String;
  #229 = Class              #231             // jdk/internal/util/StaticProperty
  #230 = NameAndType        #232:#29         // javaHome:()Ljava/lang/String;
  #231 = Utf8               jdk/internal/util/StaticProperty
  #232 = Utf8               javaHome
  #233 = String             #234             // java.class.path
  #234 = Utf8               java.class.path
  #235 = Methodref          #236.#237        // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #236 = Class              #238             // java/lang/System
  #237 = NameAndType        #239:#240        // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #238 = Utf8               java/lang/System
  #239 = Utf8               getProperty
  #240 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #241 = Class              #242             // java/util/ArrayList
  #242 = Utf8               java/util/ArrayList
  #243 = Methodref          #241.#3          // java/util/ArrayList."<init>":()V
  #244 = Fieldref           #186.#245        // java/io/File.separator:Ljava/lang/String;
  #245 = NameAndType        #246:#247        // separator:Ljava/lang/String;
  #246 = Utf8               separator
  #247 = Utf8               Ljava/lang/String;
  #248 = String             #249             // bin
  #249 = Utf8               bin
  #250 = String             #251             // java
  #251 = Utf8               java
  #252 = InterfaceMethodref #253.#254        // java/util/List.add:(Ljava/lang/Object;)Z
  #253 = Class              #255             // java/util/List
  #254 = NameAndType        #256:#41         // add:(Ljava/lang/Object;)Z
  #255 = Utf8               java/util/List
  #256 = Utf8               add
  #257 = String             #258             // -cp
  #258 = Utf8               -cp
  #259 = String             #260             // -Xlog:cds
  #260 = Utf8               -Xlog:cds
  #261 = String             #262             // -Xshare:dump
  #262 = Utf8               -Xshare:dump
  #263 = String             #264             // -XX:SharedClassListFile=
  #264 = Utf8               -XX:SharedClassListFile=
  #265 = String             #266             // -XX:SharedArchiveFile=
  #266 = Utf8               -XX:SharedArchiveFile=
  #267 = Methodref          #268.#269        // jdk/internal/misc/VM.getRuntimeArguments:()[Ljava/lang/String;
  #268 = Class              #270             // jdk/internal/misc/VM
  #269 = NameAndType        #271:#272        // getRuntimeArguments:()[Ljava/lang/String;
  #270 = Utf8               jdk/internal/misc/VM
  #271 = Utf8               getRuntimeArguments
  #272 = Utf8               ()[Ljava/lang/String;
  #273 = Methodref          #8.#274          // jdk/internal/misc/CDS.containsExcludedFlags:(Ljava/lang/String;)Z
  #274 = NameAndType        #275:#77         // containsExcludedFlags:(Ljava/lang/String;)Z
  #275 = Utf8               containsExcludedFlags
  #276 = Methodref          #277.#278        // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #277 = Class              #279             // java/lang/Runtime
  #278 = NameAndType        #280:#281        // getRuntime:()Ljava/lang/Runtime;
  #279 = Utf8               java/lang/Runtime
  #280 = Utf8               getRuntime
  #281 = Utf8               ()Ljava/lang/Runtime;
  #282 = InterfaceMethodref #253.#283        // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
  #283 = NameAndType        #284:#285        // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
  #284 = Utf8               toArray
  #285 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;
  #286 = Class              #181             // "[Ljava/lang/String;"
  #287 = Methodref          #277.#288        // java/lang/Runtime.exec:([Ljava/lang/String;)Ljava/lang/Process;
  #288 = NameAndType        #289:#290        // exec:([Ljava/lang/String;)Ljava/lang/Process;
  #289 = Utf8               exec
  #290 = Utf8               ([Ljava/lang/String;)Ljava/lang/Process;
  #291 = Methodref          #292.#293        // java/lang/Process.getInputStream:()Ljava/io/InputStream;
  #292 = Class              #294             // java/lang/Process
  #293 = NameAndType        #295:#296        // getInputStream:()Ljava/io/InputStream;
  #294 = Utf8               java/lang/Process
  #295 = Utf8               getInputStream
  #296 = Utf8               ()Ljava/io/InputStream;
  #297 = Methodref          #292.#201        // java/lang/Process.pid:()J
  #298 = String             #299             // stdout
  #299 = Utf8               stdout
  #300 = Methodref          #8.#301          // jdk/internal/misc/CDS.drainOutput:(Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List;)Ljava/lang/String;
  #301 = NameAndType        #302:#303        // drainOutput:(Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List;)Ljava/lang/String;
  #302 = Utf8               drainOutput
  #303 = Utf8               (Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List;)Ljava/lang/String;
  #304 = Methodref          #292.#305        // java/lang/Process.getErrorStream:()Ljava/io/InputStream;
  #305 = NameAndType        #306:#296        // getErrorStream:()Ljava/io/InputStream;
  #306 = Utf8               getErrorStream
  #307 = String             #308             // stderr
  #308 = Utf8               stderr
  #309 = Methodref          #292.#310        // java/lang/Process.waitFor:()I
  #310 = NameAndType        #311:#63         // waitFor:()I
  #311 = Utf8               waitFor
  #312 = Class              #313             // java/lang/RuntimeException
  #313 = Utf8               java/lang/RuntimeException
  #314 = String             #315             // Archive file 
  #315 = Utf8               Archive file 
  #316 = String             #317             //  is not created, please check stdout file 
  #317 = Utf8                is not created, please check stdout file 
  #318 = String             #319             //  or stderr file 
  #319 = Utf8                or stderr file 
  #320 = String             #321             //  for more detail
  #321 = Utf8                for more detail
  #322 = Methodref          #312.#85         // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
  #323 = Methodref          #8.#324          // jdk/internal/misc/CDS.dumpDynamicArchive:(Ljava/lang/String;)V
  #324 = NameAndType        #325:#33         // dumpDynamicArchive:(Ljava/lang/String;)V
  #325 = Utf8               dumpDynamicArchive
  #326 = String             #327             //  is not created, please check current working directory 
  #327 = Utf8                is not created, please check current working directory 
  #328 = String             #329             //  for process 
  #329 = Utf8                for process 
  #330 = String             #331             //  output for more detail
  #331 = Utf8                output for more detail
  #332 = Methodref          #186.#333        // java/io/File.renameTo:(Ljava/io/File;)Z
  #333 = NameAndType        #334:#335        // renameTo:(Ljava/io/File;)Z
  #334 = Utf8               renameTo
  #335 = Utf8               (Ljava/io/File;)Z
  #336 = String             #337             // Cannot rename temp file 
  #337 = Utf8               Cannot rename temp file 
  #338 = String             #339             //  to archive file
  #339 = Utf8                to archive file
  #340 = Fieldref           #236.#341        // java/lang/System.out:Ljava/io/PrintStream;
  #341 = NameAndType        #342:#343        // out:Ljava/io/PrintStream;
  #342 = Utf8               out
  #343 = Utf8               Ljava/io/PrintStream;
  #344 = String             #345             // The process was attached by jcmd and dumped a 
  #345 = Utf8               The process was attached by jcmd and dumped a 
  #346 = String             #347             // static
  #347 = Utf8               static
  #348 = String             #349             // dynamic
  #349 = Utf8               dynamic
  #350 = String             #351             //  archive 
  #351 = Utf8                archive 
  #352 = Methodref          #353.#354        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #353 = Class              #355             // java/io/PrintStream
  #354 = NameAndType        #356:#33         // println:(Ljava/lang/String;)V
  #355 = Utf8               java/io/PrintStream
  #356 = Utf8               println
  #357 = Class              #358             // java/io/InputStreamReader
  #358 = Utf8               java/io/InputStreamReader
  #359 = Methodref          #357.#360        // java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
  #360 = NameAndType        #5:#361          // "<init>":(Ljava/io/InputStream;)V
  #361 = Utf8               (Ljava/io/InputStream;)V
  #362 = Class              #363             // java/io/BufferedReader
  #363 = Utf8               java/io/BufferedReader
  #364 = Methodref          #362.#365        // java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
  #365 = NameAndType        #5:#366          // "<init>":(Ljava/io/Reader;)V
  #366 = Utf8               (Ljava/io/Reader;)V
  #367 = Methodref          #353.#85         // java/io/PrintStream."<init>":(Ljava/lang/String;)V
  #368 = String             #369             // Command:
  #369 = Utf8               Command:
  #370 = InterfaceMethodref #253.#140        // java/util/List.iterator:()Ljava/util/Iterator;
  #371 = Methodref          #353.#372        // java/io/PrintStream.print:(Ljava/lang/String;)V
  #372 = NameAndType        #373:#33         // print:(Ljava/lang/String;)V
  #373 = Utf8               print
  #374 = Methodref          #362.#375        // java/io/BufferedReader.readLine:()Ljava/lang/String;
  #375 = NameAndType        #376:#29         // readLine:()Ljava/lang/String;
  #376 = Utf8               readLine
  #377 = Methodref          #353.#378        // java/io/PrintStream.close:()V
  #378 = NameAndType        #379:#6          // close:()V
  #379 = Utf8               close
  #380 = Class              #381             // java/lang/Throwable
  #381 = Utf8               java/lang/Throwable
  #382 = Methodref          #380.#383        // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
  #383 = NameAndType        #384:#385        // addSuppressed:(Ljava/lang/Throwable;)V
  #384 = Utf8               addSuppressed
  #385 = Utf8               (Ljava/lang/Throwable;)V
  #386 = Methodref          #362.#378        // java/io/BufferedReader.close:()V
  #387 = Methodref          #357.#378        // java/io/InputStreamReader.close:()V
  #388 = Class              #389             // java/io/IOException
  #389 = Utf8               java/io/IOException
  #390 = String             #391             // IOException happens during drain stream to file 
  #391 = Utf8               IOException happens during drain stream to file 
  #392 = String             #393             // : 
  #393 = Utf8               : 
  #394 = Methodref          #388.#395        // java/io/IOException.getMessage:()Ljava/lang/String;
  #395 = NameAndType        #396:#29         // getMessage:()Ljava/lang/String;
  #396 = Utf8               getMessage
  #397 = Methodref          #8.#398          // jdk/internal/misc/CDS.getCDSConfigStatus:()I
  #398 = NameAndType        #399:#63         // getCDSConfigStatus:()I
  #399 = Utf8               getCDSConfigStatus
  #400 = String             #401             // -XX:DumpLoadedClassList=
  #401 = Utf8               -XX:DumpLoadedClassList=
  #402 = String             #403             // -XX:+RecordDynamicDumpInfo
  #403 = Utf8               -XX:+RecordDynamicDumpInfo
  #404 = String             #405             // -Xshare:
  #405 = Utf8               -Xshare:
  #406 = String             #407             // -XX:ArchiveClassesAtExit=
  #407 = Utf8               -XX:ArchiveClassesAtExit=
  #408 = Utf8               IS_DUMPING_ARCHIVE
  #409 = Utf8               ConstantValue
  #410 = Integer            1
  #411 = Utf8               IS_DUMPING_STATIC_ARCHIVE
  #412 = Integer            2
  #413 = Utf8               IS_LOGGING_LAMBDA_FORM_INVOKERS
  #414 = Integer            4
  #415 = Utf8               IS_USING_ARCHIVE
  #416 = Integer            8
  #417 = Utf8               DIRECT_HOLDER_CLASS_NAME
  #418 = Utf8               DELEGATING_HOLDER_CLASS_NAME
  #419 = Utf8               BASIC_FORMS_HOLDER_CLASS_NAME
  #420 = Utf8               INVOKERS_HOLDER_CLASS_NAME
  #421 = Utf8               Code
  #422 = Utf8               LineNumberTable
  #423 = Utf8               LocalVariableTable
  #424 = Utf8               this
  #425 = Utf8               Ljdk/internal/misc/CDS;
  #426 = Utf8               StackMapTable
  #427 = Utf8               isDumpingArchive
  #428 = Utf8               isUsingArchive
  #429 = Utf8               isDumpingStaticArchive
  #430 = Utf8               initializeFromArchive
  #431 = Utf8               (Ljava/lang/Class;)V
  #432 = Utf8               Signature
  #433 = Utf8               (Ljava/lang/Class<*>;)V
  #434 = Utf8               defineArchivedModules
  #435 = Utf8               (Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V
  #436 = Utf8               getRandomSeedForDumping
  #437 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
  #438 = Utf8               prefix
  #439 = Utf8               holder
  #440 = Utf8               name
  #441 = Utf8               type
  #442 = Utf8               logSpeciesType
  #443 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #444 = Utf8               cn
  #445 = Utf8               c
  #446 = Utf8               C
  #447 = Utf8               i
  #448 = Utf8               typeParts
  #449 = Utf8               parts
  #450 = Utf8               isLF
  #451 = Utf8               Z
  #452 = Utf8               s
  #453 = Utf8               lines
  #454 = Utf8               generateLambdaFormHolderClasses
  #455 = Utf8               ([Ljava/lang/String;)[Ljava/lang/Object;
  #456 = Utf8               entry
  #457 = Utf8               Ljava/util/Map$Entry;
  #458 = Utf8               lineStream
  #459 = Utf8               Ljava/util/stream/Stream;
  #460 = Utf8               result
  #461 = Utf8               Ljava/util/Map;
  #462 = Utf8               retArray
  #463 = Utf8               [Ljava/lang/Object;
  #464 = Utf8               index
  #465 = Utf8               LocalVariableTypeTable
  #466 = Utf8               Ljava/util/Map$Entry<Ljava/lang/String;[B>;
  #467 = Utf8               Ljava/util/stream/Stream<Ljava/lang/String;>;
  #468 = Utf8               Ljava/util/Map<Ljava/lang/String;[B>;
  #469 = Class              #470             // java/util/stream/Stream
  #470 = Utf8               java/util/stream/Stream
  #471 = Class              #463             // "[Ljava/lang/Object;"
  #472 = Utf8               Ljava/io/InputStream;
  #473 = Utf8               J
  #474 = Utf8               tail
  #475 = Utf8               cmds
  #476 = Utf8               Ljava/util/List;
  #477 = Utf8               fileName
  #478 = Utf8               Ljava/util/List<Ljava/lang/String;>;
  #479 = Utf8               (Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;
  #480 = Utf8               e
  #481 = Utf8               testStr
  #482 = Utf8               dumpSharedArchive
  #483 = Utf8               (ZLjava/lang/String;)Ljava/lang/String;
  #484 = Utf8               arg
  #485 = Utf8               listFileName
  #486 = Utf8               listFile
  #487 = Utf8               Ljava/io/File;
  #488 = Utf8               jdkHome
  #489 = Utf8               classPath
  #490 = Utf8               vmArgs
  #491 = Utf8               proc
  #492 = Utf8               Ljava/lang/Process;
  #493 = Utf8               stdOutFileName
  #494 = Utf8               stdErrFileName
  #495 = Utf8               isStatic
  #496 = Utf8               cwd
  #497 = Utf8               currentPid
  #498 = Utf8               archiveFileName
  #499 = Utf8               tempArchiveFileName
  #500 = Utf8               tempArchiveFile
  #501 = Utf8               archiveFile
  #502 = Utf8               archiveFilePath
  #503 = Utf8               Exceptions
  #504 = Class              #505             // java/lang/Exception
  #505 = Utf8               java/lang/Exception
  #506 = Utf8               lambda$drainOutput$0
  #507 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)V
  #508 = Utf8               i$
  #509 = Utf8               Ljava/util/Iterator;
  #510 = Utf8               line
  #511 = Utf8               x2
  #512 = Utf8               Ljava/lang/Throwable;
  #513 = Utf8               t$
  #514 = Utf8               prt
  #515 = Utf8               rdr
  #516 = Utf8               Ljava/io/BufferedReader;
  #517 = Utf8               isr
  #518 = Utf8               Ljava/io/InputStreamReader;
  #519 = Utf8               Ljava/io/IOException;
  #520 = Class              #521             // java/io/InputStream
  #521 = Utf8               java/io/InputStream
  #522 = Utf8               <clinit>
  #523 = Utf8               SourceFile
  #524 = Utf8               CDS.java
  #525 = Utf8               BootstrapMethods
  #526 = MethodType         #6               // ()V
  #527 = MethodHandle       6:#528           // REF_invokeStatic jdk/internal/misc/CDS.lambda$drainOutput$0:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)V
  #528 = Methodref          #8.#529          // jdk/internal/misc/CDS.lambda$drainOutput$0:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)V
  #529 = NameAndType        #506:#507        // lambda$drainOutput$0:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)V
  #530 = MethodHandle       6:#531           // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #531 = Methodref          #532.#533        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #532 = Class              #534             // java/lang/invoke/LambdaMetafactory
  #533 = NameAndType        #535:#536        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #534 = Utf8               java/lang/invoke/LambdaMetafactory
  #535 = Utf8               metafactory
  #536 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #537 = Utf8               InnerClasses
  #538 = Utf8               Entry
  #539 = Class              #540             // java/lang/invoke/MethodHandles$Lookup
  #540 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #541 = Class              #542             // java/lang/invoke/MethodHandles
  #542 = Utf8               java/lang/invoke/MethodHandles
  #543 = Utf8               Lookup
{
  private static final int IS_DUMPING_ARCHIVE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1
  
  private static final int IS_DUMPING_STATIC_ARCHIVE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2
  
  private static final int IS_LOGGING_LAMBDA_FORM_INVOKERS;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4
  
  private static final int IS_USING_ARCHIVE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8
  
  private static final int configStatus;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  static final java.lang.String DIRECT_HOLDER_CLASS_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String java.lang.invoke.DirectMethodHandle$Holder
  
  static final java.lang.String DELEGATING_HOLDER_CLASS_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String java.lang.invoke.DelegatingMethodHandle$Holder
  
  static final java.lang.String BASIC_FORMS_HOLDER_CLASS_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String java.lang.invoke.LambdaForm$Holder
  
  static final java.lang.String INVOKERS_HOLDER_CLASS_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: String java.lang.invoke.Invokers$Holder
  
  private static java.lang.String[] excludeFlags;
    descriptor: [Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  public jdk.internal.misc.CDS();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljdk/internal/misc/CDS;
  
  public static boolean isLoggingLambdaFormInvokers();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #7                  // Field configStatus:I
         3: iconst_4                
         4: iand                    
         5: ifeq          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 56: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static boolean isDumpingArchive();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #7                  // Field configStatus:I
         3: iconst_1                
         4: iand                    
         5: ifeq          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 63: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static boolean isUsingArchive();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #7                  // Field configStatus:I
         3: bipush        8                 
         5: iand                    
         6: ifeq          13                
         9: iconst_1                
        10: goto          14                
        13: iconst_0                
        14: ireturn                 
      LineNumberTable:
        line 70: 0
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static boolean isDumpingStaticArchive();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #7                  // Field configStatus:I
         3: iconst_2                
         4: iand                    
         5: ifeq          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 77: 0
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  private static native int getCDSConfigStatus();
    descriptor: ()I
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  private static native void logLambdaFormInvoker(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  public static native void initializeFromArchive(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)V
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    Signature: #433                        // (Ljava/lang/Class<*>;)V
  
  public static native void defineArchivedModules(java.lang.ClassLoader, java.lang.ClassLoader);
    descriptor: (Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static native long getRandomSeedForDumping();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static void logLambdaFormInvoker(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=4, args_size=4
         0: invokestatic  #13                 // Method isLoggingLambdaFormInvokers:()Z
         3: ifeq          50                
         6: new           #17                 // class java/lang/StringBuilder
         9: dup                     
        10: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        13: aload_0                 
        14: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc           #24                 // String  
        19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: aload_1                 
        23: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: ldc           #24                 // String  
        28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_2                 
        32: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: ldc           #24                 // String  
        37: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: aload_3                 
        41: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        47: invokestatic  #30                 // Method logLambdaFormInvoker:(Ljava/lang/String;)V
        50: return                  
      LineNumberTable:
        line 111: 0
        line 112: 6
        line 114: 50
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  prefix Ljava/lang/String;
           0       51     1  holder Ljava/lang/String;
           0       51     2  name   Ljava/lang/String;
           0       51     3  type   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 50 /* same */
  
  public static void logSpeciesType(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: invokestatic  #13                 // Method isLoggingLambdaFormInvokers:()Z
         3: ifeq          32                
         6: new           #17                 // class java/lang/StringBuilder
         9: dup                     
        10: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        13: aload_0                 
        14: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc           #24                 // String  
        19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: aload_1                 
        23: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: invokestatic  #30                 // Method logLambdaFormInvoker:(Ljava/lang/String;)V
        32: return                  
      LineNumberTable:
        line 120: 0
        line 121: 6
        line 123: 32
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       33     0  prefix Ljava/lang/String;
           0       33     1  cn     Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 32 /* same */
  
  private static boolean isValidHolderName(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: ldc           #34                 // String java.lang.invoke.DirectMethodHandle$Holder
         3: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         6: ifne          36                
         9: aload_0                 
        10: ldc           #42                 // String java.lang.invoke.DelegatingMethodHandle$Holder
        12: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        15: ifne          36                
        18: aload_0                 
        19: ldc           #44                 // String java.lang.invoke.LambdaForm$Holder
        21: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        24: ifne          36                
        27: aload_0                 
        28: ldc           #46                 // String java.lang.invoke.Invokers$Holder
        30: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        33: ifeq          40                
        36: iconst_1                
        37: goto          41                
        40: iconst_0                
        41: ireturn                 
      LineNumberTable:
        line 131: 0
        line 132: 12
        line 133: 21
        line 134: 30
        line 131: 41
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       42     0  name   Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 36 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  private static boolean isBasicTypeChar(char);
    descriptor: (C)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: ldc           #48                 // String LIJFDV
         2: iload_0                 
         3: invokevirtual #50                 // Method java/lang/String.indexOf:(I)I
         6: iflt          13                
         9: iconst_1                
        10: goto          14                
        13: iconst_0                
        14: ireturn                 
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       15     0  c      C
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  private static boolean isValidMethodType(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=4, args_size=1
         0: aload_0                 
         1: ldc           #54                 // String _
         3: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
         6: astore_1                
         7: aload_1                 
         8: arraylength             
         9: iconst_2                
        10: if_icmpne     36                
        13: aload_1                 
        14: iconst_1                
        15: aaload                  
        16: invokevirtual #60                 // Method java/lang/String.length:()I
        19: iconst_1                
        20: if_icmpne     36                
        23: aload_1                 
        24: iconst_1                
        25: aaload                  
        26: iconst_0                
        27: invokevirtual #64                 // Method java/lang/String.charAt:(I)C
        30: invokestatic  #68                 // Method isBasicTypeChar:(C)Z
        33: ifne          38                
        36: iconst_0                
        37: ireturn                 
        38: aload_1                 
        39: iconst_0                
        40: aaload                  
        41: iconst_0                
        42: invokevirtual #64                 // Method java/lang/String.charAt:(I)C
        45: invokestatic  #68                 // Method isBasicTypeChar:(C)Z
        48: ifne          53                
        51: iconst_0                
        52: ireturn                 
        53: iconst_1                
        54: istore_2                
        55: iload_2                 
        56: aload_1                 
        57: iconst_0                
        58: aaload                  
        59: invokevirtual #60                 // Method java/lang/String.length:()I
        62: if_icmpge     100               
        65: aload_1                 
        66: iconst_0                
        67: aaload                  
        68: iload_2                 
        69: invokevirtual #64                 // Method java/lang/String.charAt:(I)C
        72: istore_3                
        73: iload_3                 
        74: invokestatic  #68                 // Method isBasicTypeChar:(C)Z
        77: ifne          94                
        80: iload_3                 
        81: bipush        48                
        83: if_icmplt     92                
        86: iload_3                 
        87: bipush        57                
        89: if_icmple     94                
        92: iconst_0                
        93: ireturn                 
        94: iinc          2, 1              
        97: goto          55                
       100: iconst_1                
       101: ireturn                 
      LineNumberTable:
        line 142: 0
        line 144: 7
        line 145: 27
        line 146: 36
        line 149: 38
        line 150: 51
        line 152: 53
        line 153: 65
        line 154: 73
        line 155: 80
        line 156: 92
        line 152: 94
        line 160: 100
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          73       21     3  c      C
          55       45     2  i      I
           0      102     0  type   Ljava/lang/String;
           7       95     1  typeParts [Ljava/lang/String;
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [class "[Ljava/lang/String;"]
        frame_type = 1 /* same */
        frame_type = 14 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [int]
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [int]
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 250 /* chop */
          offset_delta = 5
  
  private static void validateInputLines(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=5, locals=7, args_size=1
         0: aload_0                 
         1: astore_1                
         2: aload_1                 
         3: arraylength             
         4: istore_2                
         5: iconst_0                
         6: istore_3                
         7: iload_3                 
         8: iload_2                 
         9: if_icmpge     246               
        12: aload_1                 
        13: iload_3                 
        14: aaload                  
        15: astore        4                 
        17: aload         4                 
        19: ldc           #72                 // String [LF_RESOLVE]
        21: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        24: ifne          65                
        27: aload         4                 
        29: ldc           #78                 // String [SPECIES_RESOLVE]
        31: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        34: ifne          65                
        37: new           #80                 // class java/lang/IllegalArgumentException
        40: dup                     
        41: new           #17                 // class java/lang/StringBuilder
        44: dup                     
        45: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        48: ldc           #82                 // String Wrong prefix: 
        50: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        53: aload         4                 
        55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        61: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        64: athrow                  
        65: aload         4                 
        67: ldc           #24                 // String  
        69: invokevirtual #56                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
        72: astore        5                 
        74: aload         4                 
        76: ldc           #72                 // String [LF_RESOLVE]
        78: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        81: istore        6                 
        83: iload         6                 
        85: ifeq          204               
        88: aload         5                 
        90: arraylength             
        91: iconst_4                
        92: if_icmpeq     124               
        95: new           #80                 // class java/lang/IllegalArgumentException
        98: dup                     
        99: new           #17                 // class java/lang/StringBuilder
       102: dup                     
       103: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       106: ldc           #86                 // String Incorrect number of items in the line: 
       108: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       111: aload         5                 
       113: arraylength             
       114: invokevirtual #88                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       117: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       120: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       123: athrow                  
       124: aload         5                 
       126: iconst_1                
       127: aaload                  
       128: invokestatic  #91                 // Method isValidHolderName:(Ljava/lang/String;)Z
       131: ifne          164               
       134: new           #80                 // class java/lang/IllegalArgumentException
       137: dup                     
       138: new           #17                 // class java/lang/StringBuilder
       141: dup                     
       142: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       145: ldc           #94                 // String Invalid holder class name: 
       147: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       150: aload         5                 
       152: iconst_1                
       153: aaload                  
       154: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       157: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       160: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       163: athrow                  
       164: aload         5                 
       166: iconst_3                
       167: aaload                  
       168: invokestatic  #96                 // Method isValidMethodType:(Ljava/lang/String;)Z
       171: ifne          240               
       174: new           #80                 // class java/lang/IllegalArgumentException
       177: dup                     
       178: new           #17                 // class java/lang/StringBuilder
       181: dup                     
       182: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       185: ldc           #99                 // String Invalid method type: 
       187: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: aload         5                 
       192: iconst_3                
       193: aaload                  
       194: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       197: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       200: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       203: athrow                  
       204: aload         5                 
       206: arraylength             
       207: iconst_2                
       208: if_icmpeq     240               
       211: new           #80                 // class java/lang/IllegalArgumentException
       214: dup                     
       215: new           #17                 // class java/lang/StringBuilder
       218: dup                     
       219: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       222: ldc           #86                 // String Incorrect number of items in the line: 
       224: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       227: aload         5                 
       229: arraylength             
       230: invokevirtual #88                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       233: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       236: invokespecial #84                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       239: athrow                  
       240: iinc          3, 1              
       243: goto          7                 
       246: return                  
      LineNumberTable:
        line 165: 0
        line 166: 17
        line 167: 37
        line 170: 65
        line 171: 74
        line 173: 83
        line 174: 88
        line 175: 95
        line 177: 124
        line 178: 134
        line 180: 164
        line 181: 174
        line 184: 204
        line 185: 211
        line 165: 240
        line 189: 246
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          74      166     5  parts  [Ljava/lang/String;
          83      157     6  isLF   Z
          17      223     4  s      Ljava/lang/String;
           0      247     0  lines  [Ljava/lang/String;
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 7
          locals = [class "[Ljava/lang/String;", int, int]
        frame_type = 252 /* append */
          offset_delta = 57
          locals = [class java/lang/String]
        frame_type = 253 /* append */
          offset_delta = 58
          locals = [class "[Ljava/lang/String;", int]
        frame_type = 39 /* same */
        frame_type = 39 /* same */
        frame_type = 248 /* chop */
          offset_delta = 35
        frame_type = 248 /* chop */
          offset_delta = 5
  
  private static java.lang.Object[] generateLambdaFormHolderClasses(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)[Ljava/lang/Object;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=8, args_size=1
         0: aload_0                 
         1: invokestatic  #101                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop                     
         5: aload_0                 
         6: invokestatic  #107                // Method validateInputLines:([Ljava/lang/String;)V
         9: aload_0                 
        10: invokestatic  #111                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
        13: astore_1                
        14: invokestatic  #117                // Method jdk/internal/access/SharedSecrets.getJavaLangInvokeAccess:()Ljdk/internal/access/JavaLangInvokeAccess;
        17: aload_1                 
        18: invokeinterface #123, 2             // InterfaceMethod jdk/internal/access/JavaLangInvokeAccess.generateHolderClasses:(Ljava/util/stream/Stream;)Ljava/util/Map;
        23: astore_2                
        24: aload_2                 
        25: invokeinterface #129, 1             // InterfaceMethod java/util/Map.size:()I
        30: istore_3                
        31: iload_3                 
        32: iconst_2                
        33: imul                    
        34: anewarray     #2                  // class java/lang/Object
        37: astore        4                 
        39: iconst_0                
        40: istore        5                 
        42: aload_2                 
        43: invokeinterface #134, 1             // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
        48: invokeinterface #138, 1             // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        53: astore        6                 
        55: aload         6                 
        57: invokeinterface #144, 1             // InterfaceMethod java/util/Iterator.hasNext:()Z
        62: ifeq          110               
        65: aload         6                 
        67: invokeinterface #149, 1             // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        72: checkcast     #153                // class java/util/Map$Entry
        75: astore        7                 
        77: aload         4                 
        79: iload         5                 
        81: iinc          5, 1              
        84: aload         7                 
        86: invokeinterface #155, 1             // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        91: aastore                 
        92: aload         4                 
        94: iload         5                 
        96: iinc          5, 1              
        99: aload         7                 
       101: invokeinterface #158, 1             // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       106: aastore                 
       107: goto          55                
       110: aload         4                 
       112: areturn                 
      LineNumberTable:
        line 197: 0
        line 198: 5
        line 199: 9
        line 200: 14
        line 201: 24
        line 202: 31
        line 203: 39
        line 204: 42
        line 205: 77
        line 206: 92
        line 207: 107
        line 208: 110
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          77       30     7  entry  Ljava/util/Map$Entry;
           0      113     0  lines  [Ljava/lang/String;
          14       99     1  lineStream Ljava/util/stream/Stream;
          24       89     2  result Ljava/util/Map;
          31       82     3  size   I
          39       74     4  retArray [Ljava/lang/Object;
          42       71     5  index  I
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
            77       30     7  entry   Ljava/util/Map$Entry<Ljava/lang/String;[B>;
            14       99     1  lineStream   Ljava/util/stream/Stream<Ljava/lang/String;>;
            24       89     2  result   Ljava/util/Map<Ljava/lang/String;[B>;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [class "[Ljava/lang/String;", class java/util/stream/Stream, class java/util/Map, int, class "[Ljava/lang/Object;", int, class java/util/Iterator]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 54
  
  private static native void dumpClassList(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  private static native void dumpDynamicArchive(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  private static java.lang.String drainOutput(java.io.InputStream, long, java.lang.String, java.util.List<java.lang.String>);
    descriptor: (Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List;)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=5, locals=6, args_size=4
         0: new           #17                 // class java/lang/StringBuilder
         3: dup                     
         4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
         7: ldc           #161                // String java_pid
         9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: lload_1                 
        13: invokevirtual #163                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        16: ldc           #54                 // String _
        18: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: aload_3                 
        22: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        28: astore        5                 
        30: new           #166                // class java/lang/Thread
        33: dup                     
        34: aload_0                 
        35: aload         5                 
        37: aload         4                 
        39: invokedynamic #168, 0             // InvokeDynamic #0:run:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)Ljava/lang/Runnable;
        44: invokespecial #172                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        47: invokevirtual #175                // Method java/lang/Thread.start:()V
        50: aload         5                 
        52: areturn                 
      LineNumberTable:
        line 215: 0
        line 216: 30
        line 232: 47
        line 233: 50
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       53     0  stream Ljava/io/InputStream;
           0       53     1  pid    J
           0       53     3  tail   Ljava/lang/String;
           0       53     4  cmds   Ljava/util/List;
          30       23     5  fileName Ljava/lang/String;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       53     4  cmds   Ljava/util/List<Ljava/lang/String;>;
    Signature: #479                        // (Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;
  
  private static boolean containsExcludedFlags(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=2, locals=5, args_size=1
         0: getstatic     #178                // Field excludeFlags:[Ljava/lang/String;
         3: astore_1                
         4: aload_1                 
         5: arraylength             
         6: istore_2                
         7: iconst_0                
         8: istore_3                
         9: iload_3                 
        10: iload_2                 
        11: if_icmpge     36                
        14: aload_1                 
        15: iload_3                 
        16: aaload                  
        17: astore        4                 
        19: aload_0                 
        20: aload         4                 
        22: invokevirtual #182                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        25: ifeq          30                
        28: iconst_1                
        29: ireturn                 
        30: iinc          3, 1              
        33: goto          9                 
        36: iconst_0                
        37: ireturn                 
      LineNumberTable:
        line 244: 0
        line 245: 19
        line 246: 28
        line 244: 30
        line 249: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          19       11     4  e      Ljava/lang/String;
           0       38     0  testStr Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 9
          locals = [class "[Ljava/lang/String;", int, int]
        frame_type = 20 /* same */
        frame_type = 248 /* chop */
          offset_delta = 5
  
  private static java.lang.String dumpSharedArchive(boolean, java.lang.String) throws java.lang.Exception;
    descriptor: (ZLjava/lang/String;)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=5, locals=17, args_size=2
         0: new           #186                // class java/io/File
         3: dup                     
         4: ldc           #188                // String 
         6: invokespecial #190                // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: invokevirtual #191                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        12: astore_2                
        13: invokestatic  #194                // InterfaceMethod java/lang/ProcessHandle.current:()Ljava/lang/ProcessHandle;
        16: invokeinterface #200, 1             // InterfaceMethod java/lang/ProcessHandle.pid:()J
        21: invokestatic  #204                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
        24: astore_3                
        25: aload_1                 
        26: ifnull        33                
        29: aload_1                 
        30: goto          66                
        33: new           #17                 // class java/lang/StringBuilder
        36: dup                     
        37: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        40: ldc           #161                // String java_pid
        42: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: aload_3                 
        46: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: iload_0                 
        50: ifeq          58                
        53: ldc           #208                // String _static.jsa
        55: goto          60                
        58: ldc           #210                // String _dynamic.jsa
        60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        63: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        66: astore        4                 
        68: new           #17                 // class java/lang/StringBuilder
        71: dup                     
        72: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        75: aload         4                 
        77: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        80: ldc           #212                // String .temp
        82: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        88: astore        5                 
        90: new           #186                // class java/io/File
        93: dup                     
        94: aload         5                 
        96: invokespecial #190                // Method java/io/File."<init>":(Ljava/lang/String;)V
        99: astore        6                 
       101: aload         6                 
       103: invokevirtual #214                // Method java/io/File.exists:()Z
       106: ifne          115               
       109: aload         6                 
       111: invokevirtual #217                // Method java/io/File.createNewFile:()Z
       114: pop                     
       115: aload         6                 
       117: invokevirtual #220                // Method java/io/File.delete:()Z
       120: pop                     
       121: iload_0                 
       122: ifeq          571               
       125: new           #17                 // class java/lang/StringBuilder
       128: dup                     
       129: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       132: aload         4                 
       134: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       137: ldc           #223                // String .classlist
       139: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       145: astore        7                 
       147: new           #186                // class java/io/File
       150: dup                     
       151: aload         7                 
       153: invokespecial #190                // Method java/io/File."<init>":(Ljava/lang/String;)V
       156: astore        8                 
       158: aload         8                 
       160: invokevirtual #214                // Method java/io/File.exists:()Z
       163: ifeq          172               
       166: aload         8                 
       168: invokevirtual #220                // Method java/io/File.delete:()Z
       171: pop                     
       172: aload         7                 
       174: invokestatic  #225                // Method dumpClassList:(Ljava/lang/String;)V
       177: invokestatic  #228                // Method jdk/internal/util/StaticProperty.javaHome:()Ljava/lang/String;
       180: astore        9                 
       182: ldc           #233                // String java.class.path
       184: invokestatic  #235                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       187: astore        10                
       189: new           #241                // class java/util/ArrayList
       192: dup                     
       193: invokespecial #243                // Method java/util/ArrayList."<init>":()V
       196: astore        11                
       198: aload         11                
       200: new           #17                 // class java/lang/StringBuilder
       203: dup                     
       204: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       207: aload         9                 
       209: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       212: getstatic     #244                // Field java/io/File.separator:Ljava/lang/String;
       215: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: ldc           #248                // String bin
       220: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       223: getstatic     #244                // Field java/io/File.separator:Ljava/lang/String;
       226: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       229: ldc           #250                // String java
       231: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       234: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       237: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       242: pop                     
       243: aload         11                
       245: ldc_w         #257                // String -cp
       248: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       253: pop                     
       254: aload         11                
       256: aload         10                
       258: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       263: pop                     
       264: aload         11                
       266: ldc_w         #259                // String -Xlog:cds
       269: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       274: pop                     
       275: aload         11                
       277: ldc_w         #261                // String -Xshare:dump
       280: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       285: pop                     
       286: aload         11                
       288: new           #17                 // class java/lang/StringBuilder
       291: dup                     
       292: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       295: ldc_w         #263                // String -XX:SharedClassListFile=
       298: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       301: aload         7                 
       303: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       306: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       309: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       314: pop                     
       315: aload         11                
       317: new           #17                 // class java/lang/StringBuilder
       320: dup                     
       321: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       324: ldc_w         #265                // String -XX:SharedArchiveFile=
       327: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       330: aload         5                 
       332: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       335: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       338: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       343: pop                     
       344: invokestatic  #267                // Method jdk/internal/misc/VM.getRuntimeArguments:()[Ljava/lang/String;
       347: astore        12                
       349: aload         12                
       351: ifnull        409               
       354: aload         12                
       356: astore        13                
       358: aload         13                
       360: arraylength             
       361: istore        14                
       363: iconst_0                
       364: istore        15                
       366: iload         15                
       368: iload         14                
       370: if_icmpge     409               
       373: aload         13                
       375: iload         15                
       377: aaload                  
       378: astore        16                
       380: aload         16                
       382: ifnull        403               
       385: aload         16                
       387: invokestatic  #273                // Method containsExcludedFlags:(Ljava/lang/String;)Z
       390: ifne          403               
       393: aload         11                
       395: aload         16                
       397: invokeinterface #252, 2             // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       402: pop                     
       403: iinc          15, 1             
       406: goto          366               
       409: invokestatic  #276                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       412: aload         11                
       414: iconst_0                
       415: anewarray     #37                 // class java/lang/String
       418: invokeinterface #282, 2             // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
       423: checkcast     #286                // class "[Ljava/lang/String;"
       426: invokevirtual #287                // Method java/lang/Runtime.exec:([Ljava/lang/String;)Ljava/lang/Process;
       429: astore        13                
       431: aload         13                
       433: invokevirtual #291                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
       436: aload         13                
       438: invokevirtual #297                // Method java/lang/Process.pid:()J
       441: ldc_w         #298                // String stdout
       444: aload         11                
       446: invokestatic  #300                // Method drainOutput:(Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List;)Ljava/lang/String;
       449: astore        14                
       451: aload         13                
       453: invokevirtual #304                // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
       456: aload         13                
       458: invokevirtual #297                // Method java/lang/Process.pid:()J
       461: ldc_w         #307                // String stderr
       464: aload         11                
       466: invokestatic  #300                // Method drainOutput:(Ljava/io/InputStream;JLjava/lang/String;Ljava/util/List;)Ljava/lang/String;
       469: astore        15                
       471: aload         13                
       473: invokevirtual #309                // Method java/lang/Process.waitFor:()I
       476: pop                     
       477: aload         8                 
       479: invokevirtual #220                // Method java/io/File.delete:()Z
       482: pop                     
       483: aload         6                 
       485: invokevirtual #214                // Method java/io/File.exists:()Z
       488: ifne          568               
       491: new           #312                // class java/lang/RuntimeException
       494: dup                     
       495: new           #17                 // class java/lang/StringBuilder
       498: dup                     
       499: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       502: ldc_w         #314                // String Archive file 
       505: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       508: aload         5                 
       510: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       513: ldc_w         #316                // String  is not created, please check stdout file 
       516: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       519: aload_2                 
       520: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       523: getstatic     #244                // Field java/io/File.separator:Ljava/lang/String;
       526: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       529: aload         14                
       531: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       534: ldc_w         #318                // String  or stderr file 
       537: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       540: aload_2                 
       541: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       544: getstatic     #244                // Field java/io/File.separator:Ljava/lang/String;
       547: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       550: aload         15                
       552: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       555: ldc_w         #320                // String  for more detail
       558: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       561: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       564: invokespecial #322                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       567: athrow                  
       568: goto          639               
       571: aload         5                 
       573: invokestatic  #323                // Method dumpDynamicArchive:(Ljava/lang/String;)V
       576: aload         6                 
       578: invokevirtual #214                // Method java/io/File.exists:()Z
       581: ifne          639               
       584: new           #312                // class java/lang/RuntimeException
       587: dup                     
       588: new           #17                 // class java/lang/StringBuilder
       591: dup                     
       592: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       595: ldc_w         #314                // String Archive file 
       598: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       601: aload         5                 
       603: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       606: ldc_w         #326                // String  is not created, please check current working directory 
       609: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       612: aload_2                 
       613: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       616: ldc_w         #328                // String  for process 
       619: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       622: aload_3                 
       623: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       626: ldc_w         #330                // String  output for more detail
       629: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       632: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       635: invokespecial #322                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       638: athrow                  
       639: new           #186                // class java/io/File
       642: dup                     
       643: aload         4                 
       645: invokespecial #190                // Method java/io/File."<init>":(Ljava/lang/String;)V
       648: astore        7                 
       650: aload         7                 
       652: invokevirtual #214                // Method java/io/File.exists:()Z
       655: ifeq          664               
       658: aload         7                 
       660: invokevirtual #220                // Method java/io/File.delete:()Z
       663: pop                     
       664: aload         6                 
       666: aload         7                 
       668: invokevirtual #332                // Method java/io/File.renameTo:(Ljava/io/File;)Z
       671: ifne          714               
       674: new           #312                // class java/lang/RuntimeException
       677: dup                     
       678: new           #17                 // class java/lang/StringBuilder
       681: dup                     
       682: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       685: ldc_w         #336                // String Cannot rename temp file 
       688: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       691: aload         5                 
       693: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       696: ldc_w         #338                // String  to archive file
       699: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       702: aload         4                 
       704: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       707: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       710: invokespecial #322                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       713: athrow                  
       714: new           #186                // class java/io/File
       717: dup                     
       718: aload         4                 
       720: invokespecial #190                // Method java/io/File."<init>":(Ljava/lang/String;)V
       723: invokevirtual #191                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       726: astore        8                 
       728: getstatic     #340                // Field java/lang/System.out:Ljava/io/PrintStream;
       731: new           #17                 // class java/lang/StringBuilder
       734: dup                     
       735: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       738: ldc_w         #344                // String The process was attached by jcmd and dumped a 
       741: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       744: iload_0                 
       745: ifeq          754               
       748: ldc_w         #346                // String static
       751: goto          757               
       754: ldc_w         #348                // String dynamic
       757: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       760: ldc_w         #350                // String  archive 
       763: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       766: aload         8                 
       768: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       771: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       774: invokevirtual #352                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       777: aload         8                 
       779: areturn                 
      LineNumberTable:
        line 259: 0
        line 260: 13
        line 261: 25
        line 262: 33
        line 264: 68
        line 265: 90
        line 267: 101
        line 268: 109
        line 270: 115
        line 272: 121
        line 273: 125
        line 274: 147
        line 275: 158
        line 276: 166
        line 278: 172
        line 279: 177
        line 280: 182
        line 281: 189
        line 282: 198
        line 283: 243
        line 284: 254
        line 285: 264
        line 286: 275
        line 287: 286
        line 288: 315
        line 291: 344
        line 292: 349
        line 293: 354
        line 294: 380
        line 295: 393
        line 293: 403
        line 300: 409
        line 303: 431
        line 304: 451
        line 306: 471
        line 308: 477
        line 312: 483
        line 313: 491
        line 318: 568
        line 319: 571
        line 320: 576
        line 321: 584
        line 328: 639
        line 329: 650
        line 330: 658
        line 332: 664
        line 333: 674
        line 336: 714
        line 337: 728
        line 338: 777
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
         380       23    16  arg    Ljava/lang/String;
         147      421     7  listFileName Ljava/lang/String;
         158      410     8  listFile Ljava/io/File;
         182      386     9  jdkHome Ljava/lang/String;
         189      379    10  classPath Ljava/lang/String;
         198      370    11  cmds   Ljava/util/List;
         349      219    12  vmArgs [Ljava/lang/String;
         431      137    13  proc   Ljava/lang/Process;
         451      117    14  stdOutFileName Ljava/lang/String;
         471       97    15  stdErrFileName Ljava/lang/String;
           0      780     0  isStatic Z
           0      780     1  fileName Ljava/lang/String;
          13      767     2  cwd    Ljava/lang/String;
          25      755     3  currentPid Ljava/lang/String;
          68      712     4  archiveFileName Ljava/lang/String;
          90      690     5  tempArchiveFileName Ljava/lang/String;
         101      679     6  tempArchiveFile Ljava/io/File;
         650      130     7  archiveFile Ljava/io/File;
         728       52     8  archiveFilePath Ljava/lang/String;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
           198      370    11  cmds   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 16
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [class java/lang/String, class java/lang/String]
        frame_type = 88 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [int, class java/lang/String, class java/lang/String, class java/lang/String]
          stack = [class java/lang/StringBuilder, class java/lang/String]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 254 /* append */
          offset_delta = 48
          locals = [class java/lang/String, class java/lang/String, class java/io/File]
        frame_type = 253 /* append */
          offset_delta = 56
          locals = [class java/lang/String, class java/io/File]
        frame_type = 255 /* full_frame */
          offset_delta = 193
          locals = [int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/io/File, class java/lang/String, class java/io/File, class java/lang/String, class java/lang/String, class java/util/List, class "[Ljava/lang/String;", class "[Ljava/lang/String;", int, int]
          stack = []
        frame_type = 36 /* same */
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 255 /* full_frame */
          offset_delta = 158
          locals = [int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/io/File]
          stack = []
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [class java/io/File]
        frame_type = 49 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/io/File, class java/io/File, class java/lang/String]
          stack = [class java/io/PrintStream, class java/lang/StringBuilder]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [int, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/io/File, class java/io/File, class java/lang/String]
          stack = [class java/io/PrintStream, class java/lang/StringBuilder, class java/lang/String]
    Exceptions:
      throws java.lang.Exception
  
  private static void lambda$drainOutput$0(java.io.InputStream, java.lang.String, java.util.List);
    descriptor: (Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)V
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code: 
      stack=4, locals=8, args_size=3
         0: new           #357                // class java/io/InputStreamReader
         3: dup                     
         4: aload_0                 
         5: invokespecial #359                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
         8: astore_3                
         9: new           #362                // class java/io/BufferedReader
        12: dup                     
        13: aload_3                 
        14: invokespecial #364                // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
        17: astore        4                 
        19: new           #353                // class java/io/PrintStream
        22: dup                     
        23: aload_1                 
        24: invokespecial #367                // Method java/io/PrintStream."<init>":(Ljava/lang/String;)V
        27: astore        5                 
        29: aload         5                 
        31: ldc_w         #368                // String Command:
        34: invokevirtual #352                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        37: aload_2                 
        38: invokeinterface #370, 1             // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        43: astore        6                 
        45: aload         6                 
        47: invokeinterface #144, 1             // InterfaceMethod java/util/Iterator.hasNext:()Z
        52: ifeq          95                
        55: aload         6                 
        57: invokeinterface #149, 1             // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        62: checkcast     #37                 // class java/lang/String
        65: astore        7                 
        67: aload         5                 
        69: new           #17                 // class java/lang/StringBuilder
        72: dup                     
        73: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        76: aload         7                 
        78: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        81: ldc           #24                 // String  
        83: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        89: invokevirtual #371                // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        92: goto          45                
        95: aload         5                 
        97: ldc           #188                // String 
        99: invokevirtual #352                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       102: aload         4                 
       104: invokevirtual #374                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
       107: dup                     
       108: astore        6                 
       110: ifnull        123               
       113: aload         5                 
       115: aload         6                 
       117: invokevirtual #352                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       120: goto          102               
       123: aload         5                 
       125: invokevirtual #377                // Method java/io/PrintStream.close:()V
       128: goto          153               
       131: astore        6                 
       133: aload         5                 
       135: invokevirtual #377                // Method java/io/PrintStream.close:()V
       138: goto          150               
       141: astore        7                 
       143: aload         6                 
       145: aload         7                 
       147: invokevirtual #382                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       150: aload         6                 
       152: athrow                  
       153: aload         4                 
       155: invokevirtual #386                // Method java/io/BufferedReader.close:()V
       158: goto          183               
       161: astore        5                 
       163: aload         4                 
       165: invokevirtual #386                // Method java/io/BufferedReader.close:()V
       168: goto          180               
       171: astore        6                 
       173: aload         5                 
       175: aload         6                 
       177: invokevirtual #382                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       180: aload         5                 
       182: athrow                  
       183: aload_3                 
       184: invokevirtual #387                // Method java/io/InputStreamReader.close:()V
       187: goto          211               
       190: astore        4                 
       192: aload_3                 
       193: invokevirtual #387                // Method java/io/InputStreamReader.close:()V
       196: goto          208               
       199: astore        5                 
       201: aload         4                 
       203: aload         5                 
       205: invokevirtual #382                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       208: aload         4                 
       210: athrow                  
       211: goto          256               
       214: astore_3                
       215: new           #312                // class java/lang/RuntimeException
       218: dup                     
       219: new           #17                 // class java/lang/StringBuilder
       222: dup                     
       223: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       226: ldc_w         #390                // String IOException happens during drain stream to file 
       229: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       232: aload_1                 
       233: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       236: ldc_w         #392                // String : 
       239: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       242: aload_3                 
       243: invokevirtual #394                // Method java/io/IOException.getMessage:()Ljava/lang/String;
       246: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       249: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       252: invokespecial #322                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       255: athrow                  
       256: return                  
      Exception table:
          from       to target type
            29      123   131  Class java/lang/Throwable
           133      138   141  Class java/lang/Throwable
            19      153   161  Class java/lang/Throwable
           163      168   171  Class java/lang/Throwable
             9      183   190  Class java/lang/Throwable
           192      196   199  Class java/lang/Throwable
             0      211   214  Class java/io/IOException
      LineNumberTable:
        line 217: 0
        line 218: 9
        line 219: 19
        line 220: 29
        line 221: 37
        line 222: 67
        line 223: 92
        line 224: 95
        line 226: 102
        line 227: 113
        line 229: 123
        line 217: 131
        line 229: 153
        line 217: 161
        line 229: 183
        line 217: 190
        line 232: 211
        line 229: 214
        line 230: 215
        line 231: 243
        line 232: 256
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          67       25     7  s      Ljava/lang/String;
          45       50     6  i$     Ljava/util/Iterator;
         110       13     6  line   Ljava/lang/String;
         143        7     7  x2     Ljava/lang/Throwable;
         133       20     6  t$     Ljava/lang/Throwable;
          29      124     5  prt    Ljava/io/PrintStream;
         173        7     6  x2     Ljava/lang/Throwable;
         163       20     5  t$     Ljava/lang/Throwable;
          19      164     4  rdr    Ljava/io/BufferedReader;
         201        7     5  x2     Ljava/lang/Throwable;
         192       19     4  t$     Ljava/lang/Throwable;
           9      202     3  isr    Ljava/io/InputStreamReader;
         215       41     3  e      Ljava/io/IOException;
           0      257     0  stream Ljava/io/InputStream;
           0      257     1  fileName Ljava/lang/String;
           0      257     2  cmds   Ljava/util/List;
      StackMapTable: number_of_entries = 18
        frame_type = 255 /* full_frame */
          offset_delta = 45
          locals = [class java/io/InputStream, class java/lang/String, class java/util/List, class java/io/InputStreamReader, class java/io/BufferedReader, class java/io/PrintStream, class java/util/Iterator]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 49
        frame_type = 6 /* same */
        frame_type = 20 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [class java/io/InputStream, class java/lang/String, class java/util/List, class java/io/InputStreamReader, class java/io/BufferedReader, class java/io/PrintStream, class java/lang/Throwable]
          stack = [class java/lang/Throwable]
        frame_type = 8 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [class java/io/InputStream, class java/lang/String, class java/util/List, class java/io/InputStreamReader, class java/io/BufferedReader, class java/lang/Throwable]
          stack = [class java/lang/Throwable]
        frame_type = 8 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [class java/io/InputStream, class java/lang/String, class java/util/List, class java/io/InputStreamReader, class java/lang/Throwable]
          stack = [class java/lang/Throwable]
        frame_type = 8 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/IOException ]
        frame_type = 41 /* same */
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=4, locals=0, args_size=0
         0: invokestatic  #397                // Method getCDSConfigStatus:()I
         3: putstatic     #7                  // Field configStatus:I
         6: bipush        6                 
         8: anewarray     #37                 // class java/lang/String
        11: dup                     
        12: iconst_0                
        13: ldc_w         #400                // String -XX:DumpLoadedClassList=
        16: aastore                 
        17: dup                     
        18: iconst_1                
        19: ldc_w         #402                // String -XX:+RecordDynamicDumpInfo
        22: aastore                 
        23: dup                     
        24: iconst_2                
        25: ldc_w         #404                // String -Xshare:
        28: aastore                 
        29: dup                     
        30: iconst_3                
        31: ldc_w         #263                // String -XX:SharedClassListFile=
        34: aastore                 
        35: dup                     
        36: iconst_4                
        37: ldc_w         #265                // String -XX:SharedArchiveFile=
        40: aastore                 
        41: dup                     
        42: iconst_5                
        43: ldc_w         #406                // String -XX:ArchiveClassesAtExit=
        46: aastore                 
        47: putstatic     #178                // Field excludeFlags:[Ljava/lang/String;
        50: return                  
      LineNumberTable:
        line 50: 0
        line 236: 6
}
SourceFile: "CDS.java"
BootstrapMethods:
  0: #530 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #526 ()V
      #527 REF_invokeStatic jdk/internal/misc/CDS.lambda$drainOutput$0:(Ljava/io/InputStream;Ljava/lang/String;Ljava/util/List;)V
      #526 ()V
InnerClasses:
  public static #538= #153 of #130;           // Entry=class java/util/Map$Entry of class java/util/Map
  public static final #543= #539 of #541;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
