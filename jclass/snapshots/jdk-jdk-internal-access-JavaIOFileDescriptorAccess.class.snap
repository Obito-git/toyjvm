---
source: jclass/src/lib.rs
expression: display
---
public interface jdk.internal.access.JavaIOFileDescriptorAccess 
  minor version: 0
  major version: 68
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #1                       //jdk/internal/access/JavaIOFileDescriptorAccess
  super_class: #3                      //java/lang/Object
  interfaces: 0, fields: 0, methods: 10, attributes: 1
Constant pool:
   #1 = Class              #2               // jdk/internal/access/JavaIOFileDescriptorAccess
   #2 = Utf8               jdk/internal/access/JavaIOFileDescriptorAccess
   #3 = Class              #4               // java/lang/Object
   #4 = Utf8               java/lang/Object
   #5 = Utf8               set
   #6 = Utf8               (Ljava/io/FileDescriptor;I)V
   #7 = Utf8               get
   #8 = Utf8               (Ljava/io/FileDescriptor;)I
   #9 = Utf8               setAppend
  #10 = Utf8               (Ljava/io/FileDescriptor;Z)V
  #11 = Utf8               getAppend
  #12 = Utf8               (Ljava/io/FileDescriptor;)Z
  #13 = Utf8               close
  #14 = Utf8               (Ljava/io/FileDescriptor;)V
  #15 = Utf8               Exceptions
  #16 = Class              #17              // java/io/IOException
  #17 = Utf8               java/io/IOException
  #18 = Utf8               registerCleanup
  #19 = Utf8               (Ljava/io/FileDescriptor;Ljdk/internal/ref/PhantomCleanable;)V
  #20 = Utf8               Signature
  #21 = Utf8               (Ljava/io/FileDescriptor;Ljdk/internal/ref/PhantomCleanable<Ljava/io/FileDescriptor;>;)V
  #22 = Utf8               unregisterCleanup
  #23 = Utf8               setHandle
  #24 = Utf8               (Ljava/io/FileDescriptor;J)V
  #25 = Utf8               getHandle
  #26 = Utf8               (Ljava/io/FileDescriptor;)J
  #27 = Utf8               SourceFile
  #28 = Utf8               JavaIOFileDescriptorAccess.java
{
  public abstract void set(java.io.FileDescriptor, int);
    descriptor: (Ljava/io/FileDescriptor;I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract int get(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract void setAppend(java.io.FileDescriptor, boolean);
    descriptor: (Ljava/io/FileDescriptor;Z)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract boolean getAppend(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract void close(java.io.FileDescriptor) throws java.io.IOException;
    descriptor: (Ljava/io/FileDescriptor;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException
  
  public abstract void registerCleanup(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract void registerCleanup(java.io.FileDescriptor, jdk.internal.ref.PhantomCleanable<java.io.FileDescriptor>);
    descriptor: (Ljava/io/FileDescriptor;Ljdk/internal/ref/PhantomCleanable;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #21                         // (Ljava/io/FileDescriptor;Ljdk/internal/ref/PhantomCleanable<Ljava/io/FileDescriptor;>;)V
  
  public abstract void unregisterCleanup(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract void setHandle(java.io.FileDescriptor, long);
    descriptor: (Ljava/io/FileDescriptor;J)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract long getHandle(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)J
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
}
SourceFile: "JavaIOFileDescriptorAccess.java"
