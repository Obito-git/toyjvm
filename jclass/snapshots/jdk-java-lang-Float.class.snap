---
source: jclass/src/lib.rs
expression: display
---
public final class java.lang.Float extends java.lang.Number implements java.lang.Comparable<java.lang.Float>, java.lang.constant.Constable, java.lang.constant.ConstantDesc
  minor version: 0
  major version: 68
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #1                       //java/lang/Float
  super_class: #51                     //java/lang/Number
  interfaces: 3, fields: 15, methods: 38, attributes: 4
Constant pool:
    #1 = Class              #2               // java/lang/Float
    #2 = Utf8               java/lang/Float
    #3 = Class              #4               // java/lang/Byte
    #4 = Utf8               java/lang/Byte
    #5 = Methodref          #6.#7            // jdk/internal/math/FloatToDecimal.toString:(F)Ljava/lang/String;
    #6 = Class              #8               // jdk/internal/math/FloatToDecimal
    #7 = NameAndType        #9:#10           // toString:(F)Ljava/lang/String;
    #8 = Utf8               jdk/internal/math/FloatToDecimal
    #9 = Utf8               toString
   #10 = Utf8               (F)Ljava/lang/String;
   #11 = Methodref          #12.#13          // java/lang/Math.abs:(F)F
   #12 = Class              #14              // java/lang/Math
   #13 = NameAndType        #15:#16          // abs:(F)F
   #14 = Utf8               java/lang/Math
   #15 = Utf8               abs
   #16 = Utf8               (F)F
   #17 = Float              1.1754944E-38f
   #18 = Class              #19              // java/lang/Double
   #19 = Utf8               java/lang/Double
   #20 = Methodref          #12.#21          // java/lang/Math.scalb:(DI)D
   #21 = NameAndType        #22:#23          // scalb:(DI)D
   #22 = Utf8               scalb
   #23 = Utf8               (DI)D
   #24 = Methodref          #18.#25          // java/lang/Double.toHexString:(D)Ljava/lang/String;
   #25 = NameAndType        #26:#27          // toHexString:(D)Ljava/lang/String;
   #26 = Utf8               toHexString
   #27 = Utf8               (D)Ljava/lang/String;
   #28 = String             #29              // p-1022$
   #29 = Utf8               p-1022$
   #30 = String             #31              // p-126
   #31 = Utf8               p-126
   #32 = Methodref          #33.#34          // java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #33 = Class              #35              // java/lang/String
   #34 = NameAndType        #36:#37          // replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #35 = Utf8               java/lang/String
   #36 = Utf8               replaceFirst
   #37 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #38 = Methodref          #1.#39           // java/lang/Float.parseFloat:(Ljava/lang/String;)F
   #39 = NameAndType        #40:#41          // parseFloat:(Ljava/lang/String;)F
   #40 = Utf8               parseFloat
   #41 = Utf8               (Ljava/lang/String;)F
   #42 = Methodref          #1.#43           // java/lang/Float."<init>":(F)V
   #43 = NameAndType        #44:#45          // "<init>":(F)V
   #44 = Utf8               <init>
   #45 = Utf8               (F)V
   #46 = Methodref          #47.#39          // jdk/internal/math/FloatingDecimal.parseFloat:(Ljava/lang/String;)F
   #47 = Class              #48              // jdk/internal/math/FloatingDecimal
   #48 = Utf8               jdk/internal/math/FloatingDecimal
   #49 = Float              3.4028235E38f
   #50 = Methodref          #51.#52          // java/lang/Number."<init>":()V
   #51 = Class              #53              // java/lang/Number
   #52 = NameAndType        #44:#54          // "<init>":()V
   #53 = Utf8               java/lang/Number
   #54 = Utf8               ()V
   #55 = Fieldref           #1.#56           // java/lang/Float.value:F
   #56 = NameAndType        #57:#58          // value:F
   #57 = Utf8               value
   #58 = Utf8               F
   #59 = Methodref          #1.#60           // java/lang/Float.isNaN:(F)Z
   #60 = NameAndType        #61:#62          // isNaN:(F)Z
   #61 = Utf8               isNaN
   #62 = Utf8               (F)Z
   #63 = Methodref          #1.#64           // java/lang/Float.isInfinite:(F)Z
   #64 = NameAndType        #65:#62          // isInfinite:(F)Z
   #65 = Utf8               isInfinite
   #66 = Methodref          #1.#7            // java/lang/Float.toString:(F)Ljava/lang/String;
   #67 = Methodref          #1.#68           // java/lang/Float.hashCode:(F)I
   #68 = NameAndType        #69:#70          // hashCode:(F)I
   #69 = Utf8               hashCode
   #70 = Utf8               (F)I
   #71 = Methodref          #1.#72           // java/lang/Float.floatToIntBits:(F)I
   #72 = NameAndType        #73:#70          // floatToIntBits:(F)I
   #73 = Utf8               floatToIntBits
   #74 = Methodref          #1.#75           // java/lang/Float.floatToRawIntBits:(F)I
   #75 = NameAndType        #76:#70          // floatToRawIntBits:(F)I
   #76 = Utf8               floatToRawIntBits
   #77 = Integer            2143289344
   #78 = Integer            32768
   #79 = Class              #80              // jdk/internal/math/FloatConsts
   #80 = Utf8               jdk/internal/math/FloatConsts
   #81 = Float              -1.0f
   #82 = Float              5.9604645E-8f
   #83 = Float              Infinityf
   #84 = Integer            2139095040
   #85 = Methodref          #1.#86           // java/lang/Float.intBitsToFloat:(I)F
   #86 = NameAndType        #87:#88          // intBitsToFloat:(I)F
   #87 = Utf8               intBitsToFloat
   #88 = Utf8               (I)F
   #89 = Fieldref           #1.#90           // java/lang/Float.$assertionsDisabled:Z
   #90 = NameAndType        #91:#92          // $assertionsDisabled:Z
   #91 = Utf8               $assertionsDisabled
   #92 = Utf8               Z
   #93 = Class              #94              // java/lang/AssertionError
   #94 = Utf8               java/lang/AssertionError
   #95 = Methodref          #93.#52          // java/lang/AssertionError."<init>":()V
   #96 = Integer            -2147483648
   #97 = Integer            8380416
   #98 = Float              65520.0f
   #99 = Float              2.9802322E-8f
  #100 = Methodref          #12.#101         // java/lang/Math.getExponent:(F)I
  #101 = NameAndType        #102:#70         // getExponent:(F)I
  #102 = Utf8               getExponent
  #103 = Integer            8388608
  #104 = Integer            8388607
  #105 = Integer            63488
  #106 = Methodref          #1.#107          // java/lang/Float.compare:(FF)I
  #107 = NameAndType        #108:#109        // compare:(FF)I
  #108 = Utf8               compare
  #109 = Utf8               (FF)I
  #110 = Methodref          #12.#111         // java/lang/Math.max:(FF)F
  #111 = NameAndType        #112:#113        // max:(FF)F
  #112 = Utf8               max
  #113 = Utf8               (FF)F
  #114 = Methodref          #12.#115         // java/lang/Math.min:(FF)F
  #115 = NameAndType        #116:#113        // min:(FF)F
  #116 = Utf8               min
  #117 = Methodref          #118.#119        // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
  #118 = Class              #120             // java/util/Optional
  #119 = NameAndType        #121:#122        // of:(Ljava/lang/Object;)Ljava/util/Optional;
  #120 = Utf8               java/util/Optional
  #121 = Utf8               of
  #122 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
  #123 = Methodref          #1.#124          // java/lang/Float.compareTo:(Ljava/lang/Float;)I
  #124 = NameAndType        #125:#126        // compareTo:(Ljava/lang/Float;)I
  #125 = Utf8               compareTo
  #126 = Utf8               (Ljava/lang/Float;)I
  #127 = Methodref          #1.#128          // java/lang/Float.resolveConstantDesc:(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Float;
  #128 = NameAndType        #129:#130        // resolveConstantDesc:(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Float;
  #129 = Utf8               resolveConstantDesc
  #130 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Float;
  #131 = Methodref          #132.#133        // java/lang/Class.desiredAssertionStatus:()Z
  #132 = Class              #134             // java/lang/Class
  #133 = NameAndType        #135:#136        // desiredAssertionStatus:()Z
  #134 = Utf8               java/lang/Class
  #135 = Utf8               desiredAssertionStatus
  #136 = Utf8               ()Z
  #137 = String             #138             // float
  #138 = Utf8               float
  #139 = Methodref          #132.#140        // java/lang/Class.getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
  #140 = NameAndType        #141:#142        // getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
  #141 = Utf8               getPrimitiveClass
  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;
  #143 = Fieldref           #1.#144          // java/lang/Float.TYPE:Ljava/lang/Class;
  #144 = NameAndType        #145:#146        // TYPE:Ljava/lang/Class;
  #145 = Utf8               TYPE
  #146 = Utf8               Ljava/lang/Class;
  #147 = Class              #148             // java/lang/Comparable
  #148 = Utf8               java/lang/Comparable
  #149 = Class              #150             // java/lang/constant/Constable
  #150 = Utf8               java/lang/constant/Constable
  #151 = Class              #152             // java/lang/constant/ConstantDesc
  #152 = Utf8               java/lang/constant/ConstantDesc
  #153 = Utf8               POSITIVE_INFINITY
  #154 = Utf8               ConstantValue
  #155 = Utf8               NEGATIVE_INFINITY
  #156 = Float              -Infinityf
  #157 = Utf8               NaN
  #158 = Float              NaNf
  #159 = Utf8               MAX_VALUE
  #160 = Utf8               MIN_NORMAL
  #161 = Utf8               MIN_VALUE
  #162 = Float              1.4E-45f
  #163 = Utf8               SIZE
  #164 = Utf8               I
  #165 = Integer            32
  #166 = Utf8               PRECISION
  #167 = Integer            24
  #168 = Utf8               MAX_EXPONENT
  #169 = Integer            127
  #170 = Utf8               MIN_EXPONENT
  #171 = Integer            -126
  #172 = Utf8               BYTES
  #173 = Integer            4
  #174 = Utf8               Signature
  #175 = Utf8               Ljava/lang/Class<Ljava/lang/Float;>;
  #176 = Utf8               serialVersionUID
  #177 = Utf8               J
  #178 = Long               -2671257302660747028l
  #180 = Utf8               Code
  #181 = Utf8               LineNumberTable
  #182 = Utf8               LocalVariableTable
  #183 = Utf8               f
  #184 = Utf8               s
  #185 = Utf8               Ljava/lang/String;
  #186 = Utf8               StackMapTable
  #187 = Utf8               valueOf
  #188 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;
  #189 = Utf8               Exceptions
  #190 = Class              #191             // java/lang/NumberFormatException
  #191 = Utf8               java/lang/NumberFormatException
  #192 = Utf8               (F)Ljava/lang/Float;
  #193 = Utf8               RuntimeVisibleAnnotations
  #194 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;
  #195 = Utf8               v
  #196 = Utf8               isFinite
  #197 = Utf8               this
  #198 = Utf8               Ljava/lang/Float;
  #199 = Utf8               Deprecated
  #200 = Utf8               Ljava/lang/Deprecated;
  #201 = Utf8               since
  #202 = Utf8               9
  #203 = Utf8               forRemoval
  #204 = Integer            1
  #205 = Utf8               (D)V
  #206 = Utf8               D
  #207 = Utf8               (Ljava/lang/String;)V
  #208 = Utf8               ()Ljava/lang/String;
  #209 = Utf8               byteValue
  #210 = Utf8               ()B
  #211 = Utf8               shortValue
  #212 = Utf8               ()S
  #213 = Utf8               intValue
  #214 = Utf8               ()I
  #215 = Utf8               longValue
  #216 = Utf8               ()J
  #217 = Utf8               floatValue
  #218 = Utf8               ()F
  #219 = Utf8               doubleValue
  #220 = Utf8               ()D
  #221 = Utf8               equals
  #222 = Utf8               (Ljava/lang/Object;)Z
  #223 = Utf8               obj
  #224 = Utf8               Ljava/lang/Object;
  #225 = Utf8               float16ToFloat
  #226 = Utf8               (S)F
  #227 = Utf8               floatBinary16
  #228 = Utf8               S
  #229 = Utf8               bin16arg
  #230 = Utf8               bin16SignBit
  #231 = Utf8               bin16ExpBits
  #232 = Utf8               bin16SignifBits
  #233 = Utf8               SIGNIF_SHIFT
  #234 = Utf8               sign
  #235 = Utf8               bin16Exp
  #236 = Utf8               floatExpBits
  #237 = Utf8               floatToFloat16
  #238 = Utf8               (F)S
  #239 = Utf8               doppel
  #240 = Utf8               sign_bit
  #241 = Utf8               abs_f
  #242 = Utf8               exp
  #243 = Utf8               expdelta
  #244 = Utf8               msb
  #245 = Utf8               f_signif_bits
  #246 = Utf8               signif_bits
  #247 = Utf8               lsb
  #248 = Utf8               round
  #249 = Utf8               sticky
  #250 = Utf8               anotherFloat
  #251 = Utf8               f1
  #252 = Utf8               f2
  #253 = Utf8               thisBits
  #254 = Utf8               anotherBits
  #255 = Utf8               sum
  #256 = Utf8               a
  #257 = Utf8               b
  #258 = Utf8               describeConstable
  #259 = Utf8               ()Ljava/util/Optional;
  #260 = Utf8               ()Ljava/util/Optional<Ljava/lang/Float;>;
  #261 = Utf8               lookup
  #262 = Utf8               Ljava/lang/invoke/MethodHandles$Lookup;
  #263 = Utf8               (Ljava/lang/Object;)I
  #264 = Utf8               MethodParameters
  #265 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Object;
  #266 = Class              #267             // java/lang/ReflectiveOperationException
  #267 = Utf8               java/lang/ReflectiveOperationException
  #268 = Utf8               <clinit>
  #269 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Ljava/lang/Float;>;Ljava/lang/constant/Constable;Ljava/lang/constant/ConstantDesc;
  #270 = Utf8               SourceFile
  #271 = Utf8               Float.java
  #272 = Utf8               Ljdk/internal/ValueBased;
  #273 = Utf8               InnerClasses
  #274 = Class              #275             // java/lang/invoke/MethodHandles$Lookup
  #275 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #276 = Class              #277             // java/lang/invoke/MethodHandles
  #277 = Utf8               java/lang/invoke/MethodHandles
  #278 = Utf8               Lookup
{
  public static final float POSITIVE_INFINITY;
    descriptor: F
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: float Infinityf
  
  public static final float NEGATIVE_INFINITY;
    descriptor: F
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: float -Infinityf
  
  public static final float NaN;
    descriptor: F
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: float NaNf
  
  public static final float MAX_VALUE;
    descriptor: F
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: float 3.4028235E38f
  
  public static final float MIN_NORMAL;
    descriptor: F
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: float 1.1754944E-38f
  
  public static final float MIN_VALUE;
    descriptor: F
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: float 1.4E-45f
  
  public static final int SIZE;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 32
  
  public static final int PRECISION;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 24
  
  public static final int MAX_EXPONENT;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 127
  
  public static final int MIN_EXPONENT;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int -126
  
  public static final int BYTES;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4
  
  public static final java.lang.Class<java.lang.Float> TYPE;
    descriptor: Ljava/lang/Class;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Signature: #175                        // Ljava/lang/Class<Ljava/lang/Float;>;
  
  private final float value;
    descriptor: F
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long -2671257302660747028l
  
  static final boolean $assertionsDisabled;
    descriptor: Z
    flags: (0x1018) ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
  
  public static java.lang.String toString(float);
    descriptor: (F)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #5                  // Method jdk/internal/math/FloatToDecimal.toString:(F)Ljava/lang/String;
         4: areturn                 
      LineNumberTable:
        line 330: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  f      F
  
  public static java.lang.String toHexString(float);
    descriptor: (F)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=1
         0: fload_0                 
         1: invokestatic  #11                 // Method java/lang/Math.abs:(F)F
         4: ldc           #17                 // float 1.1754944E-38f
         6: fcmpg                   
         7: ifge          37                
        10: fload_0                 
        11: fconst_0                
        12: fcmpl                   
        13: ifeq          37                
        16: fload_0                 
        17: f2d                     
        18: sipush        -896              
        21: invokestatic  #20                 // Method java/lang/Math.scalb:(DI)D
        24: invokestatic  #24                 // Method java/lang/Double.toHexString:(D)Ljava/lang/String;
        27: astore_1                
        28: aload_1                 
        29: ldc           #28                 // String p-1022$
        31: ldc           #30                 // String p-126
        33: invokevirtual #32                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        36: areturn                 
        37: fload_0                 
        38: f2d                     
        39: invokestatic  #24                 // Method java/lang/Double.toHexString:(D)Ljava/lang/String;
        42: areturn                 
      LineNumberTable:
        line 417: 0
        line 422: 16
        line 426: 28
        line 429: 37
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          28        9     1  s      Ljava/lang/String;
           0       43     0  f      F
      StackMapTable: number_of_entries = 1
        frame_type = 37 /* same */
  
  public static java.lang.Float valueOf(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)Ljava/lang/Float;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: new           #1                  // class java/lang/Float
         3: dup                     
         4: aload_0                 
         5: invokestatic  #38                 // Method parseFloat:(Ljava/lang/String;)F
         8: invokespecial #42                 // Method "<init>":(F)V
        11: areturn                 
      LineNumberTable:
        line 560: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  s      Ljava/lang/String;
    Exceptions:
      throws java.lang.NumberFormatException
  
  public static java.lang.Float valueOf(float);
    descriptor: (F)Ljava/lang/Float;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: new           #1                  // class java/lang/Float
         3: dup                     
         4: fload_0                 
         5: invokespecial #42                 // Method "<init>":(F)V
         8: areturn                 
      LineNumberTable:
        line 578: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  f      F
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static float parseFloat(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #46                 // Method jdk/internal/math/FloatingDecimal.parseFloat:(Ljava/lang/String;)F
         4: freturn                 
      LineNumberTable:
        line 597: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  s      Ljava/lang/String;
    Exceptions:
      throws java.lang.NumberFormatException
  
  public static boolean isNaN(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: fload_0                 
         1: fload_0                 
         2: fcmpl                   
         3: ifeq          10                
         6: iconst_1                
         7: goto          11                
        10: iconst_0                
        11: ireturn                 
      LineNumberTable:
        line 613: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  v      F
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static boolean isInfinite(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #11                 // Method java/lang/Math.abs:(F)F
         4: ldc           #49                 // float 3.4028235E38f
         6: fcmpl                   
         7: ifle          14                
        10: iconst_1                
        11: goto          15                
        14: iconst_0                
        15: ireturn                 
      LineNumberTable:
        line 630: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  v      F
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static boolean isFinite(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #11                 // Method java/lang/Math.abs:(F)F
         4: ldc           #49                 // float 3.4028235E38f
         6: fcmpg                   
         7: ifgt          14                
        10: iconst_1                
        11: goto          15                
        14: iconst_0                
        15: ireturn                 
      LineNumberTable:
        line 650: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  f      F
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public java.lang.Float(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #50                 // Method java/lang/Number."<init>":()V
         4: aload_0                 
         5: fload_1                 
         6: putfield      #55                 // Field value:F
         9: return                  
      LineNumberTable:
        line 672: 0
        line 673: 4
        line 674: 9
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/lang/Float;
           0       10     1  value  F
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #200(#201=s#202,#203=Z#204)
        java.lang.Deprecated(
          since="9"
          forRemoval=true
        )
  
  public java.lang.Float(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=3, args_size=2
         0: aload_0                 
         1: invokespecial #50                 // Method java/lang/Number."<init>":()V
         4: aload_0                 
         5: dload_1                 
         6: d2f                     
         7: putfield      #55                 // Field value:F
        10: return                  
      LineNumberTable:
        line 688: 0
        line 689: 4
        line 690: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  this   Ljava/lang/Float;
           0       11     1  value  D
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #200(#201=s#202,#203=Z#204)
        java.lang.Deprecated(
          since="9"
          forRemoval=true
        )
  
  public java.lang.Float(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #50                 // Method java/lang/Number."<init>":()V
         4: aload_0                 
         5: aload_1                 
         6: invokestatic  #38                 // Method parseFloat:(Ljava/lang/String;)F
         9: putfield      #55                 // Field value:F
        12: return                  
      LineNumberTable:
        line 709: 0
        line 710: 4
        line 711: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  this   Ljava/lang/Float;
           0       13     1  s      Ljava/lang/String;
    Exceptions:
      throws java.lang.NumberFormatException
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #200(#201=s#202,#203=Z#204)
        java.lang.Deprecated(
          since="9"
          forRemoval=true
        )
  
  public boolean isNaN();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: invokestatic  #59                 // Method isNaN:(F)Z
         7: ireturn                 
      LineNumberTable:
        line 721: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/lang/Float;
  
  public boolean isInfinite();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: invokestatic  #63                 // Method isInfinite:(F)Z
         7: ireturn                 
      LineNumberTable:
        line 733: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/lang/Float;
  
  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: invokestatic  #66                 // Method toString:(F)Ljava/lang/String;
         7: areturn                 
      LineNumberTable:
        line 746: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/lang/Float;
  
  public byte byteValue();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: f2i                     
         5: i2b                     
         6: ireturn                 
      LineNumberTable:
        line 759: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/lang/Float;
  
  public short shortValue();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: f2i                     
         5: i2s                     
         6: ireturn                 
      LineNumberTable:
        line 773: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/lang/Float;
  
  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: f2i                     
         5: ireturn                 
      LineNumberTable:
        line 790: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Float;
  
  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: f2l                     
         5: lreturn                 
      LineNumberTable:
        line 807: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Float;
  
  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: freturn                 
      LineNumberTable:
        line 818: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/Float;
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: f2d                     
         5: dreturn                 
      LineNumberTable:
        line 835: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Float;
  
  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: invokestatic  #67                 // Method hashCode:(F)I
         7: ireturn                 
      LineNumberTable:
        line 849: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/lang/Float;
  
  public static int hashCode(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #71                 // Method floatToIntBits:(F)I
         4: ireturn                 
      LineNumberTable:
        line 861: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  value  F
  
  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=3, args_size=2
         0: aload_1                 
         1: instanceof    #1                  // class java/lang/Float
         4: ifeq          33                
         7: aload_1                 
         8: checkcast     #1                  // class java/lang/Float
        11: astore_2                
        12: aload_2                 
        13: getfield      #55                 // Field value:F
        16: invokestatic  #71                 // Method floatToIntBits:(F)I
        19: aload_0                 
        20: getfield      #55                 // Field value:F
        23: invokestatic  #71                 // Method floatToIntBits:(F)I
        26: if_icmpne     33                
        29: iconst_1                
        30: goto          34                
        33: iconst_0                
        34: ireturn                 
      LineNumberTable:
        line 891: 0
        line 892: 16
        line 891: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12       21     2  f      Ljava/lang/Float;
           0       35     0  this   Ljava/lang/Float;
           0       35     1  obj    Ljava/lang/Object;
      StackMapTable: number_of_entries = 2
        frame_type = 33 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static int floatToIntBits(float);
    descriptor: (F)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: fload_0                 
         1: invokestatic  #59                 // Method isNaN:(F)Z
         4: ifne          12                
         7: fload_0                 
         8: invokestatic  #74                 // Method floatToRawIntBits:(F)I
        11: ireturn                 
        12: ldc           #77                 // int 2143289344
        14: ireturn                 
      LineNumberTable:
        line 928: 0
        line 929: 7
        line 931: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       15     0  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static native int floatToRawIntBits(float);
    descriptor: (F)I
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static native float intBitsToFloat(int);
    descriptor: (I)F
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static float float16ToFloat(short);
    descriptor: (S)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=9, args_size=1
         0: iload_0                 
         1: istore_1                
         2: ldc           #78                 // int 32768
         4: iload_1                 
         5: iand                    
         6: istore_2                
         7: sipush        31744             
        10: iload_1                 
        11: iand                    
        12: istore_3                
        13: sipush        1023              
        16: iload_1                 
        17: iand                    
        18: istore        4                 
        20: bipush        13                
        22: istore        5                 
        24: iload_2                 
        25: ifeq          33                
        28: ldc           #81                 // float -1.0f
        30: goto          34                
        33: fconst_1                
        34: fstore        6                 
        36: iload_3                 
        37: bipush        10                
        39: ishr                    
        40: bipush        15                
        42: isub                    
        43: istore        7                 
        45: iload         7                 
        47: bipush        -15               
        49: if_icmpne     62                
        52: fload         6                 
        54: ldc           #82                 // float 5.9604645E-8f
        56: iload         4                 
        58: i2f                     
        59: fmul                    
        60: fmul                    
        61: freturn                 
        62: iload         7                 
        64: bipush        16                
        66: if_icmpne     99                
        69: iload         4                 
        71: ifne          82                
        74: fload         6                 
        76: ldc           #83                 // float Infinityf
        78: fmul                    
        79: goto          98                
        82: iload_2                 
        83: bipush        16                
        85: ishl                    
        86: ldc           #84                 // int 2139095040
        88: ior                     
        89: iload         4                 
        91: bipush        13                
        93: ishl                    
        94: ior                     
        95: invokestatic  #85                 // Method intBitsToFloat:(I)F
        98: freturn                 
        99: getstatic     #89                 // Field $assertionsDisabled:Z
       102: ifne          127               
       105: bipush        -15               
       107: iload         7                 
       109: if_icmpge     119               
       112: iload         7                 
       114: bipush        16                
       116: if_icmplt     127               
       119: new           #93                 // class java/lang/AssertionError
       122: dup                     
       123: invokespecial #95                 // Method java/lang/AssertionError."<init>":()V
       126: athrow                  
       127: iload         7                 
       129: bipush        127               
       131: iadd                    
       132: bipush        23                
       134: ishl                    
       135: istore        8                 
       137: iload_2                 
       138: bipush        16                
       140: ishl                    
       141: iload         8                 
       143: ior                     
       144: iload         4                 
       146: bipush        13                
       148: ishl                    
       149: ior                     
       150: invokestatic  #85                 // Method intBitsToFloat:(I)F
       153: freturn                 
      LineNumberTable:
        line 1076: 0
        line 1077: 2
        line 1078: 7
        line 1079: 13
        line 1083: 20
        line 1085: 24
        line 1091: 36
        line 1092: 45
        line 1096: 52
        line 1097: 62
        line 1098: 69
        line 1099: 74
        line 1100: 82
        line 1098: 98
        line 1106: 99
        line 1108: 127
        line 1112: 137
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      154     0  floatBinary16 S
           2      152     1  bin16arg I
           7      147     2  bin16SignBit I
          13      141     3  bin16ExpBits I
          20      134     4  bin16SignifBits I
          24      130     5  SIGNIF_SHIFT I
          36      118     6  sign   F
          45      109     7  bin16Exp I
         137       17     8  floatExpBits I
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [int, int, int, int, int, int]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ float ]
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [float, int]
        frame_type = 19 /* same */
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ float ]
        frame_type = 0 /* same */
        frame_type = 19 /* same */
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static short floatToFloat16(float);
    descriptor: (F)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=12, args_size=1
         0: fload_0                 
         1: invokestatic  #74                 // Method floatToRawIntBits:(F)I
         4: istore_1                
         5: iload_1                 
         6: ldc           #96                 // int -2147483648
         8: iand                    
         9: bipush        16                
        11: ishr                    
        12: i2s                     
        13: istore_2                
        14: fload_0                 
        15: invokestatic  #59                 // Method isNaN:(F)Z
        18: ifeq          49                
        21: iload_2                 
        22: sipush        31744             
        25: ior                     
        26: iload_1                 
        27: ldc           #97                 // int 8380416
        29: iand                    
        30: bipush        13                
        32: ishr                    
        33: ior                     
        34: iload_1                 
        35: sipush        8176              
        38: iand                    
        39: iconst_4                
        40: ishr                    
        41: ior                     
        42: iload_1                 
        43: bipush        15                
        45: iand                    
        46: ior                     
        47: i2s                     
        48: ireturn                 
        49: fload_0                 
        50: invokestatic  #11                 // Method java/lang/Math.abs:(F)F
        53: fstore_3                
        54: fload_3                 
        55: ldc           #98                 // float 65520.0f
        57: fcmpl                   
        58: iflt          68                
        61: iload_2                 
        62: sipush        31744             
        65: ior                     
        66: i2s                     
        67: ireturn                 
        68: fload_3                 
        69: ldc           #99                 // float 2.9802322E-8f
        71: fcmpg                   
        72: ifgt          77                
        75: iload_2                 
        76: ireturn                 
        77: fload_0                 
        78: invokestatic  #100                // Method java/lang/Math.getExponent:(F)I
        81: istore        4                 
        83: getstatic     #89                 // Field $assertionsDisabled:Z
        86: ifne          111               
        89: bipush        -25               
        91: iload         4                 
        93: if_icmpgt     103               
        96: iload         4                 
        98: bipush        15                
       100: if_icmple     111               
       103: new           #93                 // class java/lang/AssertionError
       106: dup                     
       107: invokespecial #95                 // Method java/lang/AssertionError."<init>":()V
       110: athrow                  
       111: iconst_0                
       112: istore        5                 
       114: iconst_0                
       115: istore        6                 
       117: iload         4                 
       119: bipush        -14               
       121: if_icmpge     139               
       124: bipush        -14               
       126: iload         4                 
       128: isub                    
       129: istore        5                 
       131: bipush        -15               
       133: istore        4                 
       135: ldc           #103                // int 8388608
       137: istore        6                 
       139: iload_1                 
       140: ldc           #104                // int 8388607
       142: iand                    
       143: iload         6                 
       145: ior                     
       146: istore        7                 
       148: iload         7                 
       150: bipush        13                
       152: iload         5                 
       154: iadd                    
       155: ishr                    
       156: i2s                     
       157: istore        8                 
       159: iload         7                 
       161: iconst_1                
       162: bipush        13                
       164: iload         5                 
       166: iadd                    
       167: ishl                    
       168: iand                    
       169: istore        9                 
       171: iload         7                 
       173: iconst_1                
       174: bipush        12                
       176: iload         5                 
       178: iadd                    
       179: ishl                    
       180: iand                    
       181: istore        10                
       183: iload         7                 
       185: iconst_1                
       186: bipush        12                
       188: iload         5                 
       190: iadd                    
       191: ishl                    
       192: iconst_1                
       193: isub                    
       194: iand                    
       195: istore        11                
       197: iload         10                
       199: ifeq          217               
       202: iload         9                 
       204: iload         11                
       206: ior                     
       207: ifeq          217               
       210: iload         8                 
       212: iconst_1                
       213: iadd                    
       214: i2s                     
       215: istore        8                 
       217: getstatic     #89                 // Field $assertionsDisabled:Z
       220: ifne          239               
       223: ldc           #105                // int 63488
       225: iload         8                 
       227: iand                    
       228: ifeq          239               
       231: new           #93                 // class java/lang/AssertionError
       234: dup                     
       235: invokespecial #95                 // Method java/lang/AssertionError."<init>":()V
       238: athrow                  
       239: iload_2                 
       240: iload         4                 
       242: bipush        15                
       244: iadd                    
       245: bipush        10                
       247: ishl                    
       248: iload         8                 
       250: iadd                    
       251: ior                     
       252: i2s                     
       253: ireturn                 
      LineNumberTable:
        line 1147: 0
        line 1148: 5
        line 1150: 14
        line 1152: 21
        line 1162: 49
        line 1165: 54
        line 1166: 61
        line 1171: 68
        line 1172: 75
        line 1177: 77
        line 1178: 83
        line 1185: 111
        line 1186: 114
        line 1187: 117
        line 1188: 124
        line 1189: 131
        line 1190: 135
        line 1192: 139
        line 1195: 148
        line 1210: 159
        line 1211: 171
        line 1212: 183
        line 1214: 197
        line 1215: 210
        line 1221: 217
        line 1223: 239
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      254     0  f      F
           5      249     1  doppel I
          14      240     2  sign_bit S
          54      200     3  abs_f  F
          83      171     4  exp    I
         114      140     5  expdelta I
         117      137     6  msb    I
         148      106     7  f_signif_bits I
         159       95     8  signif_bits S
         171       83     9  lsb    I
         183       71    10  round  I
         197       57    11  sticky I
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [int, int]
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [float]
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [int]
        frame_type = 7 /* same */
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [int, int]
        frame_type = 255 /* full_frame */
          offset_delta = 77
          locals = [float, int, int, float, int, int, int, int, int, int, int, int]
          stack = []
        frame_type = 21 /* same */
    RuntimeVisibleAnnotations:
      0: #194()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public int compareTo(java.lang.Float);
    descriptor: (Ljava/lang/Float;)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #55                 // Field value:F
         4: aload_1                 
         5: getfield      #55                 // Field value:F
         8: invokestatic  #106                // Method compare:(FF)I
        11: ireturn                 
      LineNumberTable:
        line 1268: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  this   Ljava/lang/Float;
           0       12     1  anotherFloat Ljava/lang/Float;
  
  public static int compare(float, float);
    descriptor: (FF)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=4, args_size=2
         0: fload_0                 
         1: fload_1                 
         2: fcmpg                   
         3: ifge          8                 
         6: iconst_m1               
         7: ireturn                 
         8: fload_0                 
         9: fload_1                 
        10: fcmpl                   
        11: ifle          16                
        14: iconst_1                
        15: ireturn                 
        16: fload_0                 
        17: invokestatic  #71                 // Method floatToIntBits:(F)I
        20: istore_2                
        21: fload_1                 
        22: invokestatic  #71                 // Method floatToIntBits:(F)I
        25: istore_3                
        26: iload_2                 
        27: iload_3                 
        28: if_icmpne     35                
        31: iconst_0                
        32: goto          45                
        35: iload_2                 
        36: iload_3                 
        37: if_icmpge     44                
        40: iconst_m1               
        41: goto          45                
        44: iconst_1                
        45: ireturn                 
      LineNumberTable:
        line 1290: 0
        line 1291: 6
        line 1292: 8
        line 1293: 14
        line 1296: 16
        line 1297: 21
        line 1299: 26
        line 1300: 35
        line 1301: 44
        line 1299: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  f1     F
           0       46     1  f2     F
          21       25     2  thisBits I
          26       20     3  anotherBits I
      StackMapTable: number_of_entries = 5
        frame_type = 8 /* same */
        frame_type = 7 /* same */
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [int, int]
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static float sum(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: fload_0                 
         1: fload_1                 
         2: fadd                    
         3: freturn                 
      LineNumberTable:
        line 1318: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        4     0  a      F
           0        4     1  b      F
  
  public static float max(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: fload_0                 
         1: fload_1                 
         2: invokestatic  #110                // Method java/lang/Math.max:(FF)F
         5: freturn                 
      LineNumberTable:
        line 1336: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  a      F
           0        6     1  b      F
  
  public static float min(float, float);
    descriptor: (FF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: fload_0                 
         1: fload_1                 
         2: invokestatic  #114                // Method java/lang/Math.min:(FF)F
         5: freturn                 
      LineNumberTable:
        line 1354: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  a      F
           0        6     1  b      F
  
  public java.util.Optional<java.lang.Float> describeConstable();
    descriptor: ()Ljava/util/Optional;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #117                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
         4: areturn                 
      LineNumberTable:
        line 1366: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/Float;
    Signature: #260                        // ()Ljava/util/Optional<Ljava/lang/Float;>;
  
  public java.lang.Float resolveConstantDesc(java.lang.invoke.MethodHandles$Lookup);
    descriptor: (Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Float;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=2, args_size=2
         0: aload_0                 
         1: areturn                 
      LineNumberTable:
        line 1379: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        2     0  this   Ljava/lang/Float;
           0        2     1  lookup Ljava/lang/invoke/MethodHandles$Lookup;
  
  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: checkcast     #1                  // class java/lang/Float
         5: invokevirtual #123                // Method compareTo:(Ljava/lang/Float;)I
         8: ireturn                 
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/lang/Float;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public java.lang.Object resolveConstantDesc(java.lang.invoke.MethodHandles$Lookup) throws java.lang.ReflectiveOperationException;
    descriptor: (Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokevirtual #127                // Method resolveConstantDesc:(Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/Float;
         5: areturn                 
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Float;
    Exceptions:
      throws java.lang.ReflectiveOperationException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: ldc           #1                  // class java/lang/Float
         2: invokevirtual #131                // Method java/lang/Class.desiredAssertionStatus:()Z
         5: ifne          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: putstatic     #89                 // Field $assertionsDisabled:Z
        16: ldc           #137                // String float
        18: invokestatic  #139                // Method java/lang/Class.getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
        21: putstatic     #143                // Field TYPE:Ljava/lang/Class;
        24: return                  
      LineNumberTable:
        line 78: 0
        line 178: 16
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
Signature: #269                        // Ljava/lang/Number;Ljava/lang/Comparable<Ljava/lang/Float;>;Ljava/lang/constant/Constable;Ljava/lang/constant/ConstantDesc;
SourceFile: "Float.java"
RuntimeVisibleAnnotations:
  0: #272()
    jdk.internal.ValueBased
InnerClasses:
  public static final #278= #274 of #276;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
