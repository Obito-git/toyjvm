---
source: jclass/src/lib.rs
expression: display
---
public class java.io.BufferedOutputStream extends java.io.FilterOutputStream
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #16                      //java/io/BufferedOutputStream
  super_class: #19                     //java/io/FilterOutputStream
  interfaces: 0, fields: 5, methods: 9, attributes: 1
Constant pool:
    #1 = Methodref          #2.#3            // jdk/internal/misc/VM.isBooted:()Z
    #2 = Class              #4               // jdk/internal/misc/VM
    #3 = NameAndType        #5:#6            // isBooted:()Z
    #4 = Utf8               jdk/internal/misc/VM
    #5 = Utf8               isBooted
    #6 = Utf8               ()Z
    #7 = Methodref          #8.#9            // java/lang/Thread.currentThread:()Ljava/lang/Thread;
    #8 = Class              #10              // java/lang/Thread
    #9 = NameAndType        #11:#12          // currentThread:()Ljava/lang/Thread;
   #10 = Utf8               java/lang/Thread
   #11 = Utf8               currentThread
   #12 = Utf8               ()Ljava/lang/Thread;
   #13 = Methodref          #8.#14           // java/lang/Thread.isVirtual:()Z
   #14 = NameAndType        #15:#6           // isVirtual:()Z
   #15 = Utf8               isVirtual
   #16 = Class              #17              // java/io/BufferedOutputStream
   #17 = Utf8               java/io/BufferedOutputStream
   #18 = Methodref          #19.#20          // java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
   #19 = Class              #21              // java/io/FilterOutputStream
   #20 = NameAndType        #22:#23          // "<init>":(Ljava/io/OutputStream;)V
   #21 = Utf8               java/io/FilterOutputStream
   #22 = Utf8               <init>
   #23 = Utf8               (Ljava/io/OutputStream;)V
   #24 = Class              #25              // java/lang/IllegalArgumentException
   #25 = Utf8               java/lang/IllegalArgumentException
   #26 = String             #27              // Buffer size <= 0
   #27 = Utf8               Buffer size <= 0
   #28 = Methodref          #24.#29          // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #29 = NameAndType        #22:#30          // "<init>":(Ljava/lang/String;)V
   #30 = Utf8               (Ljava/lang/String;)V
   #31 = Methodref          #32.#33          // java/lang/Object.getClass:()Ljava/lang/Class;
   #32 = Class              #34              // java/lang/Object
   #33 = NameAndType        #35:#36          // getClass:()Ljava/lang/Class;
   #34 = Utf8               java/lang/Object
   #35 = Utf8               getClass
   #36 = Utf8               ()Ljava/lang/Class;
   #37 = Fieldref           #16.#38          // java/io/BufferedOutputStream.buf:[B
   #38 = NameAndType        #39:#40          // buf:[B
   #39 = Utf8               buf
   #40 = Utf8               [B
   #41 = Fieldref           #16.#42          // java/io/BufferedOutputStream.maxBufSize:I
   #42 = NameAndType        #43:#44          // maxBufSize:I
   #43 = Utf8               maxBufSize
   #44 = Utf8               I
   #45 = Methodref          #16.#46          // java/io/BufferedOutputStream.initialBufferSize:()I
   #46 = NameAndType        #47:#48          // initialBufferSize:()I
   #47 = Utf8               initialBufferSize
   #48 = Utf8               ()I
   #49 = Methodref          #16.#50          // java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;II)V
   #50 = NameAndType        #22:#51          // "<init>":(Ljava/io/OutputStream;II)V
   #51 = Utf8               (Ljava/io/OutputStream;II)V
   #52 = Fieldref           #16.#53          // java/io/BufferedOutputStream.count:I
   #53 = NameAndType        #54:#44          // count:I
   #54 = Utf8               count
   #55 = Fieldref           #16.#56          // java/io/BufferedOutputStream.out:Ljava/io/OutputStream;
   #56 = NameAndType        #57:#58          // out:Ljava/io/OutputStream;
   #57 = Utf8               out
   #58 = Utf8               Ljava/io/OutputStream;
   #59 = Methodref          #60.#61          // java/io/OutputStream.write:([BII)V
   #60 = Class              #62              // java/io/OutputStream
   #61 = NameAndType        #63:#64          // write:([BII)V
   #62 = Utf8               java/io/OutputStream
   #63 = Utf8               write
   #64 = Utf8               ([BII)V
   #65 = Class              #66              // java/lang/Integer
   #66 = Utf8               java/lang/Integer
   #67 = Integer            2147483647
   #68 = Methodref          #69.#70          // java/lang/Math.min:(II)I
   #69 = Class              #71              // java/lang/Math
   #70 = NameAndType        #72:#73          // min:(II)I
   #71 = Utf8               java/lang/Math
   #72 = Utf8               min
   #73 = Utf8               (II)I
   #74 = Methodref          #75.#76          // java/util/Arrays.copyOf:([BI)[B
   #75 = Class              #77              // java/util/Arrays
   #76 = NameAndType        #78:#79          // copyOf:([BI)[B
   #77 = Utf8               java/util/Arrays
   #78 = Utf8               copyOf
   #79 = Utf8               ([BI)[B
   #80 = Methodref          #16.#81          // java/io/BufferedOutputStream.growIfNeeded:(I)V
   #81 = NameAndType        #82:#83          // growIfNeeded:(I)V
   #82 = Utf8               growIfNeeded
   #83 = Utf8               (I)V
   #84 = Methodref          #16.#85          // java/io/BufferedOutputStream.flushBuffer:()V
   #85 = NameAndType        #86:#87          // flushBuffer:()V
   #86 = Utf8               flushBuffer
   #87 = Utf8               ()V
   #88 = Methodref          #89.#90          // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   #89 = Class              #91              // java/lang/System
   #90 = NameAndType        #92:#93          // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   #91 = Utf8               java/lang/System
   #92 = Utf8               arraycopy
   #93 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
   #94 = Methodref          #60.#95          // java/io/OutputStream.flush:()V
   #95 = NameAndType        #96:#87          // flush:()V
   #96 = Utf8               flush
   #97 = Utf8               DEFAULT_INITIAL_BUFFER_SIZE
   #98 = Utf8               ConstantValue
   #99 = Integer            512
  #100 = Utf8               DEFAULT_MAX_BUFFER_SIZE
  #101 = Integer            8192
  #102 = Utf8               Code
  #103 = Utf8               LineNumberTable
  #104 = Utf8               StackMapTable
  #105 = Utf8               LocalVariableTable
  #106 = Utf8               this
  #107 = Utf8               Ljava/io/BufferedOutputStream;
  #108 = Utf8               initialSize
  #109 = Utf8               maxSize
  #110 = Utf8               (Ljava/io/OutputStream;I)V
  #111 = Utf8               size
  #112 = Utf8               Exceptions
  #113 = Class              #114             // java/io/IOException
  #114 = Utf8               java/io/IOException
  #115 = Utf8               newSize
  #116 = Utf8               len
  #117 = Utf8               neededSize
  #118 = Utf8               bufSize
  #119 = Utf8               b
  #120 = Utf8               off
  #121 = Utf8               SourceFile
  #122 = Utf8               BufferedOutputStream.java
{
  private static final int DEFAULT_INITIAL_BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 512
  
  private static final int DEFAULT_MAX_BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8192
  
  protected byte[] buf;
    descriptor: [B
    flags: (0x0004) ACC_PROTECTED
  
  protected int count;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED
  
  private final int maxBufSize;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private static int initialBufferSize();
    descriptor: ()I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #1                  // Method jdk/internal/misc/VM.isBooted:()Z
         3: ifeq          19                
         6: invokestatic  #7                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         9: invokevirtual #13                 // Method java/lang/Thread.isVirtual:()Z
        12: ifeq          19                
        15: sipush        512               
        18: ireturn                 
        19: sipush        8192              
        22: ireturn                 
      LineNumberTable:
        line 71: 0
        line 72: 15
        line 74: 19
      StackMapTable: number_of_entries = 1
        frame_type = 19 /* same */
  
  private java.io.BufferedOutputStream(java.io.OutputStream, int, int);
    descriptor: (Ljava/io/OutputStream;II)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=4, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: invokespecial #18                 // Method java/io/FilterOutputStream."<init>":(Ljava/io/OutputStream;)V
         5: iload_2                 
         6: ifgt          19                
         9: new           #24                 // class java/lang/IllegalArgumentException
        12: dup                     
        13: ldc           #26                 // String Buffer size <= 0
        15: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        18: athrow                  
        19: aload_0                 
        20: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        23: ldc           #16                 // class java/io/BufferedOutputStream
        25: if_acmpne     38                
        28: aload_0                 
        29: iload_2                 
        30: newarray      byte              
        32: putfield      #37                 // Field buf:[B
        35: goto          45                
        38: aload_0                 
        39: iload_3                 
        40: newarray      byte              
        42: putfield      #37                 // Field buf:[B
        45: aload_0                 
        46: iload_3                 
        47: putfield      #41                 // Field maxBufSize:I
        50: return                  
      LineNumberTable:
        line 82: 0
        line 84: 5
        line 85: 9
        line 88: 19
        line 90: 28
        line 92: 38
        line 94: 45
        line 95: 50
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  this   Ljava/io/BufferedOutputStream;
           0       51     1  out    Ljava/io/OutputStream;
           0       51     2  initialSize I
           0       51     3  maxSize I
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [class java/io/BufferedOutputStream, class java/io/OutputStream, int, int]
          stack = []
        frame_type = 18 /* same */
        frame_type = 6 /* same */
  
  public java.io.BufferedOutputStream(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokestatic  #45                 // Method initialBufferSize:()I
         5: sipush        8192              
         8: invokespecial #49                 // Method "<init>":(Ljava/io/OutputStream;II)V
        11: return                  
      LineNumberTable:
        line 104: 0
        line 105: 11
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  this   Ljava/io/BufferedOutputStream;
           0       12     1  out    Ljava/io/OutputStream;
  
  public java.io.BufferedOutputStream(java.io.OutputStream, int);
    descriptor: (Ljava/io/OutputStream;I)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: iload_2                 
         3: iload_2                 
         4: invokespecial #49                 // Method "<init>":(Ljava/io/OutputStream;II)V
         7: return                  
      LineNumberTable:
        line 117: 0
        line 118: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/BufferedOutputStream;
           0        8     1  out    Ljava/io/OutputStream;
           0        8     2  size   I
  
  private void flushBuffer() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #52                 // Field count:I
         4: ifle          28                
         7: aload_0                 
         8: getfield      #55                 // Field out:Ljava/io/OutputStream;
        11: aload_0                 
        12: getfield      #37                 // Field buf:[B
        15: iconst_0                
        16: aload_0                 
        17: getfield      #52                 // Field count:I
        20: invokevirtual #59                 // Method java/io/OutputStream.write:([BII)V
        23: aload_0                 
        24: iconst_0                
        25: putfield      #52                 // Field count:I
        28: return                  
      LineNumberTable:
        line 122: 0
        line 123: 7
        line 124: 23
        line 126: 28
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       29     0  this   Ljava/io/BufferedOutputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
    Exceptions:
      throws java.io.IOException
  
  private void growIfNeeded(int);
    descriptor: (I)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=5, args_size=2
         0: aload_0                 
         1: getfield      #52                 // Field count:I
         4: iload_1                 
         5: iadd                    
         6: iconst_1                
         7: iadd                    
         8: istore_2                
         9: iload_2                 
        10: ifge          16                
        13: ldc           #67                 // int 2147483647
        15: istore_2                
        16: aload_0                 
        17: getfield      #37                 // Field buf:[B
        20: arraylength             
        21: istore_3                
        22: iload_2                 
        23: iload_3                 
        24: if_icmple     58                
        27: iload_3                 
        28: aload_0                 
        29: getfield      #41                 // Field maxBufSize:I
        32: if_icmpge     58                
        35: iload_2                 
        36: aload_0                 
        37: getfield      #41                 // Field maxBufSize:I
        40: invokestatic  #68                 // Method java/lang/Math.min:(II)I
        43: istore        4                 
        45: aload_0                 
        46: aload_0                 
        47: getfield      #37                 // Field buf:[B
        50: iload         4                 
        52: invokestatic  #74                 // Method java/util/Arrays.copyOf:([BI)[B
        55: putfield      #37                 // Field buf:[B
        58: return                  
      LineNumberTable:
        line 134: 0
        line 135: 9
        line 136: 13
        line 137: 16
        line 138: 22
        line 139: 35
        line 140: 45
        line 142: 58
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          45       13     4  newSize I
           0       59     0  this   Ljava/io/BufferedOutputStream;
           0       59     1  len    I
           9       50     2  neededSize I
          22       37     3  bufSize I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [int]
        frame_type = 252 /* append */
          offset_delta = 41
          locals = [int]
  
  public synchronized void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=5, locals=2, args_size=2
         0: aload_0                 
         1: iconst_1                
         2: invokevirtual #80                 // Method growIfNeeded:(I)V
         5: aload_0                 
         6: getfield      #52                 // Field count:I
         9: aload_0                 
        10: getfield      #37                 // Field buf:[B
        13: arraylength             
        14: if_icmplt     21                
        17: aload_0                 
        18: invokevirtual #84                 // Method flushBuffer:()V
        21: aload_0                 
        22: getfield      #37                 // Field buf:[B
        25: aload_0                 
        26: dup                     
        27: getfield      #52                 // Field count:I
        30: dup_x1                  
        31: iconst_1                
        32: iadd                    
        33: putfield      #52                 // Field count:I
        36: iload_1                 
        37: i2b                     
        38: bastore                 
        39: return                  
      LineNumberTable:
        line 152: 0
        line 153: 5
        line 154: 17
        line 156: 21
        line 157: 39
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       40     0  this   Ljava/io/BufferedOutputStream;
           0       40     1  b      I
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */
    Exceptions:
      throws java.io.IOException
  
  public synchronized void write(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=5, locals=4, args_size=4
         0: iload_3                 
         1: aload_0                 
         2: getfield      #41                 // Field maxBufSize:I
         5: if_icmplt     23                
         8: aload_0                 
         9: invokevirtual #84                 // Method flushBuffer:()V
        12: aload_0                 
        13: getfield      #55                 // Field out:Ljava/io/OutputStream;
        16: aload_1                 
        17: iload_2                 
        18: iload_3                 
        19: invokevirtual #59                 // Method java/io/OutputStream.write:([BII)V
        22: return                  
        23: aload_0                 
        24: iload_3                 
        25: invokevirtual #80                 // Method growIfNeeded:(I)V
        28: iload_3                 
        29: aload_0                 
        30: getfield      #37                 // Field buf:[B
        33: arraylength             
        34: aload_0                 
        35: getfield      #52                 // Field count:I
        38: isub                    
        39: if_icmple     46                
        42: aload_0                 
        43: invokevirtual #84                 // Method flushBuffer:()V
        46: aload_1                 
        47: iload_2                 
        48: aload_0                 
        49: getfield      #37                 // Field buf:[B
        52: aload_0                 
        53: getfield      #52                 // Field count:I
        56: iload_3                 
        57: invokestatic  #88                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        60: aload_0                 
        61: dup                     
        62: getfield      #52                 // Field count:I
        65: iload_3                 
        66: iadd                    
        67: putfield      #52                 // Field count:I
        70: return                  
      LineNumberTable:
        line 178: 0
        line 182: 8
        line 183: 12
        line 184: 22
        line 186: 23
        line 187: 28
        line 188: 42
        line 190: 46
        line 191: 60
        line 192: 70
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       71     0  this   Ljava/io/BufferedOutputStream;
           0       71     1  b      [B
           0       71     2  off    I
           0       71     3  len    I
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 22 /* same */
    Exceptions:
      throws java.io.IOException
  
  public synchronized void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #84                 // Method flushBuffer:()V
         4: aload_0                 
         5: getfield      #55                 // Field out:Ljava/io/OutputStream;
         8: invokevirtual #94                 // Method java/io/OutputStream.flush:()V
        11: return                  
      LineNumberTable:
        line 203: 0
        line 204: 4
        line 205: 11
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  this   Ljava/io/BufferedOutputStream;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "BufferedOutputStream.java"
