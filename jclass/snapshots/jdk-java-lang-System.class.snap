---
source: jclass/src/lib.rs
expression: display
---
public final class java.lang.System 
  minor version: 0
  major version: 68
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #8                       //java/lang/System
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 10, methods: 42, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Methodref          #8.#9            // java/lang/System.setIn0:(Ljava/io/InputStream;)V
    #8 = Class              #10              // java/lang/System
    #9 = NameAndType        #11:#12          // setIn0:(Ljava/io/InputStream;)V
   #10 = Utf8               java/lang/System
   #11 = Utf8               setIn0
   #12 = Utf8               (Ljava/io/InputStream;)V
   #13 = Methodref          #8.#14           // java/lang/System.setOut0:(Ljava/io/PrintStream;)V
   #14 = NameAndType        #15:#16          // setOut0:(Ljava/io/PrintStream;)V
   #15 = Utf8               setOut0
   #16 = Utf8               (Ljava/io/PrintStream;)V
   #17 = Methodref          #8.#18           // java/lang/System.setErr0:(Ljava/io/PrintStream;)V
   #18 = NameAndType        #19:#16          // setErr0:(Ljava/io/PrintStream;)V
   #19 = Utf8               setErr0
   #20 = Fieldref           #8.#21           // java/lang/System.cons:Ljava/io/Console;
   #21 = NameAndType        #22:#23          // cons:Ljava/io/Console;
   #22 = Utf8               cons
   #23 = Utf8               Ljava/io/Console;
   #24 = Methodref          #25.#26          // jdk/internal/access/SharedSecrets.getJavaIOAccess:()Ljdk/internal/access/JavaIOAccess;
   #25 = Class              #27              // jdk/internal/access/SharedSecrets
   #26 = NameAndType        #28:#29          // getJavaIOAccess:()Ljdk/internal/access/JavaIOAccess;
   #27 = Utf8               jdk/internal/access/SharedSecrets
   #28 = Utf8               getJavaIOAccess
   #29 = Utf8               ()Ljdk/internal/access/JavaIOAccess;
   #30 = InterfaceMethodref #31.#32          // jdk/internal/access/JavaIOAccess.console:()Ljava/io/Console;
   #31 = Class              #33              // jdk/internal/access/JavaIOAccess
   #32 = NameAndType        #34:#35          // console:()Ljava/io/Console;
   #33 = Utf8               jdk/internal/access/JavaIOAccess
   #34 = Utf8               console
   #35 = Utf8               ()Ljava/io/Console;
   #36 = Methodref          #37.#38          // java/nio/channels/spi/SelectorProvider.provider:()Ljava/nio/channels/spi/SelectorProvider;
   #37 = Class              #39              // java/nio/channels/spi/SelectorProvider
   #38 = NameAndType        #40:#41          // provider:()Ljava/nio/channels/spi/SelectorProvider;
   #39 = Utf8               java/nio/channels/spi/SelectorProvider
   #40 = Utf8               provider
   #41 = Utf8               ()Ljava/nio/channels/spi/SelectorProvider;
   #42 = Methodref          #37.#43          // java/nio/channels/spi/SelectorProvider.inheritedChannel:()Ljava/nio/channels/Channel;
   #43 = NameAndType        #44:#45          // inheritedChannel:()Ljava/nio/channels/Channel;
   #44 = Utf8               inheritedChannel
   #45 = Utf8               ()Ljava/nio/channels/Channel;
   #46 = Class              #47              // java/lang/UnsupportedOperationException
   #47 = Utf8               java/lang/UnsupportedOperationException
   #48 = String             #49              // Setting a Security Manager is not supported
   #49 = Utf8               Setting a Security Manager is not supported
   #50 = Methodref          #46.#51          // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   #51 = NameAndType        #5:#52           // "<init>":(Ljava/lang/String;)V
   #52 = Utf8               (Ljava/lang/String;)V
   #53 = Fieldref           #8.#54           // java/lang/System.props:Ljava/util/Properties;
   #54 = NameAndType        #55:#56          // props:Ljava/util/Properties;
   #55 = Utf8               props
   #56 = Utf8               Ljava/util/Properties;
   #57 = Fieldref           #8.#58           // java/lang/System.lineSeparator:Ljava/lang/String;
   #58 = NameAndType        #59:#60          // lineSeparator:Ljava/lang/String;
   #59 = Utf8               lineSeparator
   #60 = Utf8               Ljava/lang/String;
   #61 = Methodref          #62.#63          // jdk/internal/util/SystemProps.initProperties:()Ljava/util/Map;
   #62 = Class              #64              // jdk/internal/util/SystemProps
   #63 = NameAndType        #65:#66          // initProperties:()Ljava/util/Map;
   #64 = Utf8               jdk/internal/util/SystemProps
   #65 = Utf8               initProperties
   #66 = Utf8               ()Ljava/util/Map;
   #67 = Methodref          #68.#69          // java/lang/VersionProps.init:(Ljava/util/Map;)V
   #68 = Class              #70              // java/lang/VersionProps
   #69 = NameAndType        #71:#72          // init:(Ljava/util/Map;)V
   #70 = Utf8               java/lang/VersionProps
   #71 = Utf8               init
   #72 = Utf8               (Ljava/util/Map;)V
   #73 = Methodref          #8.#74           // java/lang/System.createProperties:(Ljava/util/Map;)Ljava/util/Properties;
   #74 = NameAndType        #75:#76          // createProperties:(Ljava/util/Map;)Ljava/util/Properties;
   #75 = Utf8               createProperties
   #76 = Utf8               (Ljava/util/Map;)Ljava/util/Properties;
   #77 = Methodref          #8.#78           // java/lang/System.checkKey:(Ljava/lang/String;)V
   #78 = NameAndType        #79:#52          // checkKey:(Ljava/lang/String;)V
   #79 = Utf8               checkKey
   #80 = Methodref          #81.#82          // java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #81 = Class              #83              // java/util/Properties
   #82 = NameAndType        #84:#85          // getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #83 = Utf8               java/util/Properties
   #84 = Utf8               getProperty
   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #86 = Methodref          #81.#87          // java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #87 = NameAndType        #84:#88          // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #88 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #89 = Methodref          #81.#90          // java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   #90 = NameAndType        #91:#92          // setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   #91 = Utf8               setProperty
   #92 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   #93 = Class              #94              // java/lang/String
   #94 = Utf8               java/lang/String
   #95 = Methodref          #81.#96          // java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #96 = NameAndType        #97:#98          // remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #97 = Utf8               remove
   #98 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #99 = Class              #100             // java/lang/NullPointerException
  #100 = Utf8               java/lang/NullPointerException
  #101 = String             #102             // key can\'t be null
  #102 = Utf8               key can\'t be null
  #103 = Methodref          #99.#51          // java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
  #104 = Methodref          #93.#105         // java/lang/String.isEmpty:()Z
  #105 = NameAndType        #106:#107        // isEmpty:()Z
  #106 = Utf8               isEmpty
  #107 = Utf8               ()Z
  #108 = Class              #109             // java/lang/IllegalArgumentException
  #109 = Utf8               java/lang/IllegalArgumentException
  #110 = String             #111             // key can\'t be empty
  #111 = Utf8               key can\'t be empty
  #112 = Methodref          #108.#51         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #113 = Methodref          #114.#115        // java/lang/ProcessEnvironment.getenv:(Ljava/lang/String;)Ljava/lang/String;
  #114 = Class              #116             // java/lang/ProcessEnvironment
  #115 = NameAndType        #117:#85         // getenv:(Ljava/lang/String;)Ljava/lang/String;
  #116 = Utf8               java/lang/ProcessEnvironment
  #117 = Utf8               getenv
  #118 = Methodref          #114.#119        // java/lang/ProcessEnvironment.getenv:()Ljava/util/Map;
  #119 = NameAndType        #117:#66         // getenv:()Ljava/util/Map;
  #120 = Methodref          #121.#122        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Class              #123             // java/util/Objects
  #122 = NameAndType        #124:#98         // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #123 = Utf8               java/util/Objects
  #124 = Utf8               requireNonNull
  #125 = Methodref          #126.#127        // jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;
  #126 = Class              #128             // jdk/internal/reflect/Reflection
  #127 = NameAndType        #129:#130        // getCallerClass:()Ljava/lang/Class;
  #128 = Utf8               jdk/internal/reflect/Reflection
  #129 = Utf8               getCallerClass
  #130 = Utf8               ()Ljava/lang/Class;
  #131 = Class              #132             // java/lang/IllegalCallerException
  #132 = Utf8               java/lang/IllegalCallerException
  #133 = String             #134             // no caller frame
  #134 = Utf8               no caller frame
  #135 = Methodref          #131.#51         // java/lang/IllegalCallerException."<init>":(Ljava/lang/String;)V
  #136 = Methodref          #137.#138        // java/lang/Class.getModule:()Ljava/lang/Module;
  #137 = Class              #139             // java/lang/Class
  #138 = NameAndType        #140:#141        // getModule:()Ljava/lang/Module;
  #139 = Utf8               java/lang/Class
  #140 = Utf8               getModule
  #141 = Utf8               ()Ljava/lang/Module;
  #142 = Methodref          #143.#144        // jdk/internal/logger/LazyLoggers.getLogger:(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;
  #143 = Class              #145             // jdk/internal/logger/LazyLoggers
  #144 = NameAndType        #146:#147        // getLogger:(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;
  #145 = Utf8               jdk/internal/logger/LazyLoggers
  #146 = Utf8               getLogger
  #147 = Utf8               (Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;
  #148 = Class              #149             // java/util/ResourceBundle
  #149 = Utf8               java/util/ResourceBundle
  #150 = Methodref          #151.#152        // java/lang/System$LoggerFinder.accessProvider:()Ljava/lang/System$LoggerFinder;
  #151 = Class              #153             // java/lang/System$LoggerFinder
  #152 = NameAndType        #154:#155        // accessProvider:()Ljava/lang/System$LoggerFinder;
  #153 = Utf8               java/lang/System$LoggerFinder
  #154 = Utf8               accessProvider
  #155 = Utf8               ()Ljava/lang/System$LoggerFinder;
  #156 = Methodref          #151.#157        // java/lang/System$LoggerFinder.getLocalizedLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/Module;)Ljava/lang/System$Logger;
  #157 = NameAndType        #158:#159        // getLocalizedLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/Module;)Ljava/lang/System$Logger;
  #158 = Utf8               getLocalizedLogger
  #159 = Utf8               (Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/Module;)Ljava/lang/System$Logger;
  #160 = Methodref          #161.#162        // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #161 = Class              #163             // java/lang/Runtime
  #162 = NameAndType        #164:#165        // getRuntime:()Ljava/lang/Runtime;
  #163 = Utf8               java/lang/Runtime
  #164 = Utf8               getRuntime
  #165 = Utf8               ()Ljava/lang/Runtime;
  #166 = Methodref          #161.#167        // java/lang/Runtime.exit:(I)V
  #167 = NameAndType        #168:#169        // exit:(I)V
  #168 = Utf8               exit
  #169 = Utf8               (I)V
  #170 = Methodref          #161.#171        // java/lang/Runtime.gc:()V
  #171 = NameAndType        #172:#6          // gc:()V
  #172 = Utf8               gc
  #173 = Methodref          #161.#174        // java/lang/Runtime.runFinalization:()V
  #174 = NameAndType        #175:#6          // runFinalization:()V
  #175 = Utf8               runFinalization
  #176 = String             #177             // load
  #177 = Utf8               load
  #178 = Methodref          #126.#179        // jdk/internal/reflect/Reflection.ensureNativeAccess:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Z)V
  #179 = NameAndType        #180:#181        // ensureNativeAccess:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Z)V
  #180 = Utf8               ensureNativeAccess
  #181 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Z)V
  #182 = Methodref          #161.#183        // java/lang/Runtime.load0:(Ljava/lang/Class;Ljava/lang/String;)V
  #183 = NameAndType        #184:#185        // load0:(Ljava/lang/Class;Ljava/lang/String;)V
  #184 = Utf8               load0
  #185 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)V
  #186 = String             #187             // loadLibrary
  #187 = Utf8               loadLibrary
  #188 = Methodref          #161.#189        // java/lang/Runtime.loadLibrary0:(Ljava/lang/Class;Ljava/lang/String;)V
  #189 = NameAndType        #190:#185        // loadLibrary0:(Ljava/lang/Class;Ljava/lang/String;)V
  #190 = Utf8               loadLibrary0
  #191 = Class              #192             // java/io/PrintStream
  #192 = Utf8               java/io/PrintStream
  #193 = Class              #194             // java/io/BufferedOutputStream
  #194 = Utf8               java/io/BufferedOutputStream
  #195 = Methodref          #193.#196        // java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
  #196 = NameAndType        #5:#197          // "<init>":(Ljava/io/OutputStream;I)V
  #197 = Utf8               (Ljava/io/OutputStream;I)V
  #198 = Fieldref           #199.#200        // sun/nio/cs/UTF_8.INSTANCE:Lsun/nio/cs/UTF_8;
  #199 = Class              #201             // sun/nio/cs/UTF_8
  #200 = NameAndType        #202:#203        // INSTANCE:Lsun/nio/cs/UTF_8;
  #201 = Utf8               sun/nio/cs/UTF_8
  #202 = Utf8               INSTANCE
  #203 = Utf8               Lsun/nio/cs/UTF_8;
  #204 = Methodref          #205.#206        // java/nio/charset/Charset.forName:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
  #205 = Class              #207             // java/nio/charset/Charset
  #206 = NameAndType        #208:#209        // forName:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
  #207 = Utf8               java/nio/charset/Charset
  #208 = Utf8               forName
  #209 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
  #210 = Methodref          #191.#211        // java/io/PrintStream."<init>":(Ljava/io/OutputStream;ZLjava/nio/charset/Charset;)V
  #211 = NameAndType        #5:#212          // "<init>":(Ljava/io/OutputStream;ZLjava/nio/charset/Charset;)V
  #212 = Utf8               (Ljava/io/OutputStream;ZLjava/nio/charset/Charset;)V
  #213 = Methodref          #191.#214        // java/io/PrintStream."<init>":(Ljava/io/OutputStream;Z)V
  #214 = NameAndType        #5:#215          // "<init>":(Ljava/io/OutputStream;Z)V
  #215 = Utf8               (Ljava/io/OutputStream;Z)V
  #216 = Methodref          #217.#218        // jdk/internal/misc/VM.initLevel:()I
  #217 = Class              #219             // jdk/internal/misc/VM
  #218 = NameAndType        #220:#221        // initLevel:()I
  #219 = Utf8               jdk/internal/misc/VM
  #220 = Utf8               initLevel
  #221 = Utf8               ()I
  #222 = Class              #223             // java/lang/InternalError
  #223 = Utf8               java/lang/InternalError
  #224 = String             #225             // system classes not initialized
  #225 = Utf8               system classes not initialized
  #226 = Methodref          #222.#51         // java/lang/InternalError."<init>":(Ljava/lang/String;)V
  #227 = Fieldref           #8.#228          // java/lang/System.err:Ljava/io/PrintStream;
  #228 = NameAndType        #229:#230        // err:Ljava/io/PrintStream;
  #229 = Utf8               err
  #230 = Utf8               Ljava/io/PrintStream;
  #231 = Fieldref           #8.#232          // java/lang/System.out:Ljava/io/PrintStream;
  #232 = NameAndType        #233:#230        // out:Ljava/io/PrintStream;
  #233 = Utf8               out
  #234 = Methodref          #191.#235        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #235 = NameAndType        #236:#52         // println:(Ljava/lang/String;)V
  #236 = Utf8               println
  #237 = Methodref          #238.#239        // java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
  #238 = Class              #240             // java/lang/Throwable
  #239 = NameAndType        #241:#16         // printStackTrace:(Ljava/io/PrintStream;)V
  #240 = Utf8               java/lang/Throwable
  #241 = Utf8               printStackTrace
  #242 = Methodref          #191.#243        // java/io/PrintStream.println:(Ljava/lang/Object;)V
  #243 = NameAndType        #236:#244        // println:(Ljava/lang/Object;)V
  #244 = Utf8               (Ljava/lang/Object;)V
  #245 = Methodref          #238.#246        // java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
  #246 = NameAndType        #247:#248        // getSuppressed:()[Ljava/lang/Throwable;
  #247 = Utf8               getSuppressed
  #248 = Utf8               ()[Ljava/lang/Throwable;
  #249 = Class              #250             // java/lang/StringBuilder
  #250 = Utf8               java/lang/StringBuilder
  #251 = Methodref          #249.#3          // java/lang/StringBuilder."<init>":()V
  #252 = String             #253             // Suppressed: 
  #253 = Utf8               Suppressed: 
  #254 = Methodref          #249.#255        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #255 = NameAndType        #256:#257        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #256 = Utf8               append
  #257 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #258 = Methodref          #249.#259        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #259 = NameAndType        #256:#260        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #260 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #261 = Methodref          #249.#262        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #262 = NameAndType        #263:#264        // toString:()Ljava/lang/String;
  #263 = Utf8               toString
  #264 = Utf8               ()Ljava/lang/String;
  #265 = Methodref          #238.#266        // java/lang/Throwable.getCause:()Ljava/lang/Throwable;
  #266 = NameAndType        #267:#268        // getCause:()Ljava/lang/Throwable;
  #267 = Utf8               getCause
  #268 = Utf8               ()Ljava/lang/Throwable;
  #269 = String             #270             // Caused by: 
  #270 = Utf8               Caused by: 
  #271 = InterfaceMethodref #272.#273        // java/util/Map.size:()I
  #272 = Class              #274             // java/util/Map
  #273 = NameAndType        #275:#221        // size:()I
  #274 = Utf8               java/util/Map
  #275 = Utf8               size
  #276 = Methodref          #81.#277         // java/util/Properties."<init>":(I)V
  #277 = NameAndType        #5:#169          // "<init>":(I)V
  #278 = InterfaceMethodref #272.#279        // java/util/Map.entrySet:()Ljava/util/Set;
  #279 = NameAndType        #280:#281        // entrySet:()Ljava/util/Set;
  #280 = Utf8               entrySet
  #281 = Utf8               ()Ljava/util/Set;
  #282 = InterfaceMethodref #283.#284        // java/util/Set.iterator:()Ljava/util/Iterator;
  #283 = Class              #285             // java/util/Set
  #284 = NameAndType        #286:#287        // iterator:()Ljava/util/Iterator;
  #285 = Utf8               java/util/Set
  #286 = Utf8               iterator
  #287 = Utf8               ()Ljava/util/Iterator;
  #288 = InterfaceMethodref #289.#290        // java/util/Iterator.hasNext:()Z
  #289 = Class              #291             // java/util/Iterator
  #290 = NameAndType        #292:#107        // hasNext:()Z
  #291 = Utf8               java/util/Iterator
  #292 = Utf8               hasNext
  #293 = InterfaceMethodref #289.#294        // java/util/Iterator.next:()Ljava/lang/Object;
  #294 = NameAndType        #295:#296        // next:()Ljava/lang/Object;
  #295 = Utf8               next
  #296 = Utf8               ()Ljava/lang/Object;
  #297 = Class              #298             // java/util/Map$Entry
  #298 = Utf8               java/util/Map$Entry
  #299 = InterfaceMethodref #297.#300        // java/util/Map$Entry.getKey:()Ljava/lang/Object;
  #300 = NameAndType        #301:#296        // getKey:()Ljava/lang/Object;
  #301 = Utf8               getKey
  #302 = Methodref          #93.#303         // java/lang/String.hashCode:()I
  #303 = NameAndType        #304:#221        // hashCode:()I
  #304 = Utf8               hashCode
  #305 = String             #306             // sun.nio.MaxDirectMemorySize
  #306 = Utf8               sun.nio.MaxDirectMemorySize
  #307 = Methodref          #93.#308         // java/lang/String.equals:(Ljava/lang/Object;)Z
  #308 = NameAndType        #309:#310        // equals:(Ljava/lang/Object;)Z
  #309 = Utf8               equals
  #310 = Utf8               (Ljava/lang/Object;)Z
  #311 = String             #312             // sun.nio.PageAlignDirectMemory
  #312 = Utf8               sun.nio.PageAlignDirectMemory
  #313 = String             #314             // java.lang.Integer.IntegerCache.high
  #314 = Utf8               java.lang.Integer.IntegerCache.high
  #315 = String             #316             // sun.java.launcher.diag
  #316 = Utf8               sun.java.launcher.diag
  #317 = String             #318             // jdk.boot.class.path.append
  #318 = Utf8               jdk.boot.class.path.append
  #319 = InterfaceMethodref #297.#320        // java/util/Map$Entry.getValue:()Ljava/lang/Object;
  #320 = NameAndType        #321:#296        // getValue:()Ljava/lang/Object;
  #321 = Utf8               getValue
  #322 = Methodref          #81.#323         // java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #323 = NameAndType        #324:#325        // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #324 = Utf8               put
  #325 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #326 = Methodref          #8.#327          // java/lang/System.setJavaLangAccess:()V
  #327 = NameAndType        #328:#6          // setJavaLangAccess:()V
  #328 = Utf8               setJavaLangAccess
  #329 = Methodref          #217.#330        // jdk/internal/misc/VM.saveProperties:(Ljava/util/Map;)V
  #330 = NameAndType        #331:#72         // saveProperties:(Ljava/util/Map;)V
  #331 = Utf8               saveProperties
  #332 = String             #333             // sun.jnu.encoding
  #333 = Utf8               sun.jnu.encoding
  #334 = Methodref          #205.#335        // java/nio/charset/Charset.isSupported:(Ljava/lang/String;)Z
  #335 = NameAndType        #336:#337        // isSupported:(Ljava/lang/String;)Z
  #336 = Utf8               isSupported
  #337 = Utf8               (Ljava/lang/String;)Z
  #338 = String             #339             // null
  #339 = Utf8               null
  #340 = Fieldref           #8.#341          // java/lang/System.notSupportedJnuEncoding:Ljava/lang/String;
  #341 = NameAndType        #342:#60         // notSupportedJnuEncoding:Ljava/lang/String;
  #342 = Utf8               notSupportedJnuEncoding
  #343 = String             #344             // UTF-8
  #344 = Utf8               UTF-8
  #345 = Methodref          #346.#347        // jdk/internal/util/StaticProperty.javaHome:()Ljava/lang/String;
  #346 = Class              #348             // jdk/internal/util/StaticProperty
  #347 = NameAndType        #349:#264        // javaHome:()Ljava/lang/String;
  #348 = Utf8               jdk/internal/util/StaticProperty
  #349 = Utf8               javaHome
  #350 = String             #351             // line.separator
  #351 = Utf8               line.separator
  #352 = Class              #353             // java/lang/System$In
  #353 = Utf8               java/lang/System$In
  #354 = Fieldref           #355.#356        // java/io/FileDescriptor.in:Ljava/io/FileDescriptor;
  #355 = Class              #357             // java/io/FileDescriptor
  #356 = NameAndType        #358:#359        // in:Ljava/io/FileDescriptor;
  #357 = Utf8               java/io/FileDescriptor
  #358 = Utf8               in
  #359 = Utf8               Ljava/io/FileDescriptor;
  #360 = Methodref          #352.#361        // java/lang/System$In."<init>":(Ljava/io/FileDescriptor;)V
  #361 = NameAndType        #5:#362          // "<init>":(Ljava/io/FileDescriptor;)V
  #362 = Utf8               (Ljava/io/FileDescriptor;)V
  #363 = Class              #364             // java/lang/System$Out
  #364 = Utf8               java/lang/System$Out
  #365 = Fieldref           #355.#366        // java/io/FileDescriptor.out:Ljava/io/FileDescriptor;
  #366 = NameAndType        #233:#359        // out:Ljava/io/FileDescriptor;
  #367 = Methodref          #363.#361        // java/lang/System$Out."<init>":(Ljava/io/FileDescriptor;)V
  #368 = Fieldref           #355.#369        // java/io/FileDescriptor.err:Ljava/io/FileDescriptor;
  #369 = NameAndType        #229:#359        // err:Ljava/io/FileDescriptor;
  #370 = Class              #371             // java/io/BufferedInputStream
  #371 = Utf8               java/io/BufferedInputStream
  #372 = Methodref          #370.#373        // java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
  #373 = NameAndType        #5:#12           // "<init>":(Ljava/io/InputStream;)V
  #374 = Fieldref           #8.#375          // java/lang/System.initialIn:Ljava/io/InputStream;
  #375 = NameAndType        #376:#377        // initialIn:Ljava/io/InputStream;
  #376 = Utf8               initialIn
  #377 = Utf8               Ljava/io/InputStream;
  #378 = String             #379             // stdout.encoding
  #379 = Utf8               stdout.encoding
  #380 = Methodref          #8.#381          // java/lang/System.newPrintStream:(Ljava/io/OutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
  #381 = NameAndType        #382:#383        // newPrintStream:(Ljava/io/OutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
  #382 = Utf8               newPrintStream
  #383 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
  #384 = String             #385             // stderr.encoding
  #385 = Utf8               stderr.encoding
  #386 = Fieldref           #8.#387          // java/lang/System.initialErr:Ljava/io/PrintStream;
  #387 = NameAndType        #388:#230        // initialErr:Ljava/io/PrintStream;
  #388 = Utf8               initialErr
  #389 = Methodref          #390.#391        // java/lang/Terminator.setup:()V
  #390 = Class              #392             // java/lang/Terminator
  #391 = NameAndType        #393:#6          // setup:()V
  #392 = Utf8               java/lang/Terminator
  #393 = Utf8               setup
  #394 = Methodref          #217.#395        // jdk/internal/misc/VM.initializeOSEnvironment:()V
  #395 = NameAndType        #396:#6          // initializeOSEnvironment:()V
  #396 = Utf8               initializeOSEnvironment
  #397 = Methodref          #25.#398         // jdk/internal/access/SharedSecrets.getJavaLangRefAccess:()Ljdk/internal/access/JavaLangRefAccess;
  #398 = NameAndType        #399:#400        // getJavaLangRefAccess:()Ljdk/internal/access/JavaLangRefAccess;
  #399 = Utf8               getJavaLangRefAccess
  #400 = Utf8               ()Ljdk/internal/access/JavaLangRefAccess;
  #401 = InterfaceMethodref #402.#403        // jdk/internal/access/JavaLangRefAccess.startThreads:()V
  #402 = Class              #404             // jdk/internal/access/JavaLangRefAccess
  #403 = NameAndType        #405:#6          // startThreads:()V
  #404 = Utf8               jdk/internal/access/JavaLangRefAccess
  #405 = Utf8               startThreads
  #406 = Methodref          #217.#407        // jdk/internal/misc/VM.initLevel:(I)V
  #407 = NameAndType        #220:#169        // initLevel:(I)V
  #408 = Methodref          #409.#410        // jdk/internal/module/ModuleBootstrap.boot:()Ljava/lang/ModuleLayer;
  #409 = Class              #411             // jdk/internal/module/ModuleBootstrap
  #410 = NameAndType        #412:#413        // boot:()Ljava/lang/ModuleLayer;
  #411 = Utf8               jdk/internal/module/ModuleBootstrap
  #412 = Utf8               boot
  #413 = Utf8               ()Ljava/lang/ModuleLayer;
  #414 = Fieldref           #8.#415          // java/lang/System.bootLayer:Ljava/lang/ModuleLayer;
  #415 = NameAndType        #416:#417        // bootLayer:Ljava/lang/ModuleLayer;
  #416 = Utf8               bootLayer
  #417 = Utf8               Ljava/lang/ModuleLayer;
  #418 = Class              #419             // java/lang/Exception
  #419 = Utf8               java/lang/Exception
  #420 = Class              #421             // java/lang/Error
  #421 = Utf8               java/lang/Error
  #422 = String             #423             // Error occurred during initialization of boot layer
  #423 = Utf8               Error occurred during initialization of boot layer
  #424 = Methodref          #8.#425          // java/lang/System.logInitException:(ZZLjava/lang/String;Ljava/lang/Throwable;)V
  #425 = NameAndType        #426:#427        // logInitException:(ZZLjava/lang/String;Ljava/lang/Throwable;)V
  #426 = Utf8               logInitException
  #427 = Utf8               (ZZLjava/lang/String;Ljava/lang/Throwable;)V
  #428 = Methodref          #62.#429         // jdk/internal/util/SystemProps.isBadIoTmpdir:()Z
  #429 = NameAndType        #430:#107        // isBadIoTmpdir:()Z
  #430 = Utf8               isBadIoTmpdir
  #431 = String             #432             // WARNING: java.io.tmpdir directory does not exist
  #432 = Utf8               WARNING: java.io.tmpdir directory does not exist
  #433 = String             #434             // java.security.manager
  #434 = Utf8               java.security.manager
  #435 = Methodref          #8.#82           // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #436 = String             #437             // disallow
  #437 = Utf8               disallow
  #438 = String             #439             // allow
  #439 = Utf8               allow
  #440 = String             #441             // 
  #441 = Utf8               
  #442 = String             #443             // default
  #443 = Utf8               default
  #444 = String             #445             // A command line option has attempted to allow or enable the Security Manager. Enabling a Security Manager is not supported.
  #445 = Utf8               A command line option has attempted to allow or enable the Security Manager. Enabling a Security Manager is not supported.
  #446 = Methodref          #420.#51         // java/lang/Error."<init>":(Ljava/lang/String;)V
  #447 = String             #448             // WARNING: The encoding of the underlying platform\'s file system is not supported: 
  #448 = Utf8               WARNING: The encoding of the underlying platform\'s file system is not supported: 
  #449 = Methodref          #450.#451        // java/lang/ClassLoader.initSystemClassLoader:()Ljava/lang/ClassLoader;
  #450 = Class              #452             // java/lang/ClassLoader
  #451 = NameAndType        #453:#454        // initSystemClassLoader:()Ljava/lang/ClassLoader;
  #452 = Utf8               java/lang/ClassLoader
  #453 = Utf8               initSystemClassLoader
  #454 = Utf8               ()Ljava/lang/ClassLoader;
  #455 = Methodref          #456.#457        // java/lang/Thread.currentThread:()Ljava/lang/Thread;
  #456 = Class              #458             // java/lang/Thread
  #457 = NameAndType        #459:#460        // currentThread:()Ljava/lang/Thread;
  #458 = Utf8               java/lang/Thread
  #459 = Utf8               currentThread
  #460 = Utf8               ()Ljava/lang/Thread;
  #461 = Methodref          #456.#462        // java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
  #462 = NameAndType        #463:#464        // setContextClassLoader:(Ljava/lang/ClassLoader;)V
  #463 = Utf8               setContextClassLoader
  #464 = Utf8               (Ljava/lang/ClassLoader;)V
  #465 = Class              #466             // java/lang/System$1
  #466 = Utf8               java/lang/System$1
  #467 = Methodref          #465.#3          // java/lang/System$1."<init>":()V
  #468 = Methodref          #25.#469         // jdk/internal/access/SharedSecrets.setJavaLangAccess:(Ljdk/internal/access/JavaLangAccess;)V
  #469 = NameAndType        #328:#470        // setJavaLangAccess:(Ljdk/internal/access/JavaLangAccess;)V
  #470 = Utf8               (Ljdk/internal/access/JavaLangAccess;)V
  #471 = Methodref          #8.#472          // java/lang/System.registerNatives:()V
  #472 = NameAndType        #473:#6          // registerNatives:()V
  #473 = Utf8               registerNatives
  #474 = Fieldref           #8.#475          // java/lang/System.in:Ljava/io/InputStream;
  #475 = NameAndType        #358:#377        // in:Ljava/io/InputStream;
  #476 = Utf8               RuntimeVisibleAnnotations
  #477 = Utf8               Ljdk/internal/vm/annotation/Stable;
  #478 = Utf8               Code
  #479 = Utf8               LineNumberTable
  #480 = Utf8               LocalVariableTable
  #481 = Utf8               this
  #482 = Utf8               Ljava/lang/System;
  #483 = Utf8               setIn
  #484 = Utf8               setOut
  #485 = Utf8               setErr
  #486 = Utf8               c
  #487 = Utf8               StackMapTable
  #488 = Class              #489             // java/io/Console
  #489 = Utf8               java/io/Console
  #490 = Utf8               Exceptions
  #491 = Class              #492             // java/io/IOException
  #492 = Utf8               java/io/IOException
  #493 = Utf8               setSecurityManager
  #494 = Utf8               (Ljava/lang/SecurityManager;)V
  #495 = Utf8               sm
  #496 = Utf8               Ljava/lang/SecurityManager;
  #497 = Utf8               Deprecated
  #498 = Utf8               Ljava/lang/Deprecated;
  #499 = Utf8               since
  #500 = Utf8               17
  #501 = Utf8               forRemoval
  #502 = Integer            1
  #503 = Utf8               getSecurityManager
  #504 = Utf8               ()Ljava/lang/SecurityManager;
  #505 = Utf8               currentTimeMillis
  #506 = Utf8               ()J
  #507 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;
  #508 = Utf8               nanoTime
  #509 = Utf8               arraycopy
  #510 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #511 = Utf8               identityHashCode
  #512 = Utf8               (Ljava/lang/Object;)I
  #513 = Utf8               getProperties
  #514 = Utf8               ()Ljava/util/Properties;
  #515 = Utf8               setProperties
  #516 = Utf8               (Ljava/util/Properties;)V
  #517 = Utf8               tempProps
  #518 = Utf8               Ljava/util/Map;
  #519 = Utf8               LocalVariableTypeTable
  #520 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #521 = Utf8               key
  #522 = Utf8               def
  #523 = Utf8               value
  #524 = Utf8               clearProperty
  #525 = Utf8               name
  #526 = Utf8               Signature
  #527 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #528 = Utf8               (Ljava/lang/String;)Ljava/lang/System$Logger;
  #529 = Utf8               caller
  #530 = Utf8               Ljava/lang/Class;
  #531 = Utf8               Ljava/lang/Class<*>;
  #532 = Utf8               Ljdk/internal/reflect/CallerSensitive;
  #533 = Utf8               (Ljava/lang/String;Ljava/util/ResourceBundle;)Ljava/lang/System$Logger;
  #534 = Utf8               bundle
  #535 = Utf8               Ljava/util/ResourceBundle;
  #536 = Utf8               rb
  #537 = Utf8               status
  #538 = Utf8               I
  #539 = Utf8               18
  #540 = Utf8               filename
  #541 = Utf8               Ljdk/internal/javac/Restricted;
  #542 = Utf8               libname
  #543 = Utf8               mapLibraryName
  #544 = Utf8               Ljava/io/OutputStream;
  #545 = Utf8               enc
  #546 = Utf8               suppressed
  #547 = Utf8               Ljava/lang/Throwable;
  #548 = Utf8               cause
  #549 = Utf8               printToStderr
  #550 = Utf8               Z
  #551 = Utf8               msg
  #552 = Utf8               e
  #553 = Utf8               log
  #554 = Class              #555             // "[Ljava/lang/Throwable;"
  #555 = Utf8               [Ljava/lang/Throwable;
  #556 = Utf8               prop
  #557 = Utf8               entry
  #558 = Utf8               Ljava/util/Map$Entry;
  #559 = Utf8               initialProps
  #560 = Utf8               properties
  #561 = Utf8               Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;
  #562 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Properties;
  #563 = Utf8               initPhase1
  #564 = Utf8               jnuEncoding
  #565 = Utf8               fdIn
  #566 = Utf8               Ljava/io/FileInputStream;
  #567 = Utf8               fdOut
  #568 = Utf8               Ljava/io/FileOutputStream;
  #569 = Utf8               fdErr
  #570 = Utf8               initPhase2
  #571 = Utf8               (ZZ)I
  #572 = Utf8               initPhase3
  #573 = Utf8               smProp
  #574 = Utf8               scl
  #575 = Utf8               Ljava/lang/ClassLoader;
  #576 = Utf8               <clinit>
  #577 = Utf8               SourceFile
  #578 = Utf8               System.java
  #579 = Utf8               NestMembers
  #580 = Class              #581             // java/lang/System$Logger
  #581 = Utf8               java/lang/System$Logger
  #582 = Class              #583             // java/lang/System$Logger$Level
  #583 = Utf8               java/lang/System$Logger$Level
  #584 = Utf8               InnerClasses
  #585 = Utf8               Logger
  #586 = Utf8               LoggerFinder
  #587 = Utf8               Entry
  #588 = Utf8               In
  #589 = Utf8               Out
  #590 = Utf8               Level
{
  public static final java.io.InputStream in;
    descriptor: Ljava/io/InputStream;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
  
  public static final java.io.PrintStream out;
    descriptor: Ljava/io/PrintStream;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
  
  public static final java.io.PrintStream err;
    descriptor: Ljava/io/PrintStream;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
  
  private static java.io.InputStream initialIn;
    descriptor: Ljava/io/InputStream;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    RuntimeVisibleAnnotations:
      0: #477()
        jdk.internal.vm.annotation.Stable
  
  private static java.io.PrintStream initialErr;
    descriptor: Ljava/io/PrintStream;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    RuntimeVisibleAnnotations:
      0: #477()
        jdk.internal.vm.annotation.Stable
  
  private static java.lang.String notSupportedJnuEncoding;
    descriptor: Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private static volatile java.io.Console cons;
    descriptor: Ljava/io/Console;
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE
  
  private static java.util.Properties props;
    descriptor: Ljava/util/Properties;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private static java.lang.String lineSeparator;
    descriptor: Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  static java.lang.ModuleLayer bootLayer;
    descriptor: Ljava/lang/ModuleLayer;
    flags: (0x0008) ACC_STATIC
  
  private static native void registerNatives();
    descriptor: ()V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  private java.lang.System();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 114: 0
        line 115: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/System;
  
  public static void setIn(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #7                  // Method setIn0:(Ljava/io/InputStream;)V
         4: return                  
      LineNumberTable:
        line 196: 0
        line 197: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  in     Ljava/io/InputStream;
  
  public static void setOut(java.io.PrintStream);
    descriptor: (Ljava/io/PrintStream;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #13                 // Method setOut0:(Ljava/io/PrintStream;)V
         4: return                  
      LineNumberTable:
        line 207: 0
        line 208: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  out    Ljava/io/PrintStream;
  
  public static void setErr(java.io.PrintStream);
    descriptor: (Ljava/io/PrintStream;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #17                 // Method setErr0:(Ljava/io/PrintStream;)V
         4: return                  
      LineNumberTable:
        line 218: 0
        line 219: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  err    Ljava/io/PrintStream;
  
  public static java.io.Console console();
    descriptor: ()Ljava/io/Console;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=3, args_size=0
         0: getstatic     #20                 // Field cons:Ljava/io/Console;
         3: dup                     
         4: astore_0                
         5: ifnonnull     44                
         8: ldc           #8                  // class java/lang/System
        10: dup                     
        11: astore_1                
        12: monitorenter            
        13: getstatic     #20                 // Field cons:Ljava/io/Console;
        16: dup                     
        17: astore_0                
        18: ifnonnull     34                
        21: invokestatic  #24                 // Method jdk/internal/access/SharedSecrets.getJavaIOAccess:()Ljdk/internal/access/JavaIOAccess;
        24: invokeinterface #30, 1              // InterfaceMethod jdk/internal/access/JavaIOAccess.console:()Ljava/io/Console;
        29: dup                     
        30: astore_0                
        31: putstatic     #20                 // Field cons:Ljava/io/Console;
        34: aload_1                 
        35: monitorexit             
        36: goto          44                
        39: astore_2                
        40: aload_1                 
        41: monitorexit             
        42: aload_2                 
        43: athrow                  
        44: aload_0                 
        45: areturn                 
      Exception table:
          from       to target type
            13       36    39  any
            39       42    39  any
      LineNumberTable:
        line 233: 0
        line 234: 8
        line 235: 13
        line 236: 21
        line 238: 34
        line 240: 44
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           5       41     0  c      Ljava/io/Console;
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [class java/io/Console, class java/lang/Object]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
  
  public static java.nio.channels.Channel inheritedChannel() throws java.io.IOException;
    descriptor: ()Ljava/nio/channels/Channel;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #36                 // Method java/nio/channels/spi/SelectorProvider.provider:()Ljava/nio/channels/spi/SelectorProvider;
         3: invokevirtual #42                 // Method java/nio/channels/spi/SelectorProvider.inheritedChannel:()Ljava/nio/channels/Channel;
         6: areturn                 
      LineNumberTable:
        line 265: 0
    Exceptions:
      throws java.io.IOException
  
  private static native void setIn0(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  private static native void setOut0(java.io.PrintStream);
    descriptor: (Ljava/io/PrintStream;)V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  private static native void setErr0(java.io.PrintStream);
    descriptor: (Ljava/io/PrintStream;)V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  public static void setSecurityManager(java.lang.SecurityManager);
    descriptor: (Ljava/lang/SecurityManager;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: new           #46                 // class java/lang/UnsupportedOperationException
         3: dup                     
         4: ldc           #48                 // String Setting a Security Manager is not supported
         6: invokespecial #50                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
         9: athrow                  
      LineNumberTable:
        line 286: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  sm     Ljava/lang/SecurityManager;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #498(#499=s#500,#501=Z#502)
        java.lang.Deprecated(
          since="17"
          forRemoval=true
        )
  
  public static java.lang.SecurityManager getSecurityManager();
    descriptor: ()Ljava/lang/SecurityManager;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: aconst_null             
         1: areturn                 
      LineNumberTable:
        line 303: 0
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #498(#499=s#500,#501=Z#502)
        java.lang.Deprecated(
          since="17"
          forRemoval=true
        )
  
  public static native long currentTimeMillis();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    RuntimeVisibleAnnotations:
      0: #507()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static native long nanoTime();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    RuntimeVisibleAnnotations:
      0: #507()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static native void arraycopy(java.lang.Object, int, java.lang.Object, int, int);
    descriptor: (Ljava/lang/Object;ILjava/lang/Object;II)V
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    RuntimeVisibleAnnotations:
      0: #507()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static native int identityHashCode(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
    RuntimeVisibleAnnotations:
      0: #507()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static java.util.Properties getProperties();
    descriptor: ()Ljava/util/Properties;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #53                 // Field props:Ljava/util/Properties;
         3: areturn                 
      LineNumberTable:
        line 652: 0
  
  public static java.lang.String lineSeparator();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #57                 // Field lineSeparator:Ljava/lang/String;
         3: areturn                 
      LineNumberTable:
        line 667: 0
  
  public static void setProperties(java.util.Properties);
    descriptor: (Ljava/util/Properties;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=2, args_size=1
         0: aload_0                 
         1: ifnonnull     17                
         4: invokestatic  #61                 // Method jdk/internal/util/SystemProps.initProperties:()Ljava/util/Map;
         7: astore_1                
         8: aload_1                 
         9: invokestatic  #67                 // Method java/lang/VersionProps.init:(Ljava/util/Map;)V
        12: aload_1                 
        13: invokestatic  #73                 // Method createProperties:(Ljava/util/Map;)Ljava/util/Properties;
        16: astore_0                
        17: aload_0                 
        18: putstatic     #53                 // Field props:Ljava/util/Properties;
        21: return                  
      LineNumberTable:
        line 690: 0
        line 691: 4
        line 692: 8
        line 693: 12
        line 695: 17
        line 696: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           8        9     1  tempProps Ljava/util/Map;
           0       22     0  props  Ljava/util/Properties;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             8        9     1  tempProps   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
  
  public static java.lang.String getProperty(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #77                 // Method checkKey:(Ljava/lang/String;)V
         4: getstatic     #53                 // Field props:Ljava/util/Properties;
         7: aload_0                 
         8: invokevirtual #80                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        11: areturn                 
      LineNumberTable:
        line 720: 0
        line 721: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  key    Ljava/lang/String;
  
  public static java.lang.String getProperty(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokestatic  #77                 // Method checkKey:(Ljava/lang/String;)V
         4: getstatic     #53                 // Field props:Ljava/util/Properties;
         7: aload_0                 
         8: aload_1                 
         9: invokevirtual #86                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        12: areturn                 
      LineNumberTable:
        line 742: 0
        line 743: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  key    Ljava/lang/String;
           0       13     1  def    Ljava/lang/String;
  
  public static java.lang.String setProperty(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokestatic  #77                 // Method checkKey:(Ljava/lang/String;)V
         4: getstatic     #53                 // Field props:Ljava/util/Properties;
         7: aload_0                 
         8: aload_1                 
         9: invokevirtual #89                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
        12: checkcast     #93                 // class java/lang/String
        15: areturn                 
      LineNumberTable:
        line 768: 0
        line 769: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  key    Ljava/lang/String;
           0       16     1  value  Ljava/lang/String;
  
  public static java.lang.String clearProperty(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #77                 // Method checkKey:(Ljava/lang/String;)V
         4: getstatic     #53                 // Field props:Ljava/util/Properties;
         7: aload_0                 
         8: invokevirtual #95                 // Method java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        11: checkcast     #93                 // class java/lang/String
        14: areturn                 
      LineNumberTable:
        line 792: 0
        line 793: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       15     0  key    Ljava/lang/String;
  
  private static void checkKey(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: ifnonnull     14                
         4: new           #99                 // class java/lang/NullPointerException
         7: dup                     
         8: ldc           #101                // String key can\'t be null
        10: invokespecial #103                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: aload_0                 
        15: invokevirtual #104                // Method java/lang/String.isEmpty:()Z
        18: ifeq          31                
        21: new           #108                // class java/lang/IllegalArgumentException
        24: dup                     
        25: ldc           #110                // String key can\'t be empty
        27: invokespecial #112                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        30: athrow                  
        31: return                  
      LineNumberTable:
        line 797: 0
        line 798: 4
        line 800: 14
        line 801: 21
        line 803: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       32     0  key    Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 16 /* same */
  
  public static java.lang.String getenv(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokestatic  #113                // Method java/lang/ProcessEnvironment.getenv:(Ljava/lang/String;)Ljava/lang/String;
         4: areturn                 
      LineNumberTable:
        line 839: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  name   Ljava/lang/String;
  
  public static java.util.Map<java.lang.String, java.lang.String> getenv();
    descriptor: ()Ljava/util/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #118                // Method java/lang/ProcessEnvironment.getenv:()Ljava/util/Map;
         3: areturn                 
      LineNumberTable:
        line 873: 0
    Signature: #527                        // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  
  public static java.lang.System$Logger getLogger(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/System$Logger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=1
         0: aload_0                 
         1: invokestatic  #120                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop                     
         5: invokestatic  #125                // Method jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;
         8: astore_1                
         9: aload_1                 
        10: ifnonnull     23                
        13: new           #131                // class java/lang/IllegalCallerException
        16: dup                     
        17: ldc           #133                // String no caller frame
        19: invokespecial #135                // Method java/lang/IllegalCallerException."<init>":(Ljava/lang/String;)V
        22: athrow                  
        23: aload_0                 
        24: aload_1                 
        25: invokevirtual #136                // Method java/lang/Class.getModule:()Ljava/lang/Module;
        28: invokestatic  #142                // Method jdk/internal/logger/LazyLoggers.getLogger:(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;
        31: areturn                 
      LineNumberTable:
        line 1434: 0
        line 1435: 5
        line 1436: 9
        line 1437: 13
        line 1439: 23
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       32     0  name   Ljava/lang/String;
           9       23     1  caller Ljava/lang/Class;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             9       23     1  caller   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [class java/lang/Class]
    RuntimeVisibleAnnotations:
      0: #532()
        jdk.internal.reflect.CallerSensitive
  
  public static java.lang.System$Logger getLogger(java.lang.String, java.util.ResourceBundle);
    descriptor: (Ljava/lang/String;Ljava/util/ResourceBundle;)Ljava/lang/System$Logger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=2
         0: aload_1                 
         1: invokestatic  #120                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: checkcast     #148                // class java/util/ResourceBundle
         7: astore_2                
         8: aload_0                 
         9: invokestatic  #120                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
        12: pop                     
        13: invokestatic  #125                // Method jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;
        16: astore_3                
        17: aload_3                 
        18: ifnonnull     31                
        21: new           #131                // class java/lang/IllegalCallerException
        24: dup                     
        25: ldc           #133                // String no caller frame
        27: invokespecial #135                // Method java/lang/IllegalCallerException."<init>":(Ljava/lang/String;)V
        30: athrow                  
        31: invokestatic  #150                // Method java/lang/System$LoggerFinder.accessProvider:()Ljava/lang/System$LoggerFinder;
        34: aload_0                 
        35: aload_2                 
        36: aload_3                 
        37: invokevirtual #136                // Method java/lang/Class.getModule:()Ljava/lang/Module;
        40: invokevirtual #156                // Method java/lang/System$LoggerFinder.getLocalizedLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/Module;)Ljava/lang/System$Logger;
        43: areturn                 
      LineNumberTable:
        line 1487: 0
        line 1488: 8
        line 1489: 13
        line 1490: 17
        line 1491: 21
        line 1493: 31
        line 1494: 37
        line 1493: 43
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       44     0  name   Ljava/lang/String;
           0       44     1  bundle Ljava/util/ResourceBundle;
           8       36     2  rb     Ljava/util/ResourceBundle;
          17       27     3  caller Ljava/lang/Class;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
            17       27     3  caller   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [class java/util/ResourceBundle, class java/lang/Class]
    RuntimeVisibleAnnotations:
      0: #532()
        jdk.internal.reflect.CallerSensitive
  
  public static void exit(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: invokestatic  #160                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
         3: iload_0                 
         4: invokevirtual #166                // Method java/lang/Runtime.exit:(I)V
         7: return                  
      LineNumberTable:
        line 1518: 0
        line 1519: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  status I
  
  public static void gc();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #160                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
         3: invokevirtual #170                // Method java/lang/Runtime.gc:()V
         6: return                  
      LineNumberTable:
        line 1548: 0
        line 1549: 6
  
  public static void runFinalization();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #160                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
         3: invokevirtual #173                // Method java/lang/Runtime.runFinalization:()V
         6: return                  
      LineNumberTable:
        line 1580: 0
        line 1581: 6
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #498(#499=s#539,#501=Z#502)
        java.lang.Deprecated(
          since="18"
          forRemoval=true
        )
  
  public static void load(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: invokestatic  #125                // Method jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;
         3: astore_1                
         4: aload_1                 
         5: ldc           #8                  // class java/lang/System
         7: ldc           #176                // String load
         9: iconst_0                
        10: invokestatic  #178                // Method jdk/internal/reflect/Reflection.ensureNativeAccess:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Z)V
        13: invokestatic  #160                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        16: aload_1                 
        17: aload_0                 
        18: invokevirtual #182                // Method java/lang/Runtime.load0:(Ljava/lang/Class;Ljava/lang/String;)V
        21: return                  
      LineNumberTable:
        line 1622: 0
        line 1623: 4
        line 1624: 13
        line 1625: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  filename Ljava/lang/String;
           4       18     1  caller Ljava/lang/Class;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             4       18     1  caller   Ljava/lang/Class<*>;
    RuntimeVisibleAnnotations:
      0: #532()
        jdk.internal.reflect.CallerSensitive
      1: #541()
        jdk.internal.javac.Restricted
  
  public static void loadLibrary(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: invokestatic  #125                // Method jdk/internal/reflect/Reflection.getCallerClass:()Ljava/lang/Class;
         3: astore_1                
         4: aload_1                 
         5: ldc           #8                  // class java/lang/System
         7: ldc           #186                // String loadLibrary
         9: iconst_0                
        10: invokestatic  #178                // Method jdk/internal/reflect/Reflection.ensureNativeAccess:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Z)V
        13: invokestatic  #160                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        16: aload_1                 
        17: aload_0                 
        18: invokevirtual #188                // Method java/lang/Runtime.loadLibrary0:(Ljava/lang/Class;Ljava/lang/String;)V
        21: return                  
      LineNumberTable:
        line 1661: 0
        line 1662: 4
        line 1663: 13
        line 1664: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  libname Ljava/lang/String;
           4       18     1  caller Ljava/lang/Class;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             4       18     1  caller   Ljava/lang/Class<*>;
    RuntimeVisibleAnnotations:
      0: #532()
        jdk.internal.reflect.CallerSensitive
      1: #541()
        jdk.internal.javac.Restricted
  
  public static native java.lang.String mapLibraryName(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  private static java.io.PrintStream newPrintStream(java.io.OutputStream, java.lang.String);
    descriptor: (Ljava/io/OutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=6, locals=2, args_size=2
         0: aload_1                 
         1: ifnull        31                
         4: new           #191                // class java/io/PrintStream
         7: dup                     
         8: new           #193                // class java/io/BufferedOutputStream
        11: dup                     
        12: aload_0                 
        13: sipush        128               
        16: invokespecial #195                // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
        19: iconst_1                
        20: aload_1                 
        21: getstatic     #198                // Field sun/nio/cs/UTF_8.INSTANCE:Lsun/nio/cs/UTF_8;
        24: invokestatic  #204                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
        27: invokespecial #210                // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;ZLjava/nio/charset/Charset;)V
        30: areturn                 
        31: new           #191                // class java/io/PrintStream
        34: dup                     
        35: new           #193                // class java/io/BufferedOutputStream
        38: dup                     
        39: aload_0                 
        40: sipush        128               
        43: invokespecial #195                // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;I)V
        46: iconst_1                
        47: invokespecial #213                // Method java/io/PrintStream."<init>":(Ljava/io/OutputStream;Z)V
        50: areturn                 
      LineNumberTable:
        line 1683: 0
        line 1684: 4
        line 1685: 24
        line 1684: 30
        line 1687: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  out    Ljava/io/OutputStream;
           0       51     1  enc    Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 31 /* same */
  
  private static void logInitException(boolean, boolean, java.lang.String, java.lang.Throwable);
    descriptor: (ZZLjava/lang/String;Ljava/lang/Throwable;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=9, args_size=4
         0: invokestatic  #216                // Method jdk/internal/misc/VM.initLevel:()I
         3: iconst_1                
         4: if_icmpge     17                
         7: new           #222                // class java/lang/InternalError
        10: dup                     
        11: ldc           #224                // String system classes not initialized
        13: invokespecial #226                // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
        16: athrow                  
        17: iload_0                 
        18: ifeq          27                
        21: getstatic     #227                // Field err:Ljava/io/PrintStream;
        24: goto          30                
        27: getstatic     #231                // Field out:Ljava/io/PrintStream;
        30: astore        4                 
        32: aload_2                 
        33: ifnull        42                
        36: aload         4                 
        38: aload_2                 
        39: invokevirtual #234                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        42: iload_1                 
        43: ifeq          55                
        46: aload_3                 
        47: aload         4                 
        49: invokevirtual #237                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
        52: goto          157               
        55: aload         4                 
        57: aload_3                 
        58: invokevirtual #242                // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
        61: aload_3                 
        62: invokevirtual #245                // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
        65: astore        5                 
        67: aload         5                 
        69: arraylength             
        70: istore        6                 
        72: iconst_0                
        73: istore        7                 
        75: iload         7                 
        77: iload         6                 
        79: if_icmpge     120               
        82: aload         5                 
        84: iload         7                 
        86: aaload                  
        87: astore        8                 
        89: aload         4                 
        91: new           #249                // class java/lang/StringBuilder
        94: dup                     
        95: invokespecial #251                // Method java/lang/StringBuilder."<init>":()V
        98: ldc           #252                // String Suppressed: 
       100: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       103: aload         8                 
       105: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       108: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       111: invokevirtual #234                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       114: iinc          7, 1              
       117: goto          75                
       120: aload_3                 
       121: invokevirtual #265                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
       124: astore        5                 
       126: aload         5                 
       128: ifnull        157               
       131: aload         4                 
       133: new           #249                // class java/lang/StringBuilder
       136: dup                     
       137: invokespecial #251                // Method java/lang/StringBuilder."<init>":()V
       140: ldc_w         #269                // String Caused by: 
       143: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       146: aload         5                 
       148: invokevirtual #258                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       151: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       154: invokevirtual #234                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       157: return                  
      LineNumberTable:
        line 1702: 0
        line 1703: 7
        line 1705: 17
        line 1706: 32
        line 1707: 36
        line 1709: 42
        line 1710: 46
        line 1712: 55
        line 1713: 61
        line 1714: 89
        line 1713: 114
        line 1716: 120
        line 1717: 126
        line 1718: 131
        line 1721: 157
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          89       25     8  suppressed Ljava/lang/Throwable;
         126       31     5  cause  Ljava/lang/Throwable;
           0      158     0  printToStderr Z
           0      158     1  printStackTrace Z
           0      158     2  msg    Ljava/lang/String;
           0      158     3  e      Ljava/lang/Throwable;
          32      126     4  log    Ljava/io/PrintStream;
      StackMapTable: number_of_entries = 8
        frame_type = 17 /* same */
        frame_type = 9 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/PrintStream ]
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [class java/io/PrintStream]
        frame_type = 12 /* same */
        frame_type = 254 /* append */
          offset_delta = 19
          locals = [class "[Ljava/lang/Throwable;", int, int]
        frame_type = 248 /* chop */
          offset_delta = 44
        frame_type = 36 /* same */
  
  private static java.util.Properties createProperties(java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Map;)Ljava/util/Properties;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=7, args_size=1
         0: new           #81                 // class java/util/Properties
         3: dup                     
         4: aload_0                 
         5: invokeinterface #271, 1             // InterfaceMethod java/util/Map.size:()I
        10: invokespecial #276                // Method java/util/Properties."<init>":(I)V
        13: astore_1                
        14: aload_0                 
        15: invokeinterface #278, 1             // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
        20: invokeinterface #282, 1             // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        25: astore_2                
        26: aload_2                 
        27: invokeinterface #288, 1             // InterfaceMethod java/util/Iterator.hasNext:()Z
        32: ifeq          259               
        35: aload_2                 
        36: invokeinterface #293, 1             // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        41: checkcast     #297                // class java/util/Map$Entry
        44: astore_3                
        45: aload_3                 
        46: invokeinterface #299, 1             // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        51: checkcast     #93                 // class java/lang/String
        54: astore        4                 
        56: aload         4                 
        58: astore        5                 
        60: iconst_m1               
        61: istore        6                 
        63: aload         5                 
        65: invokevirtual #302                // Method java/lang/String.hashCode:()I
        68: lookupswitch  { // 5
               -1594982994: 188
                -903405997: 120
                -137219825: 171
                  82382212: 137
                2006761672: 154
                   default: 202
            }
       120: aload         5                 
       122: ldc_w         #305                // String sun.nio.MaxDirectMemorySize
       125: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       128: ifeq          202               
       131: iconst_0                
       132: istore        6                 
       134: goto          202               
       137: aload         5                 
       139: ldc_w         #311                // String sun.nio.PageAlignDirectMemory
       142: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       145: ifeq          202               
       148: iconst_1                
       149: istore        6                 
       151: goto          202               
       154: aload         5                 
       156: ldc_w         #313                // String java.lang.Integer.IntegerCache.high
       159: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       162: ifeq          202               
       165: iconst_2                
       166: istore        6                 
       168: goto          202               
       171: aload         5                 
       173: ldc_w         #315                // String sun.java.launcher.diag
       176: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       179: ifeq          202               
       182: iconst_3                
       183: istore        6                 
       185: goto          202               
       188: aload         5                 
       190: ldc_w         #317                // String jdk.boot.class.path.append
       193: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       196: ifeq          202               
       199: iconst_4                
       200: istore        6                 
       202: iload         6                 
       204: tableswitch   { // 0 to 4
                         0: 240
                         1: 240
                         2: 240
                         3: 240
                         4: 240
                   default: 243
            }
       240: goto          256               
       243: aload_1                 
       244: aload         4                 
       246: aload_3                 
       247: invokeinterface #319, 1             // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       252: invokevirtual #322                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       255: pop                     
       256: goto          26                
       259: aload_1                 
       260: areturn                 
      LineNumberTable:
        line 1728: 0
        line 1729: 14
        line 1730: 45
        line 1731: 56
        line 1741: 240
        line 1743: 243
        line 1745: 256
        line 1746: 259
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          56      200     4  prop   Ljava/lang/String;
          45      211     3  entry  Ljava/util/Map$Entry;
           0      261     0  initialProps Ljava/util/Map;
          14      247     1  properties Ljava/util/Properties;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
            45      211     3  entry   Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;
             0      261     0  initialProps   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [class java/util/Properties, class java/util/Iterator]
        frame_type = 255 /* full_frame */
          offset_delta = 93
          locals = [class java/util/Map, class java/util/Properties, class java/util/Iterator, class java/util/Map$Entry, class java/lang/String, class java/lang/String, int]
          stack = []
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 13 /* same */
        frame_type = 37 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [class java/util/Map, class java/util/Properties, class java/util/Iterator]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
    Signature: #562                        // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Properties;
  
  private static void initPhase1();
    descriptor: ()V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=5, args_size=0
         0: invokestatic  #326                // Method setJavaLangAccess:()V
         3: invokestatic  #61                 // Method jdk/internal/util/SystemProps.initProperties:()Ljava/util/Map;
         6: astore_0                
         7: aload_0                 
         8: invokestatic  #67                 // Method java/lang/VersionProps.init:(Ljava/util/Map;)V
        11: aload_0                 
        12: invokestatic  #329                // Method jdk/internal/misc/VM.saveProperties:(Ljava/util/Map;)V
        15: aload_0                 
        16: invokestatic  #73                 // Method createProperties:(Ljava/util/Map;)Ljava/util/Properties;
        19: putstatic     #53                 // Field props:Ljava/util/Properties;
        22: getstatic     #53                 // Field props:Ljava/util/Properties;
        25: ldc_w         #332                // String sun.jnu.encoding
        28: invokevirtual #80                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        31: astore_1                
        32: aload_1                 
        33: ifnull        43                
        36: aload_1                 
        37: invokestatic  #334                // Method java/nio/charset/Charset.isSupported:(Ljava/lang/String;)Z
        40: ifne          70                
        43: aload_1                 
        44: ifnonnull     53                
        47: ldc_w         #338                // String null
        50: goto          54                
        53: aload_1                 
        54: putstatic     #340                // Field notSupportedJnuEncoding:Ljava/lang/String;
        57: getstatic     #53                 // Field props:Ljava/util/Properties;
        60: ldc_w         #332                // String sun.jnu.encoding
        63: ldc_w         #343                // String UTF-8
        66: invokevirtual #89                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
        69: pop                     
        70: invokestatic  #345                // Method jdk/internal/util/StaticProperty.javaHome:()Ljava/lang/String;
        73: pop                     
        74: getstatic     #53                 // Field props:Ljava/util/Properties;
        77: ldc_w         #350                // String line.separator
        80: invokevirtual #80                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        83: putstatic     #57                 // Field lineSeparator:Ljava/lang/String;
        86: new           #352                // class java/lang/System$In
        89: dup                     
        90: getstatic     #354                // Field java/io/FileDescriptor.in:Ljava/io/FileDescriptor;
        93: invokespecial #360                // Method java/lang/System$In."<init>":(Ljava/io/FileDescriptor;)V
        96: astore_2                
        97: new           #363                // class java/lang/System$Out
       100: dup                     
       101: getstatic     #365                // Field java/io/FileDescriptor.out:Ljava/io/FileDescriptor;
       104: invokespecial #367                // Method java/lang/System$Out."<init>":(Ljava/io/FileDescriptor;)V
       107: astore_3                
       108: new           #363                // class java/lang/System$Out
       111: dup                     
       112: getstatic     #368                // Field java/io/FileDescriptor.err:Ljava/io/FileDescriptor;
       115: invokespecial #367                // Method java/lang/System$Out."<init>":(Ljava/io/FileDescriptor;)V
       118: astore        4                 
       120: new           #370                // class java/io/BufferedInputStream
       123: dup                     
       124: aload_2                 
       125: invokespecial #372                // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
       128: putstatic     #374                // Field initialIn:Ljava/io/InputStream;
       131: getstatic     #374                // Field initialIn:Ljava/io/InputStream;
       134: invokestatic  #7                  // Method setIn0:(Ljava/io/InputStream;)V
       137: aload_3                 
       138: getstatic     #53                 // Field props:Ljava/util/Properties;
       141: ldc_w         #378                // String stdout.encoding
       144: invokevirtual #80                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       147: invokestatic  #380                // Method newPrintStream:(Ljava/io/OutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
       150: invokestatic  #13                 // Method setOut0:(Ljava/io/PrintStream;)V
       153: aload         4                 
       155: getstatic     #53                 // Field props:Ljava/util/Properties;
       158: ldc_w         #384                // String stderr.encoding
       161: invokevirtual #80                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       164: invokestatic  #380                // Method newPrintStream:(Ljava/io/OutputStream;Ljava/lang/String;)Ljava/io/PrintStream;
       167: putstatic     #386                // Field initialErr:Ljava/io/PrintStream;
       170: getstatic     #386                // Field initialErr:Ljava/io/PrintStream;
       173: invokestatic  #17                 // Method setErr0:(Ljava/io/PrintStream;)V
       176: invokestatic  #389                // Method java/lang/Terminator.setup:()V
       179: invokestatic  #394                // Method jdk/internal/misc/VM.initializeOSEnvironment:()V
       182: invokestatic  #397                // Method jdk/internal/access/SharedSecrets.getJavaLangRefAccess:()Ljdk/internal/access/JavaLangRefAccess;
       185: invokeinterface #401, 1             // InterfaceMethod jdk/internal/access/JavaLangRefAccess.startThreads:()V
       190: iconst_1                
       191: invokestatic  #406                // Method jdk/internal/misc/VM.initLevel:(I)V
       194: return                  
      LineNumberTable:
        line 1756: 0
        line 1762: 3
        line 1763: 7
        line 1775: 11
        line 1776: 15
        line 1779: 22
        line 1780: 32
        line 1781: 43
        line 1782: 57
        line 1785: 70
        line 1787: 74
        line 1789: 86
        line 1790: 97
        line 1791: 108
        line 1792: 120
        line 1793: 131
        line 1797: 137
        line 1798: 153
        line 1799: 170
        line 1802: 176
        line 1808: 179
        line 1811: 182
        line 1814: 190
        line 1815: 194
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           7      188     0  tempProps Ljava/util/Map;
          32      163     1  jnuEncoding Ljava/lang/String;
          97       98     2  fdIn   Ljava/io/FileInputStream;
         108       87     3  fdOut  Ljava/io/FileOutputStream;
         120       75     4  fdErr  Ljava/io/FileOutputStream;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             7      188     0  tempProps   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 43
          locals = [class java/util/Map, class java/lang/String]
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 15 /* same */
  
  private static int initPhase2(boolean, boolean);
    descriptor: (ZZ)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: invokestatic  #408                // Method jdk/internal/module/ModuleBootstrap.boot:()Ljava/lang/ModuleLayer;
         3: putstatic     #414                // Field bootLayer:Ljava/lang/ModuleLayer;
         6: goto          21                
         9: astore_2                
        10: iload_0                 
        11: iload_1                 
        12: ldc_w         #422                // String Error occurred during initialization of boot layer
        15: aload_2                 
        16: invokestatic  #424                // Method logInitException:(ZZLjava/lang/String;Ljava/lang/Throwable;)V
        19: iconst_m1               
        20: ireturn                 
        21: iconst_2                
        22: invokestatic  #406                // Method jdk/internal/misc/VM.initLevel:(I)V
        25: iconst_0                
        26: ireturn                 
      Exception table:
          from       to target type
             0        6     9  Class java/lang/Exception
             0        6     9  Class java/lang/Error
      LineNumberTable:
        line 1910: 0
        line 1915: 6
        line 1911: 9
        line 1912: 10
        line 1914: 19
        line 1918: 21
        line 1920: 25
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10       11     2  e      Ljava/lang/Throwable;
           0       27     0  printToStderr Z
           0       27     1  printStackTrace Z
      StackMapTable: number_of_entries = 2
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
  
  private static void initPhase3();
    descriptor: ()V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=3, args_size=0
         0: invokestatic  #428                // Method jdk/internal/util/SystemProps.isBadIoTmpdir:()Z
         3: ifeq          15                
         6: getstatic     #227                // Field err:Ljava/io/PrintStream;
         9: ldc_w         #431                // String WARNING: java.io.tmpdir directory does not exist
        12: invokevirtual #234                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: ldc_w         #433                // String java.security.manager
        18: invokestatic  #435                // Method getProperty:(Ljava/lang/String;)Ljava/lang/String;
        21: astore_0                
        22: aload_0                 
        23: ifnull        178               
        26: aload_0                 
        27: astore_1                
        28: iconst_m1               
        29: istore_2                
        30: aload_1                 
        31: invokevirtual #302                // Method java/lang/String.hashCode:()I
        34: lookupswitch  { // 4
                         0: 106
                  92906313: 91
                 271239035: 76
                1544803905: 121
                   default: 133
            }
        76: aload_1                 
        77: ldc_w         #436                // String disallow
        80: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        83: ifeq          133               
        86: iconst_0                
        87: istore_2                
        88: goto          133               
        91: aload_1                 
        92: ldc_w         #438                // String allow
        95: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        98: ifeq          133               
       101: iconst_1                
       102: istore_2                
       103: goto          133               
       106: aload_1                 
       107: ldc_w         #440                // String 
       110: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       113: ifeq          133               
       116: iconst_2                
       117: istore_2                
       118: goto          133               
       121: aload_1                 
       122: ldc_w         #442                // String default
       125: invokevirtual #307                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       128: ifeq          133               
       131: iconst_3                
       132: istore_2                
       133: iload_2                 
       134: tableswitch   { // 0 to 3
                         0: 164
                         1: 167
                         2: 167
                         3: 167
                   default: 167
            }
       164: goto          178               
       167: new           #420                // class java/lang/Error
       170: dup                     
       171: ldc_w         #444                // String A command line option has attempted to allow or enable the Security Manager. Enabling a Security Manager is not supported.
       174: invokespecial #446                // Method java/lang/Error."<init>":(Ljava/lang/String;)V
       177: athrow                  
       178: getstatic     #340                // Field notSupportedJnuEncoding:Ljava/lang/String;
       181: ifnull        212               
       184: getstatic     #227                // Field err:Ljava/io/PrintStream;
       187: new           #249                // class java/lang/StringBuilder
       190: dup                     
       191: invokespecial #251                // Method java/lang/StringBuilder."<init>":()V
       194: ldc_w         #447                // String WARNING: The encoding of the underlying platform\'s file system is not supported: 
       197: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       200: getstatic     #340                // Field notSupportedJnuEncoding:Ljava/lang/String;
       203: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       206: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       209: invokevirtual #234                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       212: iconst_3                
       213: invokestatic  #406                // Method jdk/internal/misc/VM.initLevel:(I)V
       216: invokestatic  #449                // Method java/lang/ClassLoader.initSystemClassLoader:()Ljava/lang/ClassLoader;
       219: astore_1                
       220: invokestatic  #455                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       223: aload_1                 
       224: invokevirtual #461                // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
       227: iconst_4                
       228: invokestatic  #406                // Method jdk/internal/misc/VM.initLevel:(I)V
       231: return                  
      LineNumberTable:
        line 1934: 0
        line 1935: 6
        line 1938: 15
        line 1939: 22
        line 1940: 26
        line 1942: 164
        line 1947: 167
        line 1953: 178
        line 1954: 184
        line 1961: 212
        line 1964: 216
        line 1967: 220
        line 1970: 227
        line 1971: 231
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          22      210     0  smProp Ljava/lang/String;
         220       12     1  scl    Ljava/lang/ClassLoader;
      StackMapTable: number_of_entries = 10
        frame_type = 15 /* same */
        frame_type = 254 /* append */
          offset_delta = 60
          locals = [class java/lang/String, class java/lang/String, int]
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 11 /* same */
        frame_type = 30 /* same */
        frame_type = 2 /* same */
        frame_type = 249 /* chop */
          offset_delta = 10
        frame_type = 33 /* same */
  
  private static void setJavaLangAccess();
    descriptor: ()V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: new           #465                // class java/lang/System$1
         3: dup                     
         4: invokespecial #467                // Method java/lang/System$1."<init>":()V
         7: invokestatic  #468                // Method jdk/internal/access/SharedSecrets.setJavaLangAccess:(Ljdk/internal/access/JavaLangAccess;)V
        10: return                  
      LineNumberTable:
        line 1975: 0
        line 2330: 10
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #471                // Method registerNatives:()V
         3: aconst_null             
         4: putstatic     #474                // Field in:Ljava/io/InputStream;
         7: aconst_null             
         8: putstatic     #231                // Field out:Ljava/io/PrintStream;
        11: aconst_null             
        12: putstatic     #227                // Field err:Ljava/io/PrintStream;
        15: return                  
      LineNumberTable:
        line 110: 0
        line 129: 3
        line 159: 7
        line 177: 11
}
SourceFile: "System.java"
NestMembers:
  java/lang/System$Out
  java/lang/System$In
  java/lang/System$LoggerFinder
  java/lang/System$Logger
  java/lang/System$Logger$Level
  java/lang/System$1
InnerClasses:
  public static #585= #580 of #8;             // Logger=class java/lang/System$Logger of class java/lang/System
  public static abstract #586= #151 of #8;    // LoggerFinder=class java/lang/System$LoggerFinder of class java/lang/System
  public static #587= #297 of #272;           // Entry=class java/util/Map$Entry of class java/util/Map
  private static #588= #352 of #8;            // In=class java/lang/System$In of class java/lang/System
  private static #589= #363 of #8;            // Out=class java/lang/System$Out of class java/lang/System
  #465;                                       // class java/lang/System$1
  public static final #590= #582 of #580;     // Level=class java/lang/System$Logger$Level of class java/lang/System$Logger
