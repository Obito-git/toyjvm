---
source: jclass/src/lib.rs
expression: display
---
public final class java.lang.Byte extends java.lang.Number implements java.lang.Comparable<java.lang.Byte>, java.lang.constant.Constable
  minor version: 0
  major version: 68
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #1                       //java/lang/Byte
  super_class: #98                     //java/lang/Number
  interfaces: 2, fields: 7, methods: 27, attributes: 5
Constant pool:
    #1 = Class              #2               // java/lang/Byte
    #2 = Utf8               java/lang/Byte
    #3 = Class              #4               // java/lang/constant/ConstantDescs
    #4 = Utf8               java/lang/constant/ConstantDescs
    #5 = Methodref          #6.#7            // java/lang/Integer.toString:(I)Ljava/lang/String;
    #6 = Class              #8               // java/lang/Integer
    #7 = NameAndType        #9:#10           // toString:(I)Ljava/lang/String;
    #8 = Utf8               java/lang/Integer
    #9 = Utf8               toString
   #10 = Utf8               (I)Ljava/lang/String;
   #11 = Fieldref           #3.#12           // java/lang/constant/ConstantDescs.BSM_EXPLICIT_CAST:Ljava/lang/constant/DirectMethodHandleDesc;
   #12 = NameAndType        #13:#14          // BSM_EXPLICIT_CAST:Ljava/lang/constant/DirectMethodHandleDesc;
   #13 = Utf8               BSM_EXPLICIT_CAST
   #14 = Utf8               Ljava/lang/constant/DirectMethodHandleDesc;
   #15 = String             #16              // _
   #16 = Utf8               _
   #17 = Fieldref           #3.#18           // java/lang/constant/ConstantDescs.CD_byte:Ljava/lang/constant/ClassDesc;
   #18 = NameAndType        #19:#20          // CD_byte:Ljava/lang/constant/ClassDesc;
   #19 = Utf8               CD_byte
   #20 = Utf8               Ljava/lang/constant/ClassDesc;
   #21 = Class              #22              // java/lang/constant/ConstantDesc
   #22 = Utf8               java/lang/constant/ConstantDesc
   #23 = Methodref          #1.#24           // java/lang/Byte.intValue:()I
   #24 = NameAndType        #25:#26          // intValue:()I
   #25 = Utf8               intValue
   #26 = Utf8               ()I
   #27 = Methodref          #6.#28           // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #28 = NameAndType        #29:#30          // valueOf:(I)Ljava/lang/Integer;
   #29 = Utf8               valueOf
   #30 = Utf8               (I)Ljava/lang/Integer;
   #31 = Methodref          #32.#33          // java/lang/constant/DynamicConstantDesc.ofNamed:(Ljava/lang/constant/DirectMethodHandleDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;[Ljava/lang/constant/ConstantDesc;)Ljava/lang/constant/DynamicConstantDesc;
   #32 = Class              #34              // java/lang/constant/DynamicConstantDesc
   #33 = NameAndType        #35:#36          // ofNamed:(Ljava/lang/constant/DirectMethodHandleDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;[Ljava/lang/constant/ConstantDesc;)Ljava/lang/constant/DynamicConstantDesc;
   #34 = Utf8               java/lang/constant/DynamicConstantDesc
   #35 = Utf8               ofNamed
   #36 = Utf8               (Ljava/lang/constant/DirectMethodHandleDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;[Ljava/lang/constant/ConstantDesc;)Ljava/lang/constant/DynamicConstantDesc;
   #37 = Methodref          #38.#39          // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
   #38 = Class              #40              // java/util/Optional
   #39 = NameAndType        #41:#42          // of:(Ljava/lang/Object;)Ljava/util/Optional;
   #40 = Utf8               java/util/Optional
   #41 = Utf8               of
   #42 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
   #43 = Fieldref           #44.#45          // java/lang/Byte$ByteCache.cache:[Ljava/lang/Byte;
   #44 = Class              #46              // java/lang/Byte$ByteCache
   #45 = NameAndType        #47:#48          // cache:[Ljava/lang/Byte;
   #46 = Utf8               java/lang/Byte$ByteCache
   #47 = Utf8               cache
   #48 = Utf8               [Ljava/lang/Byte;
   #49 = Methodref          #6.#50           // java/lang/Integer.parseInt:(Ljava/lang/String;I)I
   #50 = NameAndType        #51:#52          // parseInt:(Ljava/lang/String;I)I
   #51 = Utf8               parseInt
   #52 = Utf8               (Ljava/lang/String;I)I
   #53 = Class              #54              // java/lang/NumberFormatException
   #54 = Utf8               java/lang/NumberFormatException
   #55 = Class              #56              // java/lang/StringBuilder
   #56 = Utf8               java/lang/StringBuilder
   #57 = Methodref          #55.#58          // java/lang/StringBuilder."<init>":()V
   #58 = NameAndType        #59:#60          // "<init>":()V
   #59 = Utf8               <init>
   #60 = Utf8               ()V
   #61 = String             #62              // Value out of range. Value:\"
   #62 = Utf8               Value out of range. Value:\"
   #63 = Methodref          #55.#64          // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #64 = NameAndType        #65:#66          // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #65 = Utf8               append
   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #67 = String             #68              // \" Radix:
   #68 = Utf8               \" Radix:
   #69 = Methodref          #55.#70          // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #70 = NameAndType        #65:#71          // append:(I)Ljava/lang/StringBuilder;
   #71 = Utf8               (I)Ljava/lang/StringBuilder;
   #72 = Methodref          #55.#73          // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #73 = NameAndType        #9:#74           // toString:()Ljava/lang/String;
   #74 = Utf8               ()Ljava/lang/String;
   #75 = Methodref          #53.#76          // java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
   #76 = NameAndType        #59:#77          // "<init>":(Ljava/lang/String;)V
   #77 = Utf8               (Ljava/lang/String;)V
   #78 = Methodref          #1.#79           // java/lang/Byte.parseByte:(Ljava/lang/String;I)B
   #79 = NameAndType        #80:#81          // parseByte:(Ljava/lang/String;I)B
   #80 = Utf8               parseByte
   #81 = Utf8               (Ljava/lang/String;I)B
   #82 = Methodref          #1.#83           // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
   #83 = NameAndType        #29:#84          // valueOf:(B)Ljava/lang/Byte;
   #84 = Utf8               (B)Ljava/lang/Byte;
   #85 = Methodref          #1.#86           // java/lang/Byte.valueOf:(Ljava/lang/String;I)Ljava/lang/Byte;
   #86 = NameAndType        #29:#87          // valueOf:(Ljava/lang/String;I)Ljava/lang/Byte;
   #87 = Utf8               (Ljava/lang/String;I)Ljava/lang/Byte;
   #88 = Methodref          #6.#89           // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
   #89 = NameAndType        #90:#91          // decode:(Ljava/lang/String;)Ljava/lang/Integer;
   #90 = Utf8               decode
   #91 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;
   #92 = Methodref          #6.#24           // java/lang/Integer.intValue:()I
   #93 = String             #94              // Value 
   #94 = Utf8               Value 
   #95 = String             #96              //  out of range from input 
   #96 = Utf8                out of range from input 
   #97 = Methodref          #98.#58          // java/lang/Number."<init>":()V
   #98 = Class              #99              // java/lang/Number
   #99 = Utf8               java/lang/Number
  #100 = Fieldref           #1.#101          // java/lang/Byte.value:B
  #101 = NameAndType        #102:#103        // value:B
  #102 = Utf8               value
  #103 = Utf8               B
  #104 = Methodref          #1.#105          // java/lang/Byte.hashCode:(B)I
  #105 = NameAndType        #106:#107        // hashCode:(B)I
  #106 = Utf8               hashCode
  #107 = Utf8               (B)I
  #108 = Methodref          #1.#109          // java/lang/Byte.byteValue:()B
  #109 = NameAndType        #110:#111        // byteValue:()B
  #110 = Utf8               byteValue
  #111 = Utf8               ()B
  #112 = Methodref          #1.#113          // java/lang/Byte.compare:(BB)I
  #113 = NameAndType        #114:#115        // compare:(BB)I
  #114 = Utf8               compare
  #115 = Utf8               (BB)I
  #116 = Methodref          #1.#117          // java/lang/Byte.toUnsignedInt:(B)I
  #117 = NameAndType        #118:#107        // toUnsignedInt:(B)I
  #118 = Utf8               toUnsignedInt
  #119 = Long               255l
  #121 = Methodref          #1.#122          // java/lang/Byte.compareTo:(Ljava/lang/Byte;)I
  #122 = NameAndType        #123:#124        // compareTo:(Ljava/lang/Byte;)I
  #123 = Utf8               compareTo
  #124 = Utf8               (Ljava/lang/Byte;)I
  #125 = String             #126             // byte
  #126 = Utf8               byte
  #127 = Methodref          #128.#129        // java/lang/Class.getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
  #128 = Class              #130             // java/lang/Class
  #129 = NameAndType        #131:#132        // getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
  #130 = Utf8               java/lang/Class
  #131 = Utf8               getPrimitiveClass
  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;
  #133 = Fieldref           #1.#134          // java/lang/Byte.TYPE:Ljava/lang/Class;
  #134 = NameAndType        #135:#136        // TYPE:Ljava/lang/Class;
  #135 = Utf8               TYPE
  #136 = Utf8               Ljava/lang/Class;
  #137 = Class              #138             // java/lang/Comparable
  #138 = Utf8               java/lang/Comparable
  #139 = Class              #140             // java/lang/constant/Constable
  #140 = Utf8               java/lang/constant/Constable
  #141 = Utf8               MIN_VALUE
  #142 = Utf8               ConstantValue
  #143 = Integer            -128
  #144 = Utf8               MAX_VALUE
  #145 = Integer            127
  #146 = Utf8               Signature
  #147 = Utf8               Ljava/lang/Class<Ljava/lang/Byte;>;
  #148 = Utf8               SIZE
  #149 = Utf8               I
  #150 = Integer            8
  #151 = Utf8               BYTES
  #152 = Integer            1
  #153 = Utf8               serialVersionUID
  #154 = Utf8               J
  #155 = Long               -7183698231559129828l
  #157 = Utf8               (B)Ljava/lang/String;
  #158 = Utf8               Code
  #159 = Utf8               LineNumberTable
  #160 = Utf8               LocalVariableTable
  #161 = Utf8               b
  #162 = Utf8               describeConstable
  #163 = Utf8               ()Ljava/util/Optional;
  #164 = Utf8               this
  #165 = Utf8               Ljava/lang/Byte;
  #166 = Utf8               ()Ljava/util/Optional<Ljava/lang/constant/DynamicConstantDesc<Ljava/lang/Byte;>;>;
  #167 = Utf8               offset
  #168 = Utf8               RuntimeVisibleAnnotations
  #169 = Utf8               Ljdk/internal/vm/annotation/IntrinsicCandidate;
  #170 = Utf8               s
  #171 = Utf8               Ljava/lang/String;
  #172 = Utf8               radix
  #173 = Utf8               i
  #174 = Utf8               StackMapTable
  #175 = Utf8               Exceptions
  #176 = Utf8               (Ljava/lang/String;)B
  #177 = Utf8               (Ljava/lang/String;)Ljava/lang/Byte;
  #178 = Utf8               nm
  #179 = Utf8               (B)V
  #180 = Utf8               Deprecated
  #181 = Utf8               Ljava/lang/Deprecated;
  #182 = Utf8               since
  #183 = Utf8               9
  #184 = Utf8               forRemoval
  #185 = Utf8               shortValue
  #186 = Utf8               ()S
  #187 = Utf8               longValue
  #188 = Utf8               ()J
  #189 = Utf8               floatValue
  #190 = Utf8               ()F
  #191 = Utf8               doubleValue
  #192 = Utf8               ()D
  #193 = Utf8               equals
  #194 = Utf8               (Ljava/lang/Object;)Z
  #195 = Utf8               obj
  #196 = Utf8               Ljava/lang/Object;
  #197 = Utf8               anotherByte
  #198 = Utf8               x
  #199 = Utf8               y
  #200 = Utf8               compareUnsigned
  #201 = Utf8               toUnsignedLong
  #202 = Utf8               (B)J
  #203 = Utf8               (Ljava/lang/Object;)I
  #204 = Utf8               MethodParameters
  #205 = Utf8               <clinit>
  #206 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Ljava/lang/Byte;>;Ljava/lang/constant/Constable;
  #207 = Utf8               SourceFile
  #208 = Utf8               Byte.java
  #209 = Utf8               Ljdk/internal/ValueBased;
  #210 = Utf8               NestMembers
  #211 = Utf8               InnerClasses
  #212 = Utf8               ByteCache
{
  public static final byte MIN_VALUE;
    descriptor: B
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int -128
  
  public static final byte MAX_VALUE;
    descriptor: B
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 127
  
  public static final java.lang.Class<java.lang.Byte> TYPE;
    descriptor: Ljava/lang/Class;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Signature: #147                        // Ljava/lang/Class<Ljava/lang/Byte;>;
  
  private final byte value;
    descriptor: B
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  public static final int SIZE;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8
  
  public static final int BYTES;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1
  
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long -7183698231559129828l
  
  public static java.lang.String toString(byte);
    descriptor: (B)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: iload_0                 
         1: invokestatic  #5                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;
         4: areturn                 
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  b      B
  
  public java.util.Optional<java.lang.constant.DynamicConstantDesc<java.lang.Byte>> describeConstable();
    descriptor: ()Ljava/util/Optional;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=1, args_size=1
         0: getstatic     #11                 // Field java/lang/constant/ConstantDescs.BSM_EXPLICIT_CAST:Ljava/lang/constant/DirectMethodHandleDesc;
         3: ldc           #15                 // String _
         5: getstatic     #17                 // Field java/lang/constant/ConstantDescs.CD_byte:Ljava/lang/constant/ClassDesc;
         8: iconst_1                
         9: anewarray     #21                 // class java/lang/constant/ConstantDesc
        12: dup                     
        13: iconst_0                
        14: aload_0                 
        15: invokevirtual #23                 // Method intValue:()I
        18: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        21: aastore                 
        22: invokestatic  #31                 // Method java/lang/constant/DynamicConstantDesc.ofNamed:(Ljava/lang/constant/DirectMethodHandleDesc;Ljava/lang/String;Ljava/lang/constant/ClassDesc;[Ljava/lang/constant/ConstantDesc;)Ljava/lang/constant/DynamicConstantDesc;
        25: invokestatic  #37                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
        28: areturn                 
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       29     0  this   Ljava/lang/Byte;
    Signature: #166                        // ()Ljava/util/Optional<Ljava/lang/constant/DynamicConstantDesc<Ljava/lang/Byte;>;>;
  
  public static java.lang.Byte valueOf(byte);
    descriptor: (B)Ljava/lang/Byte;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=2, args_size=1
         0: sipush        128               
         3: istore_1                
         4: getstatic     #43                 // Field java/lang/Byte$ByteCache.cache:[Ljava/lang/Byte;
         7: iload_0                 
         8: sipush        128               
        11: iadd                    
        12: aaload                  
        13: areturn                 
      LineNumberTable:
        line 148: 0
        line 149: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  b      B
           4       10     1  offset I
    RuntimeVisibleAnnotations:
      0: #169()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public static byte parseByte(java.lang.String, int) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;I)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokestatic  #49                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
         5: istore_2                
         6: iload_2                 
         7: bipush        -128              
         9: if_icmplt     18                
        12: iload_2                 
        13: bipush        127               
        15: if_icmple     54                
        18: new           #53                 // class java/lang/NumberFormatException
        21: dup                     
        22: new           #55                 // class java/lang/StringBuilder
        25: dup                     
        26: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
        29: ldc           #61                 // String Value out of range. Value:\"
        31: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: aload_0                 
        35: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: ldc           #67                 // String \" Radix:
        40: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: iload_1                 
        44: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        47: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        50: invokespecial #75                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        53: athrow                  
        54: iload_2                 
        55: i2b                     
        56: ireturn                 
      LineNumberTable:
        line 195: 0
        line 196: 6
        line 197: 18
        line 199: 54
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       57     0  s      Ljava/lang/String;
           0       57     1  radix  I
           6       51     2  i      I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [int]
        frame_type = 35 /* same */
    Exceptions:
      throws java.lang.NumberFormatException
  
  public static byte parseByte(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: bipush        10                
         3: invokestatic  #78                 // Method parseByte:(Ljava/lang/String;I)B
         6: ireturn                 
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  s      Ljava/lang/String;
    Exceptions:
      throws java.lang.NumberFormatException
  
  public static java.lang.Byte valueOf(java.lang.String, int) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;I)Ljava/lang/Byte;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokestatic  #78                 // Method parseByte:(Ljava/lang/String;I)B
         5: invokestatic  #82                 // Method valueOf:(B)Ljava/lang/Byte;
         8: areturn                 
      LineNumberTable:
        line 251: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  s      Ljava/lang/String;
           0        9     1  radix  I
    Exceptions:
      throws java.lang.NumberFormatException
  
  public static java.lang.Byte valueOf(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)Ljava/lang/Byte;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: bipush        10                
         3: invokestatic  #85                 // Method valueOf:(Ljava/lang/String;I)Ljava/lang/Byte;
         6: areturn                 
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  s      Ljava/lang/String;
    Exceptions:
      throws java.lang.NumberFormatException
  
  public static java.lang.Byte decode(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)Ljava/lang/Byte;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: aload_0                 
         1: invokestatic  #88                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
         4: invokevirtual #92                 // Method java/lang/Integer.intValue:()I
         7: istore_1                
         8: iload_1                 
         9: bipush        -128              
        11: if_icmplt     20                
        14: iload_1                 
        15: bipush        127               
        17: if_icmple     56                
        20: new           #53                 // class java/lang/NumberFormatException
        23: dup                     
        24: new           #55                 // class java/lang/StringBuilder
        27: dup                     
        28: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
        31: ldc           #93                 // String Value 
        33: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: iload_1                 
        37: invokevirtual #69                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        40: ldc           #95                 // String  out of range from input 
        42: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: aload_0                 
        46: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: invokespecial #75                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        55: athrow                  
        56: iload_1                 
        57: i2b                     
        58: invokestatic  #82                 // Method valueOf:(B)Ljava/lang/Byte;
        61: areturn                 
      LineNumberTable:
        line 323: 0
        line 324: 8
        line 325: 20
        line 327: 56
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       62     0  nm     Ljava/lang/String;
           8       54     1  i      I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [int]
        frame_type = 35 /* same */
    Exceptions:
      throws java.lang.NumberFormatException
  
  public java.lang.Byte(byte);
    descriptor: (B)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #97                 // Method java/lang/Number."<init>":()V
         4: aload_0                 
         5: iload_1                 
         6: putfield      #100                // Field value:B
         9: return                  
      LineNumberTable:
        line 350: 0
        line 351: 4
        line 352: 9
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/lang/Byte;
           0       10     1  value  B
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #181(#182=s#183,#184=Z#152)
        java.lang.Deprecated(
          since="9"
          forRemoval=true
        )
  
  public java.lang.Byte(java.lang.String) throws java.lang.NumberFormatException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #97                 // Method java/lang/Number."<init>":()V
         4: aload_0                 
         5: aload_1                 
         6: bipush        10                
         8: invokestatic  #78                 // Method parseByte:(Ljava/lang/String;I)B
        11: putfield      #100                // Field value:B
        14: return                  
      LineNumberTable:
        line 373: 0
        line 374: 4
        line 375: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       15     0  this   Ljava/lang/Byte;
           0       15     1  s      Ljava/lang/String;
    Exceptions:
      throws java.lang.NumberFormatException
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #181(#182=s#183,#184=Z#152)
        java.lang.Deprecated(
          since="9"
          forRemoval=true
        )
  
  public byte byteValue();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: ireturn                 
      LineNumberTable:
        line 383: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/Byte;
    RuntimeVisibleAnnotations:
      0: #169()
        jdk.internal.vm.annotation.IntrinsicCandidate
  
  public short shortValue();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: i2s                     
         5: ireturn                 
      LineNumberTable:
        line 392: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Byte;
  
  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: ireturn                 
      LineNumberTable:
        line 401: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/Byte;
  
  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: i2l                     
         5: lreturn                 
      LineNumberTable:
        line 410: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Byte;
  
  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: i2f                     
         5: freturn                 
      LineNumberTable:
        line 419: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Byte;
  
  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: i2d                     
         5: dreturn                 
      LineNumberTable:
        line 428: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/lang/Byte;
  
  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: invokestatic  #5                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;
         7: areturn                 
      LineNumberTable:
        line 443: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/lang/Byte;
  
  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: invokestatic  #104                // Method hashCode:(B)I
         7: ireturn                 
      LineNumberTable:
        line 454: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/lang/Byte;
  
  public static int hashCode(byte);
    descriptor: (B)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: iload_0                 
         1: ireturn                 
      LineNumberTable:
        line 466: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        2     0  value  B
  
  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=3, args_size=2
         0: aload_1                 
         1: instanceof    #1                  // class java/lang/Byte
         4: ifeq          29                
         7: aload_1                 
         8: checkcast     #1                  // class java/lang/Byte
        11: astore_2                
        12: aload_0                 
        13: getfield      #100                // Field value:B
        16: aload_2                 
        17: invokevirtual #108                // Method byteValue:()B
        20: if_icmpne     27                
        23: iconst_1                
        24: goto          28                
        27: iconst_0                
        28: ireturn                 
        29: iconst_0                
        30: ireturn                 
      LineNumberTable:
        line 480: 0
        line 481: 12
        line 483: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12       17     2  b      Ljava/lang/Byte;
           0       31     0  this   Ljava/lang/Byte;
           0       31     1  obj    Ljava/lang/Object;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [class java/lang/Byte]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 0
  
  public int compareTo(java.lang.Byte);
    descriptor: (Ljava/lang/Byte;)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #100                // Field value:B
         4: aload_1                 
         5: getfield      #100                // Field value:B
         8: invokestatic  #112                // Method compare:(BB)I
        11: ireturn                 
      LineNumberTable:
        line 500: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  this   Ljava/lang/Byte;
           0       12     1  anotherByte Ljava/lang/Byte;
  
  public static int compare(byte, byte);
    descriptor: (BB)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: isub                    
         3: ireturn                 
      LineNumberTable:
        line 518: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        4     0  x      B
           0        4     1  y      B
  
  public static int compareUnsigned(byte, byte);
    descriptor: (BB)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: invokestatic  #116                // Method toUnsignedInt:(B)I
         4: iload_1                 
         5: invokestatic  #116                // Method toUnsignedInt:(B)I
         8: isub                    
         9: ireturn                 
      LineNumberTable:
        line 534: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  x      B
           0       10     1  y      B
  
  public static int toUnsignedInt(byte);
    descriptor: (B)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: iload_0                 
         1: sipush        255               
         4: iand                    
         5: ireturn                 
      LineNumberTable:
        line 554: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  x      B
  
  public static long toUnsignedLong(byte);
    descriptor: (B)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=1, args_size=1
         0: iload_0                 
         1: i2l                     
         2: ldc2_w        #119                // long 255l
         5: land                    
         6: lreturn                 
      LineNumberTable:
        line 574: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  x      B
  
  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: checkcast     #1                  // class java/lang/Byte
         5: invokevirtual #121                // Method compareTo:(Ljava/lang/Byte;)I
         8: ireturn                 
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/lang/Byte;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: ldc           #125                // String byte
         2: invokestatic  #127                // Method java/lang/Class.getPrimitiveClass:(Ljava/lang/String;)Ljava/lang/Class;
         5: putstatic     #133                // Field TYPE:Ljava/lang/Class;
         8: return                  
      LineNumberTable:
        line 82: 0
}
Signature: #206                        // Ljava/lang/Number;Ljava/lang/Comparable<Ljava/lang/Byte;>;Ljava/lang/constant/Constable;
SourceFile: "Byte.java"
RuntimeVisibleAnnotations:
  0: #209()
    jdk.internal.ValueBased
NestMembers:
  java/lang/Byte$ByteCache
InnerClasses:
  private static final #212= #44 of #1;       // ByteCache=class java/lang/Byte$ByteCache of class java/lang/Byte
