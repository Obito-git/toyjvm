---
source: class_file/src/lib.rs
expression: display
---
final class java.util.HashMap$KeySet extends java.util.AbstractSet<K>
  minor version: 0
  major version: 68
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #2                       //java/util/HashMap$KeySet
  super_class: #8                      //java/util/AbstractSet
  interfaces: 0, fields: 1, methods: 10, attributes: 4
Constant pool:
    #1 = Fieldref           #2.#3            // java/util/HashMap$KeySet.this$0:Ljava/util/HashMap;
    #2 = Class              #4               // java/util/HashMap$KeySet
    #3 = NameAndType        #5:#6            // this$0:Ljava/util/HashMap;
    #4 = Utf8               java/util/HashMap$KeySet
    #5 = Utf8               this$0
    #6 = Utf8               Ljava/util/HashMap;
    #7 = Methodref          #8.#9            // java/util/AbstractSet."<init>":()V
    #8 = Class              #10              // java/util/AbstractSet
    #9 = NameAndType        #11:#12          // "<init>":()V
   #10 = Utf8               java/util/AbstractSet
   #11 = Utf8               <init>
   #12 = Utf8               ()V
   #13 = Fieldref           #14.#15          // java/util/HashMap.size:I
   #14 = Class              #16              // java/util/HashMap
   #15 = NameAndType        #17:#18          // size:I
   #16 = Utf8               java/util/HashMap
   #17 = Utf8               size
   #18 = Utf8               I
   #19 = Methodref          #14.#20          // java/util/HashMap.clear:()V
   #20 = NameAndType        #21:#12          // clear:()V
   #21 = Utf8               clear
   #22 = Class              #23              // java/util/HashMap$KeyIterator
   #23 = Utf8               java/util/HashMap$KeyIterator
   #24 = Methodref          #22.#25          // java/util/HashMap$KeyIterator."<init>":(Ljava/util/HashMap;)V
   #25 = NameAndType        #11:#26          // "<init>":(Ljava/util/HashMap;)V
   #26 = Utf8               (Ljava/util/HashMap;)V
   #27 = Methodref          #14.#28          // java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
   #28 = NameAndType        #29:#30          // containsKey:(Ljava/lang/Object;)Z
   #29 = Utf8               containsKey
   #30 = Utf8               (Ljava/lang/Object;)Z
   #31 = Methodref          #14.#32          // java/util/HashMap.hash:(Ljava/lang/Object;)I
   #32 = NameAndType        #33:#34          // hash:(Ljava/lang/Object;)I
   #33 = Utf8               hash
   #34 = Utf8               (Ljava/lang/Object;)I
   #35 = Methodref          #14.#36          // java/util/HashMap.removeNode:(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
   #36 = NameAndType        #37:#38          // removeNode:(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
   #37 = Utf8               removeNode
   #38 = Utf8               (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
   #39 = Class              #40              // java/util/HashMap$KeySpliterator
   #40 = Utf8               java/util/HashMap$KeySpliterator
   #41 = Methodref          #39.#42          // java/util/HashMap$KeySpliterator."<init>":(Ljava/util/HashMap;IIII)V
   #42 = NameAndType        #11:#43          // "<init>":(Ljava/util/HashMap;IIII)V
   #43 = Utf8               (Ljava/util/HashMap;IIII)V
   #44 = Class              #45              // java/lang/Object
   #45 = Utf8               java/lang/Object
   #46 = Methodref          #14.#47          // java/util/HashMap.keysToArray:([Ljava/lang/Object;)[Ljava/lang/Object;
   #47 = NameAndType        #48:#49          // keysToArray:([Ljava/lang/Object;)[Ljava/lang/Object;
   #48 = Utf8               keysToArray
   #49 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;
   #50 = Methodref          #14.#51          // java/util/HashMap.prepareArray:([Ljava/lang/Object;)[Ljava/lang/Object;
   #51 = NameAndType        #52:#49          // prepareArray:([Ljava/lang/Object;)[Ljava/lang/Object;
   #52 = Utf8               prepareArray
   #53 = Class              #54              // java/lang/NullPointerException
   #54 = Utf8               java/lang/NullPointerException
   #55 = Methodref          #53.#9           // java/lang/NullPointerException."<init>":()V
   #56 = Fieldref           #14.#57          // java/util/HashMap.table:[Ljava/util/HashMap$Node;
   #57 = NameAndType        #58:#59          // table:[Ljava/util/HashMap$Node;
   #58 = Utf8               table
   #59 = Utf8               [Ljava/util/HashMap$Node;
   #60 = Fieldref           #14.#61          // java/util/HashMap.modCount:I
   #61 = NameAndType        #62:#18          // modCount:I
   #62 = Utf8               modCount
   #63 = Fieldref           #64.#65          // java/util/HashMap$Node.key:Ljava/lang/Object;
   #64 = Class              #66              // java/util/HashMap$Node
   #65 = NameAndType        #67:#68          // key:Ljava/lang/Object;
   #66 = Utf8               java/util/HashMap$Node
   #67 = Utf8               key
   #68 = Utf8               Ljava/lang/Object;
   #69 = InterfaceMethodref #70.#71          // java/util/function/Consumer.accept:(Ljava/lang/Object;)V
   #70 = Class              #72              // java/util/function/Consumer
   #71 = NameAndType        #73:#74          // accept:(Ljava/lang/Object;)V
   #72 = Utf8               java/util/function/Consumer
   #73 = Utf8               accept
   #74 = Utf8               (Ljava/lang/Object;)V
   #75 = Fieldref           #64.#76          // java/util/HashMap$Node.next:Ljava/util/HashMap$Node;
   #76 = NameAndType        #77:#78          // next:Ljava/util/HashMap$Node;
   #77 = Utf8               next
   #78 = Utf8               Ljava/util/HashMap$Node;
   #79 = Class              #80              // java/util/ConcurrentModificationException
   #80 = Utf8               java/util/ConcurrentModificationException
   #81 = Methodref          #79.#9           // java/util/ConcurrentModificationException."<init>":()V
   #82 = Utf8               Code
   #83 = Utf8               LineNumberTable
   #84 = Utf8               LocalVariableTable
   #85 = Utf8               this
   #86 = Utf8               Ljava/util/HashMap$KeySet;
   #87 = Utf8               LocalVariableTypeTable
   #88 = Utf8               Ljava/util/HashMap<TK;TV;>.KeySet;
   #89 = Utf8               MethodParameters
   #90 = Utf8               ()I
   #91 = Utf8               iterator
   #92 = Utf8               ()Ljava/util/Iterator;
   #93 = Utf8               Signature
   #94 = Utf8               ()Ljava/util/Iterator<TK;>;
   #95 = Utf8               contains
   #96 = Utf8               o
   #97 = Utf8               remove
   #98 = Utf8               StackMapTable
   #99 = Utf8               spliterator
  #100 = Utf8               ()Ljava/util/Spliterator;
  #101 = Utf8               ()Ljava/util/Spliterator<TK;>;
  #102 = Utf8               toArray
  #103 = Utf8               ()[Ljava/lang/Object;
  #104 = Utf8               a
  #105 = Utf8               [Ljava/lang/Object;
  #106 = Utf8               [TT;
  #107 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;
  #108 = Utf8               forEach
  #109 = Utf8               (Ljava/util/function/Consumer;)V
  #110 = Utf8               e
  #111 = Utf8               mc
  #112 = Utf8               tab
  #113 = Utf8               action
  #114 = Utf8               Ljava/util/function/Consumer;
  #115 = Utf8               Ljava/util/HashMap$Node<TK;TV;>;
  #116 = Utf8               [Ljava/util/HashMap$Node<TK;TV;>;
  #117 = Utf8               Ljava/util/function/Consumer<-TK;>;
  #118 = Class              #59              // "[Ljava/util/HashMap$Node;"
  #119 = Utf8               (Ljava/util/function/Consumer<-TK;>;)V
  #120 = Utf8               Ljava/util/AbstractSet<TK;>;
  #121 = Utf8               SourceFile
  #122 = Utf8               HashMap.java
  #123 = Utf8               NestHost
  #124 = Utf8               InnerClasses
  #125 = Utf8               KeySet
  #126 = Utf8               KeyIterator
  #127 = Utf8               Node
  #128 = Utf8               KeySpliterator
{
  final java.util.HashMap this$0;
    descriptor: Ljava/util/HashMap;
    flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC
  
  java.util.HashMap$KeySet(java.util.HashMap);
    descriptor: (Ljava/util/HashMap;)V
    flags: (0x0000) 
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: putfield      #1                  // Field this$0:Ljava/util/HashMap;
         5: aload_0                 
         6: invokespecial #7                  // Method java/util/AbstractSet."<init>":()V
         9: return                  
      LineNumberTable:
        line 989: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/util/HashMap$KeySet;
           0       10     1  this$0 Ljava/util/HashMap;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       10     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
    MethodParameters:
      Name                             Flags
      <no name>                        final mandated 
  
  public final int size();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         4: getfield      #13                 // Field java/util/HashMap.size:I
         7: ireturn                 
      LineNumberTable:
        line 990: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/util/HashMap$KeySet;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0        8     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
  
  public final void clear();
    descriptor: ()V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         4: invokevirtual #19                 // Method java/util/HashMap.clear:()V
         7: return                  
      LineNumberTable:
        line 991: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/util/HashMap$KeySet;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0        8     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
  
  public final java.util.Iterator<K> iterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=3, locals=1, args_size=1
         0: new           #22                 // class java/util/HashMap$KeyIterator
         3: dup                     
         4: aload_0                 
         5: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         8: invokespecial #24                 // Method java/util/HashMap$KeyIterator."<init>":(Ljava/util/HashMap;)V
        11: areturn                 
      LineNumberTable:
        line 992: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  this   Ljava/util/HashMap$KeySet;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       12     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
    Signature: #94                         // ()Ljava/util/Iterator<TK;>;
  
  public final boolean contains(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         4: aload_1                 
         5: invokevirtual #27                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
         8: ireturn                 
      LineNumberTable:
        line 993: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/util/HashMap$KeySet;
           0        9     1  o      Ljava/lang/Object;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0        9     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
  
  public final boolean remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=6, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         4: aload_1                 
         5: invokestatic  #31                 // Method java/util/HashMap.hash:(Ljava/lang/Object;)I
         8: aload_1                 
         9: aconst_null             
        10: iconst_0                
        11: iconst_1                
        12: invokevirtual #35                 // Method java/util/HashMap.removeNode:(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;
        15: ifnull        22                
        18: iconst_1                
        19: goto          23                
        22: iconst_0                
        23: ireturn                 
      LineNumberTable:
        line 995: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       24     0  this   Ljava/util/HashMap$KeySet;
           0       24     1  key    Ljava/lang/Object;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       24     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public final java.util.Spliterator<K> spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=7, locals=1, args_size=1
         0: new           #39                 // class java/util/HashMap$KeySpliterator
         3: dup                     
         4: aload_0                 
         5: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         8: iconst_0                
         9: iconst_m1               
        10: iconst_0                
        11: iconst_0                
        12: invokespecial #41                 // Method java/util/HashMap$KeySpliterator."<init>":(Ljava/util/HashMap;IIII)V
        15: areturn                 
      LineNumberTable:
        line 998: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  this   Ljava/util/HashMap$KeySet;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       16     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
    Signature: #101                        // ()Ljava/util/Spliterator<TK;>;
  
  public java.lang.Object[] toArray();
    descriptor: ()[Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         4: aload_0                 
         5: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         8: getfield      #13                 // Field java/util/HashMap.size:I
        11: anewarray     #44                 // class java/lang/Object
        14: invokevirtual #46                 // Method java/util/HashMap.keysToArray:([Ljava/lang/Object;)[Ljava/lang/Object;
        17: areturn                 
      LineNumberTable:
        line 1002: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       18     0  this   Ljava/util/HashMap$KeySet;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       18     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
  
  public <T extends java.lang.Object> T[] toArray(T[]);
    descriptor: ([Ljava/lang/Object;)[Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         4: aload_0                 
         5: getfield      #1                  // Field this$0:Ljava/util/HashMap;
         8: aload_1                 
         9: invokevirtual #50                 // Method java/util/HashMap.prepareArray:([Ljava/lang/Object;)[Ljava/lang/Object;
        12: invokevirtual #46                 // Method java/util/HashMap.keysToArray:([Ljava/lang/Object;)[Ljava/lang/Object;
        15: areturn                 
      LineNumberTable:
        line 1006: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  this   Ljava/util/HashMap$KeySet;
           0       16     1  a      [Ljava/lang/Object;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       16     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
             0       16     1  a      [TT;
    Signature: #107                        // <T:Ljava/lang/Object;>([TT;)[TT;
  
  public final void forEach(java.util.function.Consumer<? super K>);
    descriptor: (Ljava/util/function/Consumer;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=8, args_size=2
         0: aload_1                 
         1: ifnonnull     12                
         4: new           #53                 // class java/lang/NullPointerException
         7: dup                     
         8: invokespecial #55                 // Method java/lang/NullPointerException."<init>":()V
        11: athrow                  
        12: aload_0                 
        13: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        16: getfield      #13                 // Field java/util/HashMap.size:I
        19: ifle          118               
        22: aload_0                 
        23: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        26: getfield      #56                 // Field java/util/HashMap.table:[Ljava/util/HashMap$Node;
        29: dup                     
        30: astore_2                
        31: ifnull        118               
        34: aload_0                 
        35: getfield      #1                  // Field this$0:Ljava/util/HashMap;
        38: getfield      #60                 // Field java/util/HashMap.modCount:I
        41: istore_3                
        42: aload_2                 
        43: astore        4                 
        45: aload         4                 
        47: arraylength             
        48: istore        5                 
        50: iconst_0                
        51: istore        6                 
        53: iload         6                 
        55: iload         5                 
        57: if_icmpge     99                
        60: aload         4                 
        62: iload         6                 
        64: aaload                  
        65: astore        7                 
        67: aload         7                 
        69: ifnull        93                
        72: aload_1                 
        73: aload         7                 
        75: getfield      #63                 // Field java/util/HashMap$Node.key:Ljava/lang/Object;
        78: invokeinterface #69, 2              // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
        83: aload         7                 
        85: getfield      #75                 // Field java/util/HashMap$Node.next:Ljava/util/HashMap$Node;
        88: astore        7                 
        90: goto          67                
        93: iinc          6, 1              
        96: goto          53                
        99: aload_0                 
       100: getfield      #1                  // Field this$0:Ljava/util/HashMap;
       103: getfield      #60                 // Field java/util/HashMap.modCount:I
       106: iload_3                 
       107: if_icmpeq     118               
       110: new           #79                 // class java/util/ConcurrentModificationException
       113: dup                     
       114: invokespecial #81                 // Method java/util/ConcurrentModificationException."<init>":()V
       117: athrow                  
       118: return                  
      LineNumberTable:
        line 1011: 0
        line 1012: 4
        line 1013: 12
        line 1014: 34
        line 1015: 42
        line 1016: 67
        line 1017: 72
        line 1016: 83
        line 1015: 93
        line 1019: 99
        line 1020: 110
        line 1022: 118
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          67       26     7  e      Ljava/util/HashMap$Node;
          42       76     3  mc     I
          31       87     2  tab    [Ljava/util/HashMap$Node;
           0      119     0  this   Ljava/util/HashMap$KeySet;
           0      119     1  action Ljava/util/function/Consumer;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
            67       26     7  e      Ljava/util/HashMap$Node<TK;TV;>;
            31       87     2  tab    [Ljava/util/HashMap$Node<TK;TV;>;
             0      119     0  this   Ljava/util/HashMap<TK;TV;>.KeySet;
             0      119     1  action   Ljava/util/function/Consumer<-TK;>;
      StackMapTable: number_of_entries = 6
        frame_type = 12 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [class java/util/HashMap$KeySet, class java/util/function/Consumer, class "[Ljava/util/HashMap$Node;", int, class "[Ljava/util/HashMap$Node;", int, int]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [class java/util/HashMap$Node]
        frame_type = 250 /* chop */
          offset_delta = 25
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 249 /* chop */
          offset_delta = 18
    Signature: #119                        // (Ljava/util/function/Consumer<-TK;>;)V
}
Signature: #120                        // Ljava/util/AbstractSet<TK;>;
SourceFile: "HashMap.java"
NestHost: class java/util/HashMap
InnerClasses:
  final #125= #2 of #14;                      // KeySet=class java/util/HashMap$KeySet of class java/util/HashMap
  final #126= #22 of #14;                     // KeyIterator=class java/util/HashMap$KeyIterator of class java/util/HashMap
  static #127= #64 of #14;                    // Node=class java/util/HashMap$Node of class java/util/HashMap
  static final #128= #39 of #14;              // KeySpliterator=class java/util/HashMap$KeySpliterator of class java/util/HashMap
