---
source: class_file/src/lib.rs
expression: display
---
public class java.util.concurrent.locks.LockSupport 
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                       //java/util/concurrent/locks/LockSupport
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 3, methods: 13, attributes: 1
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9            // java/util/concurrent/locks/LockSupport.U:Ljdk/internal/misc/Unsafe;
    #8 = Class              #10              // java/util/concurrent/locks/LockSupport
    #9 = NameAndType        #11:#12          // U:Ljdk/internal/misc/Unsafe;
   #10 = Utf8               java/util/concurrent/locks/LockSupport
   #11 = Utf8               U
   #12 = Utf8               Ljdk/internal/misc/Unsafe;
   #13 = Fieldref           #8.#14           // java/util/concurrent/locks/LockSupport.PARKBLOCKER:J
   #14 = NameAndType        #15:#16          // PARKBLOCKER:J
   #15 = Utf8               PARKBLOCKER
   #16 = Utf8               J
   #17 = Methodref          #18.#19          // jdk/internal/misc/Unsafe.putReferenceOpaque:(Ljava/lang/Object;JLjava/lang/Object;)V
   #18 = Class              #20              // jdk/internal/misc/Unsafe
   #19 = NameAndType        #21:#22          // putReferenceOpaque:(Ljava/lang/Object;JLjava/lang/Object;)V
   #20 = Utf8               jdk/internal/misc/Unsafe
   #21 = Utf8               putReferenceOpaque
   #22 = Utf8               (Ljava/lang/Object;JLjava/lang/Object;)V
   #23 = Methodref          #24.#25          // java/lang/Thread.currentThread:()Ljava/lang/Thread;
   #24 = Class              #26              // java/lang/Thread
   #25 = NameAndType        #27:#28          // currentThread:()Ljava/lang/Thread;
   #26 = Utf8               java/lang/Thread
   #27 = Utf8               currentThread
   #28 = Utf8               ()Ljava/lang/Thread;
   #29 = Methodref          #24.#30          // java/lang/Thread.isVirtual:()Z
   #30 = NameAndType        #31:#32          // isVirtual:()Z
   #31 = Utf8               isVirtual
   #32 = Utf8               ()Z
   #33 = Fieldref           #8.#34           // java/util/concurrent/locks/LockSupport.JLA:Ljdk/internal/access/JavaLangAccess;
   #34 = NameAndType        #35:#36          // JLA:Ljdk/internal/access/JavaLangAccess;
   #35 = Utf8               JLA
   #36 = Utf8               Ljdk/internal/access/JavaLangAccess;
   #37 = InterfaceMethodref #38.#39          // jdk/internal/access/JavaLangAccess.unparkVirtualThread:(Ljava/lang/Thread;)V
   #38 = Class              #40              // jdk/internal/access/JavaLangAccess
   #39 = NameAndType        #41:#42          // unparkVirtualThread:(Ljava/lang/Thread;)V
   #40 = Utf8               jdk/internal/access/JavaLangAccess
   #41 = Utf8               unparkVirtualThread
   #42 = Utf8               (Ljava/lang/Thread;)V
   #43 = Methodref          #18.#44          // jdk/internal/misc/Unsafe.unpark:(Ljava/lang/Object;)V
   #44 = NameAndType        #45:#46          // unpark:(Ljava/lang/Object;)V
   #45 = Utf8               unpark
   #46 = Utf8               (Ljava/lang/Object;)V
   #47 = Methodref          #8.#48           // java/util/concurrent/locks/LockSupport.setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
   #48 = NameAndType        #49:#50          // setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
   #49 = Utf8               setBlocker
   #50 = Utf8               (Ljava/lang/Thread;Ljava/lang/Object;)V
   #51 = InterfaceMethodref #38.#52          // jdk/internal/access/JavaLangAccess.parkVirtualThread:()V
   #52 = NameAndType        #53:#6           // parkVirtualThread:()V
   #53 = Utf8               parkVirtualThread
   #54 = Methodref          #18.#55          // jdk/internal/misc/Unsafe.park:(ZJ)V
   #55 = NameAndType        #56:#57          // park:(ZJ)V
   #56 = Utf8               park
   #57 = Utf8               (ZJ)V
   #58 = InterfaceMethodref #38.#59          // jdk/internal/access/JavaLangAccess.parkVirtualThread:(J)V
   #59 = NameAndType        #53:#60          // parkVirtualThread:(J)V
   #60 = Utf8               (J)V
   #61 = Methodref          #8.#62           // java/util/concurrent/locks/LockSupport.parkUntil:(J)V
   #62 = NameAndType        #63:#60          // parkUntil:(J)V
   #63 = Utf8               parkUntil
   #64 = Class              #65              // java/lang/NullPointerException
   #65 = Utf8               java/lang/NullPointerException
   #66 = Methodref          #64.#3           // java/lang/NullPointerException."<init>":()V
   #67 = Methodref          #18.#68          // jdk/internal/misc/Unsafe.getReferenceOpaque:(Ljava/lang/Object;J)Ljava/lang/Object;
   #68 = NameAndType        #69:#70          // getReferenceOpaque:(Ljava/lang/Object;J)Ljava/lang/Object;
   #69 = Utf8               getReferenceOpaque
   #70 = Utf8               (Ljava/lang/Object;J)Ljava/lang/Object;
   #71 = Methodref          #72.#73          // java/lang/System.currentTimeMillis:()J
   #72 = Class              #74              // java/lang/System
   #73 = NameAndType        #75:#76          // currentTimeMillis:()J
   #74 = Utf8               java/lang/System
   #75 = Utf8               currentTimeMillis
   #76 = Utf8               ()J
   #77 = Fieldref           #78.#79          // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
   #78 = Class              #80              // java/util/concurrent/TimeUnit
   #79 = NameAndType        #81:#82          // MILLISECONDS:Ljava/util/concurrent/TimeUnit;
   #80 = Utf8               java/util/concurrent/TimeUnit
   #81 = Utf8               MILLISECONDS
   #82 = Utf8               Ljava/util/concurrent/TimeUnit;
   #83 = Methodref          #78.#84          // java/util/concurrent/TimeUnit.toNanos:(J)J
   #84 = NameAndType        #85:#86          // toNanos:(J)J
   #85 = Utf8               toNanos
   #86 = Utf8               (J)J
   #87 = Methodref          #24.#88          // java/lang/Thread.threadId:()J
   #88 = NameAndType        #89:#76          // threadId:()J
   #89 = Utf8               threadId
   #90 = Methodref          #18.#91          // jdk/internal/misc/Unsafe.getUnsafe:()Ljdk/internal/misc/Unsafe;
   #91 = NameAndType        #92:#93          // getUnsafe:()Ljdk/internal/misc/Unsafe;
   #92 = Utf8               getUnsafe
   #93 = Utf8               ()Ljdk/internal/misc/Unsafe;
   #94 = String             #95              // parkBlocker
   #95 = Utf8               parkBlocker
   #96 = Methodref          #18.#97          // jdk/internal/misc/Unsafe.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
   #97 = NameAndType        #98:#99          // objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
   #98 = Utf8               objectFieldOffset
   #99 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)J
  #100 = Methodref          #101.#102        // jdk/internal/access/SharedSecrets.getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;
  #101 = Class              #103             // jdk/internal/access/SharedSecrets
  #102 = NameAndType        #104:#105        // getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;
  #103 = Utf8               jdk/internal/access/SharedSecrets
  #104 = Utf8               getJavaLangAccess
  #105 = Utf8               ()Ljdk/internal/access/JavaLangAccess;
  #106 = Utf8               Code
  #107 = Utf8               LineNumberTable
  #108 = Utf8               LocalVariableTable
  #109 = Utf8               this
  #110 = Utf8               Ljava/util/concurrent/locks/LockSupport;
  #111 = Utf8               t
  #112 = Utf8               Ljava/lang/Thread;
  #113 = Utf8               arg
  #114 = Utf8               Ljava/lang/Object;
  #115 = Utf8               setCurrentBlocker
  #116 = Utf8               blocker
  #117 = Utf8               thread
  #118 = Utf8               StackMapTable
  #119 = Class              #120             // java/lang/Throwable
  #120 = Utf8               java/lang/Throwable
  #121 = Utf8               parkNanos
  #122 = Utf8               (Ljava/lang/Object;J)V
  #123 = Utf8               nanos
  #124 = Utf8               deadline
  #125 = Utf8               getBlocker
  #126 = Utf8               (Ljava/lang/Thread;)Ljava/lang/Object;
  #127 = Utf8               millis
  #128 = Utf8               getThreadId
  #129 = Utf8               (Ljava/lang/Thread;)J
  #130 = Utf8               <clinit>
  #131 = Utf8               SourceFile
  #132 = Utf8               LockSupport.java
{
  private static final jdk.internal.misc.Unsafe U;
    descriptor: Ljdk/internal/misc/Unsafe;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final long PARKBLOCKER;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final jdk.internal.access.JavaLangAccess JLA;
    descriptor: Ljdk/internal/access/JavaLangAccess;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private java.util.concurrent.locks.LockSupport();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 143: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/util/concurrent/locks/LockSupport;
  
  private static void setBlocker(java.lang.Thread, java.lang.Object);
    descriptor: (Ljava/lang/Thread;Ljava/lang/Object;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=5, locals=2, args_size=2
         0: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
         3: aload_0                 
         4: getstatic     #13                 // Field PARKBLOCKER:J
         7: aload_1                 
         8: invokevirtual #17                 // Method jdk/internal/misc/Unsafe.putReferenceOpaque:(Ljava/lang/Object;JLjava/lang/Object;)V
        11: return                  
      LineNumberTable:
        line 146: 0
        line 147: 11
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  t      Ljava/lang/Thread;
           0       12     1  arg    Ljava/lang/Object;
  
  public static void setCurrentBlocker(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=5, locals=1, args_size=1
         0: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
         3: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         6: getstatic     #13                 // Field PARKBLOCKER:J
         9: aload_0                 
        10: invokevirtual #17                 // Method jdk/internal/misc/Unsafe.putReferenceOpaque:(Ljava/lang/Object;JLjava/lang/Object;)V
        13: return                  
      LineNumberTable:
        line 164: 0
        line 165: 13
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  blocker Ljava/lang/Object;
  
  public static void unpark(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: ifnull        30                
         4: aload_0                 
         5: invokevirtual #29                 // Method java/lang/Thread.isVirtual:()Z
         8: ifeq          23                
        11: getstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        14: aload_0                 
        15: invokeinterface #37, 2              // InterfaceMethod jdk/internal/access/JavaLangAccess.unparkVirtualThread:(Ljava/lang/Thread;)V
        20: goto          30                
        23: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        26: aload_0                 
        27: invokevirtual #43                 // Method jdk/internal/misc/Unsafe.unpark:(Ljava/lang/Object;)V
        30: return                  
      LineNumberTable:
        line 179: 0
        line 180: 4
        line 181: 11
        line 183: 23
        line 186: 30
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       31     0  thread Ljava/lang/Thread;
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 6 /* same */
  
  public static void park(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=1
         0: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         3: astore_1                
         4: aload_1                 
         5: aload_0                 
         6: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
         9: aload_1                 
        10: invokevirtual #29                 // Method java/lang/Thread.isVirtual:()Z
        13: ifeq          27                
        16: getstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        19: invokeinterface #51, 1              // InterfaceMethod jdk/internal/access/JavaLangAccess.parkVirtualThread:()V
        24: goto          35                
        27: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        30: iconst_0                
        31: lconst_0                
        32: invokevirtual #54                 // Method jdk/internal/misc/Unsafe.park:(ZJ)V
        35: aload_1                 
        36: aconst_null             
        37: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        40: goto          51                
        43: astore_2                
        44: aload_1                 
        45: aconst_null             
        46: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        49: aload_2                 
        50: athrow                  
        51: return                  
      Exception table:
          from       to target type
             9       35    43  any
      LineNumberTable:
        line 217: 0
        line 218: 4
        line 220: 9
        line 221: 16
        line 223: 27
        line 226: 35
        line 227: 40
        line 226: 43
        line 227: 49
        line 228: 51
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       52     0  blocker Ljava/lang/Object;
           4       48     1  t      Ljava/lang/Thread;
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [class java/lang/Thread]
        frame_type = 7 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 7 /* same */
  
  public static void parkNanos(java.lang.Object, long);
    descriptor: (Ljava/lang/Object;J)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=5, args_size=2
         0: lload_1                 
         1: lconst_0                
         2: lcmp                    
         3: ifle          60                
         6: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         9: astore_3                
        10: aload_3                 
        11: aload_0                 
        12: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        15: aload_3                 
        16: invokevirtual #29                 // Method java/lang/Thread.isVirtual:()Z
        19: ifeq          34                
        22: getstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        25: lload_1                 
        26: invokeinterface #58, 3              // InterfaceMethod jdk/internal/access/JavaLangAccess.parkVirtualThread:(J)V
        31: goto          42                
        34: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        37: iconst_0                
        38: lload_1                 
        39: invokevirtual #54                 // Method jdk/internal/misc/Unsafe.park:(ZJ)V
        42: aload_3                 
        43: aconst_null             
        44: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        47: goto          60                
        50: astore        4                 
        52: aload_3                 
        53: aconst_null             
        54: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        57: aload         4                 
        59: athrow                  
        60: return                  
      Exception table:
          from       to target type
            15       42    50  any
            50       52    50  any
      LineNumberTable:
        line 264: 0
        line 265: 6
        line 266: 10
        line 268: 15
        line 269: 22
        line 271: 34
        line 274: 42
        line 275: 47
        line 274: 50
        line 275: 57
        line 277: 60
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10       50     3  t      Ljava/lang/Thread;
           0       61     0  blocker Ljava/lang/Object;
           0       61     1  nanos  J
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [class java/lang/Thread]
        frame_type = 7 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 9
  
  public static void parkUntil(java.lang.Object, long);
    descriptor: (Ljava/lang/Object;J)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=5, args_size=2
         0: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         3: astore_3                
         4: aload_3                 
         5: aload_0                 
         6: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
         9: lload_1                 
        10: invokestatic  #61                 // Method parkUntil:(J)V
        13: aload_3                 
        14: aconst_null             
        15: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        18: goto          31                
        21: astore        4                 
        23: aload_3                 
        24: aconst_null             
        25: invokestatic  #47                 // Method setBlocker:(Ljava/lang/Thread;Ljava/lang/Object;)V
        28: aload         4                 
        30: athrow                  
        31: return                  
      Exception table:
          from       to target type
             9       13    21  any
            21       23    21  any
      LineNumberTable:
        line 313: 0
        line 314: 4
        line 316: 9
        line 318: 13
        line 319: 18
        line 318: 21
        line 319: 28
        line 320: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       32     0  blocker Ljava/lang/Object;
           0       32     1  deadline J
           4       28     3  t      Ljava/lang/Thread;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [class java/lang/Object, long, class java/lang/Thread]
          stack = [class java/lang/Throwable]
        frame_type = 9 /* same */
  
  public static java.lang.Object getBlocker(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=1, args_size=1
         0: aload_0                 
         1: ifnonnull     12                
         4: new           #64                 // class java/lang/NullPointerException
         7: dup                     
         8: invokespecial #66                 // Method java/lang/NullPointerException."<init>":()V
        11: athrow                  
        12: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        15: aload_0                 
        16: getstatic     #13                 // Field PARKBLOCKER:J
        19: invokevirtual #67                 // Method jdk/internal/misc/Unsafe.getReferenceOpaque:(Ljava/lang/Object;J)Ljava/lang/Object;
        22: areturn                 
      LineNumberTable:
        line 335: 0
        line 336: 4
        line 337: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       23     0  t      Ljava/lang/Thread;
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
  
  public static void park();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=0, args_size=0
         0: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         3: invokevirtual #29                 // Method java/lang/Thread.isVirtual:()Z
         6: ifeq          20                
         9: getstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        12: invokeinterface #51, 1              // InterfaceMethod jdk/internal/access/JavaLangAccess.parkVirtualThread:()V
        17: goto          28                
        20: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        23: iconst_0                
        24: lconst_0                
        25: invokevirtual #54                 // Method jdk/internal/misc/Unsafe.park:(ZJ)V
        28: return                  
      LineNumberTable:
        line 366: 0
        line 367: 9
        line 369: 20
        line 371: 28
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 7 /* same */
  
  public static void parkNanos(long);
    descriptor: (J)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=2, args_size=1
         0: lload_0                 
         1: lconst_0                
         2: lcmp                    
         3: ifle          35                
         6: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         9: invokevirtual #29                 // Method java/lang/Thread.isVirtual:()Z
        12: ifeq          27                
        15: getstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        18: lload_0                 
        19: invokeinterface #58, 3              // InterfaceMethod jdk/internal/access/JavaLangAccess.parkVirtualThread:(J)V
        24: goto          35                
        27: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        30: iconst_0                
        31: lload_0                 
        32: invokevirtual #54                 // Method jdk/internal/misc/Unsafe.park:(ZJ)V
        35: return                  
      LineNumberTable:
        line 404: 0
        line 405: 6
        line 406: 15
        line 408: 27
        line 411: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  nanos  J
      StackMapTable: number_of_entries = 2
        frame_type = 27 /* same */
        frame_type = 7 /* same */
  
  public static void parkUntil(long);
    descriptor: (J)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=1
         0: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
         3: invokevirtual #29                 // Method java/lang/Thread.isVirtual:()Z
         6: ifeq          33                
         9: lload_0                 
        10: invokestatic  #71                 // Method java/lang/System.currentTimeMillis:()J
        13: lsub                    
        14: lstore_2                
        15: getstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        18: getstatic     #77                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
        21: lload_2                 
        22: invokevirtual #83                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
        25: invokeinterface #58, 3              // InterfaceMethod jdk/internal/access/JavaLangAccess.parkVirtualThread:(J)V
        30: goto          41                
        33: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
        36: iconst_1                
        37: lload_0                 
        38: invokevirtual #54                 // Method jdk/internal/misc/Unsafe.park:(ZJ)V
        41: return                  
      LineNumberTable:
        line 444: 0
        line 445: 9
        line 446: 15
        line 447: 30
        line 448: 33
        line 450: 41
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          15       15     2  millis J
           0       42     0  deadline J
      StackMapTable: number_of_entries = 2
        frame_type = 33 /* same */
        frame_type = 7 /* same */
  
  static final long getThreadId(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)J
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #87                 // Method java/lang/Thread.threadId:()J
         4: lreturn                 
      LineNumberTable:
        line 456: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  thread Ljava/lang/Thread;
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=3, locals=0, args_size=0
         0: invokestatic  #90                 // Method jdk/internal/misc/Unsafe.getUnsafe:()Ljdk/internal/misc/Unsafe;
         3: putstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
         6: getstatic     #7                  // Field U:Ljdk/internal/misc/Unsafe;
         9: ldc           #24                 // class java/lang/Thread
        11: ldc           #94                 // String parkBlocker
        13: invokevirtual #96                 // Method jdk/internal/misc/Unsafe.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
        16: putstatic     #13                 // Field PARKBLOCKER:J
        19: invokestatic  #100                // Method jdk/internal/access/SharedSecrets.getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;
        22: putstatic     #33                 // Field JLA:Ljdk/internal/access/JavaLangAccess;
        25: return                  
      LineNumberTable:
        line 460: 0
        line 461: 6
        line 462: 13
        line 464: 19
}
SourceFile: "LockSupport.java"
