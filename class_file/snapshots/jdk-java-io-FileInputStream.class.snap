---
source: class_file/src/lib.rs
expression: display
---
public class java.io.FileInputStream extends java.io.InputStream
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                       //java/io/FileInputStream
  super_class: #13                     //java/io/InputStream
  interfaces: 0, fields: 8, methods: 30, attributes: 3
Constant pool:
    #1 = Class              #2               // java/io/File
    #2 = Utf8               java/io/File
    #3 = Methodref          #1.#4            // java/io/File."<init>":(Ljava/lang/String;)V
    #4 = NameAndType        #5:#6            // "<init>":(Ljava/lang/String;)V
    #5 = Utf8               <init>
    #6 = Utf8               (Ljava/lang/String;)V
    #7 = Methodref          #8.#9            // java/io/FileInputStream."<init>":(Ljava/io/File;)V
    #8 = Class              #10              // java/io/FileInputStream
    #9 = NameAndType        #5:#11           // "<init>":(Ljava/io/File;)V
   #10 = Utf8               java/io/FileInputStream
   #11 = Utf8               (Ljava/io/File;)V
   #12 = Methodref          #13.#14          // java/io/InputStream."<init>":()V
   #13 = Class              #15              // java/io/InputStream
   #14 = NameAndType        #5:#16           // "<init>":()V
   #15 = Utf8               java/io/InputStream
   #16 = Utf8               ()V
   #17 = Class              #18              // java/lang/Object
   #18 = Utf8               java/lang/Object
   #19 = Methodref          #17.#14          // java/lang/Object."<init>":()V
   #20 = Fieldref           #8.#21           // java/io/FileInputStream.closeLock:Ljava/lang/Object;
   #21 = NameAndType        #22:#23          // closeLock:Ljava/lang/Object;
   #22 = Utf8               closeLock
   #23 = Utf8               Ljava/lang/Object;
   #24 = Methodref          #1.#25           // java/io/File.isInvalid:()Z
   #25 = NameAndType        #26:#27          // isInvalid:()Z
   #26 = Utf8               isInvalid
   #27 = Utf8               ()Z
   #28 = Class              #29              // java/io/FileNotFoundException
   #29 = Utf8               java/io/FileNotFoundException
   #30 = String             #31              // Invalid file path
   #31 = Utf8               Invalid file path
   #32 = Methodref          #28.#4           // java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
   #33 = Methodref          #1.#34           // java/io/File.getPath:()Ljava/lang/String;
   #34 = NameAndType        #35:#36          // getPath:()Ljava/lang/String;
   #35 = Utf8               getPath
   #36 = Utf8               ()Ljava/lang/String;
   #37 = Fieldref           #8.#38           // java/io/FileInputStream.path:Ljava/lang/String;
   #38 = NameAndType        #39:#40          // path:Ljava/lang/String;
   #39 = Utf8               path
   #40 = Utf8               Ljava/lang/String;
   #41 = Class              #42              // java/io/FileDescriptor
   #42 = Utf8               java/io/FileDescriptor
   #43 = Methodref          #41.#14          // java/io/FileDescriptor."<init>":()V
   #44 = Fieldref           #8.#45           // java/io/FileInputStream.fd:Ljava/io/FileDescriptor;
   #45 = NameAndType        #46:#47          // fd:Ljava/io/FileDescriptor;
   #46 = Utf8               fd
   #47 = Utf8               Ljava/io/FileDescriptor;
   #48 = Methodref          #41.#49          // java/io/FileDescriptor.attach:(Ljava/io/Closeable;)V
   #49 = NameAndType        #50:#51          // attach:(Ljava/io/Closeable;)V
   #50 = Utf8               attach
   #51 = Utf8               (Ljava/io/Closeable;)V
   #52 = Methodref          #8.#53           // java/io/FileInputStream.open:(Ljava/lang/String;)V
   #53 = NameAndType        #54:#6           // open:(Ljava/lang/String;)V
   #54 = Utf8               open
   #55 = Methodref          #56.#57          // java/io/FileCleanable.register:(Ljava/io/FileDescriptor;)V
   #56 = Class              #58              // java/io/FileCleanable
   #57 = NameAndType        #59:#60          // register:(Ljava/io/FileDescriptor;)V
   #58 = Utf8               java/io/FileCleanable
   #59 = Utf8               register
   #60 = Utf8               (Ljava/io/FileDescriptor;)V
   #61 = Class              #62              // java/lang/NullPointerException
   #62 = Utf8               java/lang/NullPointerException
   #63 = Methodref          #61.#14          // java/lang/NullPointerException."<init>":()V
   #64 = Methodref          #8.#65           // java/io/FileInputStream.open0:(Ljava/lang/String;)V
   #65 = NameAndType        #66:#6           // open0:(Ljava/lang/String;)V
   #66 = Utf8               open0
   #67 = Fieldref           #8.#68           // java/io/FileInputStream.jfrTracing:Z
   #68 = NameAndType        #69:#70          // jfrTracing:Z
   #69 = Utf8               jfrTracing
   #70 = Utf8               Z
   #71 = Methodref          #72.#73          // jdk/internal/event/FileReadEvent.enabled:()Z
   #72 = Class              #74              // jdk/internal/event/FileReadEvent
   #73 = NameAndType        #75:#27          // enabled:()Z
   #74 = Utf8               jdk/internal/event/FileReadEvent
   #75 = Utf8               enabled
   #76 = Methodref          #8.#77           // java/io/FileInputStream.traceRead0:()I
   #77 = NameAndType        #78:#79          // traceRead0:()I
   #78 = Utf8               traceRead0
   #79 = Utf8               ()I
   #80 = Methodref          #8.#81           // java/io/FileInputStream.read0:()I
   #81 = NameAndType        #82:#79          // read0:()I
   #82 = Utf8               read0
   #83 = Methodref          #72.#84          // jdk/internal/event/FileReadEvent.timestamp:()J
   #84 = NameAndType        #85:#86          // timestamp:()J
   #85 = Utf8               timestamp
   #86 = Utf8               ()J
   #87 = Methodref          #72.#88          // jdk/internal/event/FileReadEvent.shouldCommit:(J)Z
   #88 = NameAndType        #89:#90          // shouldCommit:(J)Z
   #89 = Utf8               shouldCommit
   #90 = Utf8               (J)Z
   #91 = Methodref          #72.#92          // jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
   #92 = NameAndType        #93:#94          // commit:(JJLjava/lang/String;JZ)V
   #93 = Utf8               commit
   #94 = Utf8               (JJLjava/lang/String;JZ)V
   #95 = Methodref          #8.#96           // java/io/FileInputStream.readBytes:([BII)I
   #96 = NameAndType        #97:#98          // readBytes:([BII)I
   #97 = Utf8               readBytes
   #98 = Utf8               ([BII)I
   #99 = Methodref          #8.#100          // java/io/FileInputStream.traceReadBytes:([BII)I
  #100 = NameAndType        #101:#98         // traceReadBytes:([BII)I
  #101 = Utf8               traceReadBytes
  #102 = Methodref          #8.#103          // java/io/FileInputStream.isRegularFile:()Z
  #103 = NameAndType        #104:#27         // isRegularFile:()Z
  #104 = Utf8               isRegularFile
  #105 = Methodref          #13.#106         // java/io/InputStream.readAllBytes:()[B
  #106 = NameAndType        #107:#108        // readAllBytes:()[B
  #107 = Utf8               readAllBytes
  #108 = Utf8               ()[B
  #109 = Methodref          #8.#110          // java/io/FileInputStream.length:()J
  #110 = NameAndType        #111:#86         // length:()J
  #111 = Utf8               length
  #112 = Methodref          #8.#113          // java/io/FileInputStream.position:()J
  #113 = NameAndType        #114:#86         // position:()J
  #114 = Utf8               position
  #115 = Class              #116             // java/lang/Integer
  #116 = Utf8               java/lang/Integer
  #117 = Long               2147483647l
  #119 = String             #120             // Required array size too large for %s: %d = %d - %d
  #120 = Utf8               Required array size too large for %s: %d = %d - %d
  #121 = Methodref          #122.#123        // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #122 = Class              #124             // java/lang/Long
  #123 = NameAndType        #125:#126        // valueOf:(J)Ljava/lang/Long;
  #124 = Utf8               java/lang/Long
  #125 = Utf8               valueOf
  #126 = Utf8               (J)Ljava/lang/Long;
  #127 = Methodref          #128.#129        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #128 = Class              #130             // java/lang/String
  #129 = NameAndType        #131:#132        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #130 = Utf8               java/lang/String
  #131 = Utf8               format
  #132 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #133 = Class              #134             // java/lang/OutOfMemoryError
  #134 = Utf8               java/lang/OutOfMemoryError
  #135 = Methodref          #133.#4          // java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
  #136 = Methodref          #8.#137          // java/io/FileInputStream.read:([BII)I
  #137 = NameAndType        #138:#98         // read:([BII)I
  #138 = Utf8               read
  #139 = Methodref          #8.#140          // java/io/FileInputStream.read:()I
  #140 = NameAndType        #138:#79         // read:()I
  #141 = Methodref          #142.#143        // jdk/internal/util/ArraysSupport.newLength:(III)I
  #142 = Class              #144             // jdk/internal/util/ArraysSupport
  #143 = NameAndType        #145:#146        // newLength:(III)I
  #144 = Utf8               jdk/internal/util/ArraysSupport
  #145 = Utf8               newLength
  #146 = Utf8               (III)I
  #147 = Methodref          #148.#149        // java/lang/Math.max:(II)I
  #148 = Class              #150             // java/lang/Math
  #149 = NameAndType        #151:#152        // max:(II)I
  #150 = Utf8               java/lang/Math
  #151 = Utf8               max
  #152 = Utf8               (II)I
  #153 = Methodref          #154.#155        // java/util/Arrays.copyOf:([BI)[B
  #154 = Class              #156             // java/util/Arrays
  #155 = NameAndType        #157:#158        // copyOf:([BI)[B
  #156 = Utf8               java/util/Arrays
  #157 = Utf8               copyOf
  #158 = Utf8               ([BI)[B
  #159 = Class              #160             // java/lang/IllegalArgumentException
  #160 = Utf8               java/lang/IllegalArgumentException
  #161 = String             #162             // len < 0
  #162 = Utf8               len < 0
  #163 = Methodref          #159.#4          // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #164 = Methodref          #13.#165         // java/io/InputStream.readNBytes:(I)[B
  #165 = NameAndType        #166:#167        // readNBytes:(I)[B
  #166 = Utf8               readNBytes
  #167 = Utf8               (I)[B
  #168 = Methodref          #148.#169        // java/lang/Math.min:(JJ)J
  #169 = NameAndType        #170:#171        // min:(JJ)J
  #170 = Utf8               min
  #171 = Utf8               (JJ)J
  #172 = Class              #173             // java/io/FileOutputStream
  #173 = Utf8               java/io/FileOutputStream
  #174 = Methodref          #8.#175          // java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
  #175 = NameAndType        #176:#177        // getChannel:()Ljava/nio/channels/FileChannel;
  #176 = Utf8               getChannel
  #177 = Utf8               ()Ljava/nio/channels/FileChannel;
  #178 = Methodref          #179.#113        // java/nio/channels/FileChannel.position:()J
  #179 = Class              #180             // java/nio/channels/FileChannel
  #180 = Utf8               java/nio/channels/FileChannel
  #181 = Long               9223372036854775807l
  #183 = Methodref          #172.#175        // java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
  #184 = Methodref          #179.#185        // java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
  #185 = NameAndType        #186:#187        // transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
  #186 = Utf8               transferTo
  #187 = Utf8               (JJLjava/nio/channels/WritableByteChannel;)J
  #188 = Methodref          #179.#189        // java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
  #189 = NameAndType        #114:#190        // position:(J)Ljava/nio/channels/FileChannel;
  #190 = Utf8               (J)Ljava/nio/channels/FileChannel;
  #191 = Methodref          #179.#192        // java/nio/channels/FileChannel.size:()J
  #192 = NameAndType        #193:#86         // size:()J
  #193 = Utf8               size
  #194 = Methodref          #13.#195         // java/io/InputStream.transferTo:(Ljava/io/OutputStream;)J
  #195 = NameAndType        #186:#196        // transferTo:(Ljava/io/OutputStream;)J
  #196 = Utf8               (Ljava/io/OutputStream;)J
  #197 = Methodref          #148.#198        // java/lang/Math.addExact:(JJ)J
  #198 = NameAndType        #199:#171        // addExact:(JJ)J
  #199 = Utf8               addExact
  #200 = Class              #201             // java/lang/ArithmeticException
  #201 = Utf8               java/lang/ArithmeticException
  #202 = Methodref          #8.#203          // java/io/FileInputStream.length0:()J
  #203 = NameAndType        #204:#86         // length0:()J
  #204 = Utf8               length0
  #205 = Methodref          #8.#206          // java/io/FileInputStream.position0:()J
  #206 = NameAndType        #207:#86         // position0:()J
  #207 = Utf8               position0
  #208 = Methodref          #8.#209          // java/io/FileInputStream.skip0:(J)J
  #209 = NameAndType        #210:#211        // skip0:(J)J
  #210 = Utf8               skip0
  #211 = Utf8               (J)J
  #212 = Methodref          #13.#213         // java/io/InputStream.skip:(J)J
  #213 = NameAndType        #214:#211        // skip:(J)J
  #214 = Utf8               skip
  #215 = Methodref          #8.#216          // java/io/FileInputStream.available0:()I
  #216 = NameAndType        #217:#79         // available0:()I
  #217 = Utf8               available0
  #218 = Fieldref           #8.#219          // java/io/FileInputStream.closed:Z
  #219 = NameAndType        #220:#70         // closed:Z
  #220 = Utf8               closed
  #221 = Fieldref           #8.#222          // java/io/FileInputStream.channel:Ljava/nio/channels/FileChannel;
  #222 = NameAndType        #223:#224        // channel:Ljava/nio/channels/FileChannel;
  #223 = Utf8               channel
  #224 = Utf8               Ljava/nio/channels/FileChannel;
  #225 = Methodref          #179.#226        // java/nio/channels/FileChannel.close:()V
  #226 = NameAndType        #227:#16         // close:()V
  #227 = Utf8               close
  #228 = Class              #229             // java/io/FileInputStream$1
  #229 = Utf8               java/io/FileInputStream$1
  #230 = Methodref          #228.#231        // java/io/FileInputStream$1."<init>":(Ljava/io/FileInputStream;)V
  #231 = NameAndType        #5:#232          // "<init>":(Ljava/io/FileInputStream;)V
  #232 = Utf8               (Ljava/io/FileInputStream;)V
  #233 = Methodref          #41.#234         // java/io/FileDescriptor.closeAll:(Ljava/io/Closeable;)V
  #234 = NameAndType        #235:#51         // closeAll:(Ljava/io/Closeable;)V
  #235 = Utf8               closeAll
  #236 = Class              #237             // java/io/IOException
  #237 = Utf8               java/io/IOException
  #238 = Methodref          #236.#14         // java/io/IOException."<init>":()V
  #239 = Methodref          #240.#241        // sun/nio/ch/FileChannelImpl.open:(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
  #240 = Class              #242             // sun/nio/ch/FileChannelImpl
  #241 = NameAndType        #54:#243         // open:(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
  #242 = Utf8               sun/nio/ch/FileChannelImpl
  #243 = Utf8               (Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
  #244 = Class              #245             // java/lang/InternalError
  #245 = Utf8               java/lang/InternalError
  #246 = Methodref          #244.#247        // java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
  #247 = NameAndType        #5:#248          // "<init>":(Ljava/lang/Throwable;)V
  #248 = Utf8               (Ljava/lang/Throwable;)V
  #249 = Fieldref           #8.#250          // java/io/FileInputStream.isRegularFile:Ljava/lang/Boolean;
  #250 = NameAndType        #104:#251        // isRegularFile:Ljava/lang/Boolean;
  #251 = Utf8               Ljava/lang/Boolean;
  #252 = Methodref          #8.#253          // java/io/FileInputStream.isRegularFile0:(Ljava/io/FileDescriptor;)Z
  #253 = NameAndType        #254:#255        // isRegularFile0:(Ljava/io/FileDescriptor;)Z
  #254 = Utf8               isRegularFile0
  #255 = Utf8               (Ljava/io/FileDescriptor;)Z
  #256 = Methodref          #257.#258        // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
  #257 = Class              #259             // java/lang/Boolean
  #258 = NameAndType        #125:#260        // valueOf:(Z)Ljava/lang/Boolean;
  #259 = Utf8               java/lang/Boolean
  #260 = Utf8               (Z)Ljava/lang/Boolean;
  #261 = Methodref          #257.#262        // java/lang/Boolean.booleanValue:()Z
  #262 = NameAndType        #263:#27         // booleanValue:()Z
  #263 = Utf8               booleanValue
  #264 = Methodref          #8.#265          // java/io/FileInputStream.initIDs:()V
  #265 = NameAndType        #266:#16         // initIDs:()V
  #266 = Utf8               initIDs
  #267 = Utf8               DEFAULT_BUFFER_SIZE
  #268 = Utf8               I
  #269 = Utf8               ConstantValue
  #270 = Integer            8192
  #271 = Utf8               RuntimeVisibleAnnotations
  #272 = Utf8               Ljdk/internal/vm/annotation/Stable;
  #273 = Utf8               Code
  #274 = Utf8               LineNumberTable
  #275 = Utf8               LocalVariableTable
  #276 = Utf8               this
  #277 = Utf8               Ljava/io/FileInputStream;
  #278 = Utf8               name
  #279 = Utf8               StackMapTable
  #280 = Utf8               Exceptions
  #281 = Utf8               file
  #282 = Utf8               Ljava/io/File;
  #283 = Utf8               fdObj
  #284 = Utf8               duration
  #285 = Utf8               J
  #286 = Utf8               result
  #287 = Utf8               endOfFile
  #288 = Utf8               bytesRead
  #289 = Utf8               start
  #290 = Class              #291             // java/lang/Throwable
  #291 = Utf8               java/lang/Throwable
  #292 = Utf8               b
  #293 = Utf8               [B
  #294 = Utf8               off
  #295 = Utf8               len
  #296 = Class              #293             // "[B"
  #297 = Utf8               ([B)I
  #298 = Utf8               msg
  #299 = Utf8               capacity
  #300 = Utf8               buf
  #301 = Utf8               nread
  #302 = Utf8               n
  #303 = Utf8               B
  #304 = Utf8               remaining
  #305 = Utf8               fc
  #306 = Utf8               pos
  #307 = Utf8               newPos
  #308 = Utf8               fos
  #309 = Utf8               Ljava/io/FileOutputStream;
  #310 = Utf8               ignore
  #311 = Utf8               Ljava/lang/ArithmeticException;
  #312 = Utf8               out
  #313 = Utf8               Ljava/io/OutputStream;
  #314 = Utf8               transferred
  #315 = Utf8               available
  #316 = Utf8               getFD
  #317 = Utf8               ()Ljava/io/FileDescriptor;
  #318 = Utf8               ioe
  #319 = Utf8               Ljava/io/IOException;
  #320 = Utf8               <clinit>
  #321 = Utf8               SourceFile
  #322 = Utf8               FileInputStream.java
  #323 = Utf8               NestMembers
  #324 = Utf8               InnerClasses
{
  private static final int DEFAULT_BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8192
  
  private static boolean jfrTracing;
    descriptor: Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private final java.io.FileDescriptor fd;
    descriptor: Ljava/io/FileDescriptor;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private final java.lang.String path;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private volatile java.nio.channels.FileChannel channel;
    descriptor: Ljava/nio/channels/FileChannel;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
  
  private final java.lang.Object closeLock;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private volatile boolean closed;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
  
  private java.lang.Boolean isRegularFile;
    descriptor: Ljava/lang/Boolean;
    flags: (0x0002) ACC_PRIVATE
    RuntimeVisibleAnnotations:
      0: #272()
        jdk.internal.vm.annotation.Stable
  
  public java.io.FileInputStream(java.lang.String) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: ifnull        16                
         5: new           #1                  // class java/io/File
         8: dup                     
         9: aload_1                 
        10: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
        13: goto          17                
        16: aconst_null             
        17: invokespecial #7                  // Method "<init>":(Ljava/io/File;)V
        20: return                  
      LineNumberTable:
        line 109: 0
        line 110: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  this   Ljava/io/FileInputStream;
           0       21     1  name   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ this ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [this, class java/lang/String]
          stack = [this, class java/io/File]
    Exceptions:
      throws java.io.FileNotFoundException
  
  public java.io.FileInputStream(java.io.File) throws java.io.FileNotFoundException;
    descriptor: (Ljava/io/File;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #12                 // Method java/io/InputStream."<init>":()V
         4: aload_0                 
         5: new           #17                 // class java/lang/Object
         8: dup                     
         9: invokespecial #19                 // Method java/lang/Object."<init>":()V
        12: putfield      #20                 // Field closeLock:Ljava/lang/Object;
        15: aload_1                 
        16: invokevirtual #24                 // Method java/io/File.isInvalid:()Z
        19: ifeq          32                
        22: new           #28                 // class java/io/FileNotFoundException
        25: dup                     
        26: ldc           #30                 // String Invalid file path
        28: invokespecial #32                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
        31: athrow                  
        32: aload_0                 
        33: aload_1                 
        34: invokevirtual #33                 // Method java/io/File.getPath:()Ljava/lang/String;
        37: putfield      #37                 // Field path:Ljava/lang/String;
        40: aload_0                 
        41: new           #41                 // class java/io/FileDescriptor
        44: dup                     
        45: invokespecial #43                 // Method java/io/FileDescriptor."<init>":()V
        48: putfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        51: aload_0                 
        52: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        55: aload_0                 
        56: invokevirtual #48                 // Method java/io/FileDescriptor.attach:(Ljava/io/Closeable;)V
        59: aload_0                 
        60: aload_0                 
        61: getfield      #37                 // Field path:Ljava/lang/String;
        64: invokevirtual #52                 // Method open:(Ljava/lang/String;)V
        67: aload_0                 
        68: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        71: invokestatic  #55                 // Method java/io/FileCleanable.register:(Ljava/io/FileDescriptor;)V
        74: return                  
      LineNumberTable:
        line 132: 0
        line 81: 4
        line 133: 15
        line 134: 22
        line 136: 32
        line 137: 40
        line 138: 51
        line 139: 59
        line 140: 67
        line 141: 74
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       75     0  this   Ljava/io/FileInputStream;
           0       75     1  file   Ljava/io/File;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [class java/io/FileInputStream, class java/io/File]
          stack = []
    Exceptions:
      throws java.io.FileNotFoundException
  
  public java.io.FileInputStream(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #12                 // Method java/io/InputStream."<init>":()V
         4: aload_0                 
         5: new           #17                 // class java/lang/Object
         8: dup                     
         9: invokespecial #19                 // Method java/lang/Object."<init>":()V
        12: putfield      #20                 // Field closeLock:Ljava/lang/Object;
        15: aload_1                 
        16: ifnonnull     27                
        19: new           #61                 // class java/lang/NullPointerException
        22: dup                     
        23: invokespecial #63                 // Method java/lang/NullPointerException."<init>":()V
        26: athrow                  
        27: aload_0                 
        28: aload_1                 
        29: putfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        32: aload_0                 
        33: aconst_null             
        34: putfield      #37                 // Field path:Ljava/lang/String;
        37: aload_0                 
        38: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        41: aload_0                 
        42: invokevirtual #48                 // Method java/io/FileDescriptor.attach:(Ljava/io/Closeable;)V
        45: return                  
      LineNumberTable:
        line 159: 0
        line 81: 4
        line 160: 15
        line 161: 19
        line 163: 27
        line 164: 32
        line 170: 37
        line 171: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  this   Ljava/io/FileInputStream;
           0       46     1  fdObj  Ljava/io/FileDescriptor;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [class java/io/FileInputStream, class java/io/FileDescriptor]
          stack = []
  
  private native void open0(java.lang.String) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.FileNotFoundException
  
  private void open(java.lang.String) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokevirtual #64                 // Method open0:(Ljava/lang/String;)V
         5: return                  
      LineNumberTable:
        line 185: 0
        line 186: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/io/FileInputStream;
           0        6     1  name   Ljava/lang/String;
    Exceptions:
      throws java.io.FileNotFoundException
  
  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: getstatic     #67                 // Field jfrTracing:Z
         3: ifeq          17                
         6: invokestatic  #71                 // Method jdk/internal/event/FileReadEvent.enabled:()Z
         9: ifeq          17                
        12: aload_0                 
        13: invokevirtual #76                 // Method traceRead0:()I
        16: ireturn                 
        17: aload_0                 
        18: invokevirtual #80                 // Method read0:()I
        21: ireturn                 
      LineNumberTable:
        line 198: 0
        line 199: 12
        line 201: 17
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  this   Ljava/io/FileInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
    Exceptions:
      throws java.io.IOException
  
  private native int read0() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  private int traceRead0() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=1
         0: iconst_0                
         1: istore_1                
         2: iconst_0                
         3: istore_2                
         4: lconst_0                
         5: lstore_3                
         6: lconst_0                
         7: lstore        5                 
         9: invokestatic  #83                 // Method jdk/internal/event/FileReadEvent.timestamp:()J
        12: lstore        5                 
        14: aload_0                 
        15: invokevirtual #80                 // Method read0:()I
        18: istore_1                
        19: iload_1                 
        20: ifge          28                
        23: iconst_1                
        24: istore_2                
        25: goto          30                
        28: lconst_1                
        29: lstore_3                
        30: invokestatic  #83                 // Method jdk/internal/event/FileReadEvent.timestamp:()J
        33: lload         5                 
        35: lsub                    
        36: lstore        7                 
        38: lload         7                 
        40: invokestatic  #87                 // Method jdk/internal/event/FileReadEvent.shouldCommit:(J)Z
        43: ifeq          59                
        46: lload         5                 
        48: lload         7                 
        50: aload_0                 
        51: getfield      #37                 // Field path:Ljava/lang/String;
        54: lload_3                 
        55: iload_2                 
        56: invokestatic  #91                 // Method jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
        59: goto          96                
        62: astore        9                 
        64: invokestatic  #83                 // Method jdk/internal/event/FileReadEvent.timestamp:()J
        67: lload         5                 
        69: lsub                    
        70: lstore        10                
        72: lload         10                
        74: invokestatic  #87                 // Method jdk/internal/event/FileReadEvent.shouldCommit:(J)Z
        77: ifeq          93                
        80: lload         5                 
        82: lload         10                
        84: aload_0                 
        85: getfield      #37                 // Field path:Ljava/lang/String;
        88: lload_3                 
        89: iload_2                 
        90: invokestatic  #91                 // Method jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
        93: aload         9                 
        95: athrow                  
        96: iload_1                 
        97: ireturn                 
      Exception table:
          from       to target type
             9       30    62  any
            62       64    62  any
      LineNumberTable:
        line 207: 0
        line 208: 2
        line 209: 4
        line 210: 6
        line 212: 9
        line 213: 14
        line 214: 19
        line 215: 23
        line 217: 28
        line 220: 30
        line 221: 38
        line 222: 46
        line 224: 59
        line 220: 62
        line 221: 72
        line 222: 80
        line 224: 93
        line 225: 96
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          38       21     7  duration J
          72       21    10  duration J
           0       98     0  this   Ljava/io/FileInputStream;
           2       96     1  result I
           4       94     2  endOfFile Z
           6       92     3  bytesRead J
           9       89     5  start  J
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [class java/io/FileInputStream, int, int, long, long]
          stack = []
        frame_type = 1 /* same */
        frame_type = 28 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [top, top, class java/lang/Throwable]
        frame_type = 248 /* chop */
          offset_delta = 2
    Exceptions:
      throws java.io.IOException
  
  private native int readBytes(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  private int traceReadBytes(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=4
         0: iconst_0                
         1: istore        4                 
         3: lconst_0                
         4: lstore        5                 
         6: invokestatic  #83                 // Method jdk/internal/event/FileReadEvent.timestamp:()J
         9: lstore        5                 
        11: aload_0                 
        12: aload_1                 
        13: iload_2                 
        14: iload_3                 
        15: invokevirtual #95                 // Method readBytes:([BII)I
        18: istore        4                 
        20: invokestatic  #83                 // Method jdk/internal/event/FileReadEvent.timestamp:()J
        23: lload         5                 
        25: lsub                    
        26: lstore        7                 
        28: lload         7                 
        30: invokestatic  #87                 // Method jdk/internal/event/FileReadEvent.shouldCommit:(J)Z
        33: ifeq          72                
        36: iload         4                 
        38: ifge          57                
        41: lload         5                 
        43: lload         7                 
        45: aload_0                 
        46: getfield      #37                 // Field path:Ljava/lang/String;
        49: lconst_0                
        50: iconst_1                
        51: invokestatic  #91                 // Method jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
        54: goto          72                
        57: lload         5                 
        59: lload         7                 
        61: aload_0                 
        62: getfield      #37                 // Field path:Ljava/lang/String;
        65: iload         4                 
        67: i2l                     
        68: iconst_0                
        69: invokestatic  #91                 // Method jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
        72: goto          132               
        75: astore        9                 
        77: invokestatic  #83                 // Method jdk/internal/event/FileReadEvent.timestamp:()J
        80: lload         5                 
        82: lsub                    
        83: lstore        10                
        85: lload         10                
        87: invokestatic  #87                 // Method jdk/internal/event/FileReadEvent.shouldCommit:(J)Z
        90: ifeq          129               
        93: iload         4                 
        95: ifge          114               
        98: lload         5                 
       100: lload         10                
       102: aload_0                 
       103: getfield      #37                 // Field path:Ljava/lang/String;
       106: lconst_0                
       107: iconst_1                
       108: invokestatic  #91                 // Method jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
       111: goto          129               
       114: lload         5                 
       116: lload         10                
       118: aload_0                 
       119: getfield      #37                 // Field path:Ljava/lang/String;
       122: iload         4                 
       124: i2l                     
       125: iconst_0                
       126: invokestatic  #91                 // Method jdk/internal/event/FileReadEvent.commit:(JJLjava/lang/String;JZ)V
       129: aload         9                 
       131: athrow                  
       132: iload         4                 
       134: ireturn                 
      Exception table:
          from       to target type
             6       20    75  any
            75       77    75  any
      LineNumberTable:
        line 238: 0
        line 239: 3
        line 241: 6
        line 242: 11
        line 244: 20
        line 245: 28
        line 246: 36
        line 247: 41
        line 249: 57
        line 252: 72
        line 244: 75
        line 245: 85
        line 246: 93
        line 247: 98
        line 249: 114
        line 252: 129
        line 253: 132
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          28       44     7  duration J
          85       44    10  duration J
           0      135     0  this   Ljava/io/FileInputStream;
           0      135     1  b      [B
           0      135     2  off    I
           0      135     3  len    I
           3      132     4  bytesRead I
           6      129     5  start  J
      StackMapTable: number_of_entries = 6
        frame_type = 254 /* append */
          offset_delta = 57
          locals = [int, long, long]
        frame_type = 250 /* chop */
          offset_delta = 14
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [class java/io/FileInputStream, class "[B", int, int, int, long, top, top, class java/lang/Throwable, long]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 14
        frame_type = 248 /* chop */
          offset_delta = 2
    Exceptions:
      throws java.io.IOException
  
  public int read(byte[]) throws java.io.IOException;
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: getstatic     #67                 // Field jfrTracing:Z
         3: ifeq          21                
         6: invokestatic  #71                 // Method jdk/internal/event/FileReadEvent.enabled:()Z
         9: ifeq          21                
        12: aload_0                 
        13: aload_1                 
        14: iconst_0                
        15: aload_1                 
        16: arraylength             
        17: invokevirtual #99                 // Method traceReadBytes:([BII)I
        20: ireturn                 
        21: aload_0                 
        22: aload_1                 
        23: iconst_0                
        24: aload_1                 
        25: arraylength             
        26: invokevirtual #95                 // Method readBytes:([BII)I
        29: ireturn                 
      LineNumberTable:
        line 269: 0
        line 270: 12
        line 272: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  this   Ljava/io/FileInputStream;
           0       30     1  b      [B
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */
    Exceptions:
      throws java.io.IOException
  
  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=4, args_size=4
         0: getstatic     #67                 // Field jfrTracing:Z
         3: ifeq          20                
         6: invokestatic  #71                 // Method jdk/internal/event/FileReadEvent.enabled:()Z
         9: ifeq          20                
        12: aload_0                 
        13: aload_1                 
        14: iload_2                 
        15: iload_3                 
        16: invokevirtual #99                 // Method traceReadBytes:([BII)I
        19: ireturn                 
        20: aload_0                 
        21: aload_1                 
        22: iload_2                 
        23: iload_3                 
        24: invokevirtual #95                 // Method readBytes:([BII)I
        27: ireturn                 
      LineNumberTable:
        line 291: 0
        line 292: 12
        line 294: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       28     0  this   Ljava/io/FileInputStream;
           0       28     1  b      [B
           0       28     2  off    I
           0       28     3  len    I
      StackMapTable: number_of_entries = 1
        frame_type = 20 /* same */
    Exceptions:
      throws java.io.IOException
  
  public byte[] readAllBytes() throws java.io.IOException;
    descriptor: ()[B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=11, args_size=1
         0: aload_0                 
         1: invokevirtual #102                // Method isRegularFile:()Z
         4: ifne          12                
         7: aload_0                 
         8: invokespecial #105                // Method java/io/InputStream.readAllBytes:()[B
        11: areturn                 
        12: aload_0                 
        13: invokevirtual #109                // Method length:()J
        16: lstore_1                
        17: aload_0                 
        18: invokevirtual #112                // Method position:()J
        21: lstore_3                
        22: lload_1                 
        23: lload_3                 
        24: lsub                    
        25: lstore        5                 
        27: lload_1                 
        28: lconst_0                
        29: lcmp                    
        30: ifle          40                
        33: lload         5                 
        35: lconst_0                
        36: lcmp                    
        37: ifgt          45                
        40: aload_0                 
        41: invokespecial #105                // Method java/io/InputStream.readAllBytes:()[B
        44: areturn                 
        45: lload         5                 
        47: ldc2_w        #117                // long 2147483647l
        50: lcmp                    
        51: ifle          104               
        54: ldc           #119                // String Required array size too large for %s: %d = %d - %d
        56: iconst_4                
        57: anewarray     #17                 // class java/lang/Object
        60: dup                     
        61: iconst_0                
        62: aload_0                 
        63: getfield      #37                 // Field path:Ljava/lang/String;
        66: aastore                 
        67: dup                     
        68: iconst_1                
        69: lload         5                 
        71: invokestatic  #121                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        74: aastore                 
        75: dup                     
        76: iconst_2                
        77: lload_1                 
        78: invokestatic  #121                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        81: aastore                 
        82: dup                     
        83: iconst_3                
        84: lload_3                 
        85: invokestatic  #121                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        88: aastore                 
        89: invokestatic  #127                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        92: astore        7                 
        94: new           #133                // class java/lang/OutOfMemoryError
        97: dup                     
        98: aload         7                 
       100: invokespecial #135                // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
       103: athrow                  
       104: lload         5                 
       106: l2i                     
       107: istore        7                 
       109: iload         7                 
       111: newarray      byte              
       113: astore        8                 
       115: iconst_0                
       116: istore        9                 
       118: aload_0                 
       119: aload         8                 
       121: iload         9                 
       123: iload         7                 
       125: iload         9                 
       127: isub                    
       128: invokevirtual #136                // Method read:([BII)I
       131: dup                     
       132: istore        10                
       134: ifle          147               
       137: iload         9                 
       139: iload         10                
       141: iadd                    
       142: istore        9                 
       144: goto          118               
       147: iload         10                
       149: iflt          204               
       152: aload_0                 
       153: invokevirtual #139                // Method read:()I
       156: dup                     
       157: istore        10                
       159: ifge          165               
       162: goto          204               
       165: iload         7                 
       167: iconst_1                
       168: iload         7                 
       170: invokestatic  #141                // Method jdk/internal/util/ArraysSupport.newLength:(III)I
       173: sipush        8192              
       176: invokestatic  #147                // Method java/lang/Math.max:(II)I
       179: istore        7                 
       181: aload         8                 
       183: iload         7                 
       185: invokestatic  #153                // Method java/util/Arrays.copyOf:([BI)[B
       188: astore        8                 
       190: aload         8                 
       192: iload         9                 
       194: iinc          9, 1              
       197: iload         10                
       199: i2b                     
       200: bastore                 
       201: goto          118               
       204: iload         7                 
       206: iload         9                 
       208: if_icmpne     216               
       211: aload         8                 
       213: goto          223               
       216: aload         8                 
       218: iload         9                 
       220: invokestatic  #153                // Method java/util/Arrays.copyOf:([BI)[B
       223: areturn                 
      LineNumberTable:
        line 299: 0
        line 300: 7
        line 302: 12
        line 303: 17
        line 304: 22
        line 306: 27
        line 307: 40
        line 309: 45
        line 310: 54
        line 312: 71
        line 311: 89
        line 313: 94
        line 316: 104
        line 317: 109
        line 319: 115
        line 324: 118
        line 325: 137
        line 329: 147
        line 330: 162
        line 333: 165
        line 337: 181
        line 338: 190
        line 340: 204
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          94       10     7  msg    Ljava/lang/String;
           0      224     0  this   Ljava/io/FileInputStream;
          17      207     1  length J
          22      202     3  position J
          27      197     5  size   J
         109      115     7  capacity I
         115      109     8  buf    [B
         118      106     9  nread  I
         134       90    10  n      I
      StackMapTable: number_of_entries = 10
        frame_type = 12 /* same */
        frame_type = 254 /* append */
          offset_delta = 27
          locals = [long, long, long]
        frame_type = 4 /* same */
        frame_type = 58 /* same */
        frame_type = 254 /* append */
          offset_delta = 13
          locals = [int, class "[B", int]
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [int]
        frame_type = 17 /* same */
        frame_type = 38 /* same */
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class "[B" ]
    Exceptions:
      throws java.io.IOException
  
  public byte[] readNBytes(int) throws java.io.IOException;
    descriptor: (I)[B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=14, args_size=2
         0: iload_1                 
         1: ifge          14                
         4: new           #159                // class java/lang/IllegalArgumentException
         7: dup                     
         8: ldc           #161                // String len < 0
        10: invokespecial #163                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: iload_1                 
        15: ifne          22                
        18: iconst_0                
        19: newarray      byte              
        21: areturn                 
        22: aload_0                 
        23: invokevirtual #102                // Method isRegularFile:()Z
        26: ifne          35                
        29: aload_0                 
        30: iload_1                 
        31: invokespecial #164                // Method java/io/InputStream.readNBytes:(I)[B
        34: areturn                 
        35: aload_0                 
        36: invokevirtual #109                // Method length:()J
        39: lstore_2                
        40: aload_0                 
        41: invokevirtual #112                // Method position:()J
        44: lstore        4                 
        46: lload_2                 
        47: lload         4                 
        49: lsub                    
        50: lstore        6                 
        52: lload_2                 
        53: lconst_0                
        54: lcmp                    
        55: ifle          65                
        58: lload         6                 
        60: lconst_0                
        61: lcmp                    
        62: ifgt          71                
        65: aload_0                 
        66: iload_1                 
        67: invokespecial #164                // Method java/io/InputStream.readNBytes:(I)[B
        70: areturn                 
        71: iload_1                 
        72: i2l                     
        73: lload         6                 
        75: invokestatic  #168                // Method java/lang/Math.min:(JJ)J
        78: l2i                     
        79: istore        8                 
        81: iload         8                 
        83: newarray      byte              
        85: astore        9                 
        87: iload         8                 
        89: istore        10                
        91: iconst_0                
        92: istore        11                
        94: aload_0                 
        95: aload         9                 
        97: iload         11                
        99: iload         10                
       101: invokevirtual #136                // Method read:([BII)I
       104: istore        12                
       106: iload         12                
       108: ifle          128               
       111: iload         11                
       113: iload         12                
       115: iadd                    
       116: istore        11                
       118: iload         10                
       120: iload         12                
       122: isub                    
       123: istore        10                
       125: goto          162               
       128: iload         12                
       130: ifne          162               
       133: aload_0                 
       134: invokevirtual #139                // Method read:()I
       137: i2b                     
       138: istore        13                
       140: iload         13                
       142: iconst_m1               
       143: if_icmpne     149               
       146: goto          172               
       149: aload         9                 
       151: iload         11                
       153: iinc          11, 1             
       156: iload         13                
       158: bastore                 
       159: iinc          10, -1            
       162: iload         12                
       164: iflt          172               
       167: iload         10                
       169: ifgt          94                
       172: iload         8                 
       174: iload         11                
       176: if_icmpne     184               
       179: aload         9                 
       181: goto          191               
       184: aload         9                 
       186: iload         11                
       188: invokestatic  #153                // Method java/util/Arrays.copyOf:([BI)[B
       191: areturn                 
      LineNumberTable:
        line 348: 0
        line 349: 4
        line 350: 14
        line 351: 18
        line 353: 22
        line 354: 29
        line 356: 35
        line 357: 40
        line 358: 46
        line 360: 52
        line 361: 65
        line 363: 71
        line 364: 81
        line 366: 87
        line 367: 91
        line 370: 94
        line 371: 106
        line 372: 111
        line 373: 118
        line 374: 128
        line 376: 133
        line 377: 140
        line 378: 146
        line 379: 149
        line 380: 159
        line 382: 162
        line 383: 172
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
         140       22    13  b      B
           0      192     0  this   Ljava/io/FileInputStream;
           0      192     1  len    I
          40      152     2  length J
          46      146     4  position J
          52      140     6  size   J
          81      111     8  capacity I
          87      105     9  buf    [B
          91      101    10  remaining I
          94       98    11  nread  I
         106       86    12  n      I
      StackMapTable: number_of_entries = 12
        frame_type = 14 /* same */
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 254 /* append */
          offset_delta = 29
          locals = [long, long, long]
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [class java/io/FileInputStream, int, long, long, long, int, class "[B", int, int]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [int]
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [int]
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 9 /* same */
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class "[B" ]
    Exceptions:
      throws java.io.IOException
  
  public long transferTo(java.io.OutputStream) throws java.io.IOException;
    descriptor: (Ljava/io/OutputStream;)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=10, args_size=2
         0: lconst_0                
         1: lstore_2                
         2: aload_1                 
         3: instanceof    #172                // class java/io/FileOutputStream
         6: ifeq          78                
         9: aload_1                 
        10: checkcast     #172                // class java/io/FileOutputStream
        13: astore        4                 
        15: aload_0                 
        16: invokevirtual #102                // Method isRegularFile:()Z
        19: ifeq          78                
        22: aload_0                 
        23: invokevirtual #174                // Method getChannel:()Ljava/nio/channels/FileChannel;
        26: astore        5                 
        28: aload         5                 
        30: invokevirtual #178                // Method java/nio/channels/FileChannel.position:()J
        33: lstore        6                 
        35: aload         5                 
        37: lload         6                 
        39: ldc2_w        #181                // long 9223372036854775807l
        42: aload         4                 
        44: invokevirtual #183                // Method java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
        47: invokevirtual #184                // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
        50: lstore_2                
        51: lload         6                 
        53: lload_2                 
        54: ladd                    
        55: lstore        8                 
        57: aload         5                 
        59: lload         8                 
        61: invokevirtual #188                // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
        64: pop                     
        65: lload         8                 
        67: aload         5                 
        69: invokevirtual #191                // Method java/nio/channels/FileChannel.size:()J
        72: lcmp                    
        73: iflt          78                
        76: lload_2                 
        77: lreturn                 
        78: lload_2                 
        79: aload_0                 
        80: aload_1                 
        81: invokespecial #194                // Method java/io/InputStream.transferTo:(Ljava/io/OutputStream;)J
        84: invokestatic  #197                // Method java/lang/Math.addExact:(JJ)J
        87: lreturn                 
        88: astore        4                 
        90: ldc2_w        #181                // long 9223372036854775807l
        93: lreturn                 
      Exception table:
          from       to target type
            78       87    88  Class java/lang/ArithmeticException
      LineNumberTable:
        line 391: 0
        line 392: 2
        line 393: 22
        line 394: 28
        line 395: 35
        line 396: 51
        line 397: 57
        line 398: 65
        line 399: 76
        line 403: 78
        line 404: 88
        line 405: 90
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          28       50     5  fc     Ljava/nio/channels/FileChannel;
          35       43     6  pos    J
          57       21     8  newPos J
          15       63     4  fos    Ljava/io/FileOutputStream;
          90        4     4  ignore Ljava/lang/ArithmeticException;
           0       94     0  this   Ljava/io/FileInputStream;
           0       94     1  out    Ljava/io/OutputStream;
           2       92     2  transferred J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 78
          locals = [long]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
    Exceptions:
      throws java.io.IOException
  
  private long length() throws java.io.IOException;
    descriptor: ()J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #202                // Method length0:()J
         4: lreturn                 
      LineNumberTable:
        line 410: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/io/FileInputStream;
    Exceptions:
      throws java.io.IOException
  
  private native long length0() throws java.io.IOException;
    descriptor: ()J
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  private long position() throws java.io.IOException;
    descriptor: ()J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #205                // Method position0:()J
         4: lreturn                 
      LineNumberTable:
        line 415: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/io/FileInputStream;
    Exceptions:
      throws java.io.IOException
  
  private native long position0() throws java.io.IOException;
    descriptor: ()J
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  public long skip(long) throws java.io.IOException;
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=3, args_size=2
         0: aload_0                 
         1: invokevirtual #102                // Method isRegularFile:()Z
         4: ifeq          13                
         7: aload_0                 
         8: lload_1                 
         9: invokevirtual #208                // Method skip0:(J)J
        12: lreturn                 
        13: aload_0                 
        14: lload_1                 
        15: invokespecial #212                // Method java/io/InputStream.skip:(J)J
        18: lreturn                 
      LineNumberTable:
        line 445: 0
        line 446: 7
        line 448: 13
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       19     0  this   Ljava/io/FileInputStream;
           0       19     1  n      J
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */
    Exceptions:
      throws java.io.IOException
  
  private native long skip0(long) throws java.io.IOException;
    descriptor: (J)J
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  public int available() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #215                // Method available0:()I
         4: ireturn                 
      LineNumberTable:
        line 472: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/io/FileInputStream;
    Exceptions:
      throws java.io.IOException
  
  private native int available0() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=1
         0: aload_0                 
         1: getfield      #218                // Field closed:Z
         4: ifeq          8                 
         7: return                  
         8: aload_0                 
         9: getfield      #20                 // Field closeLock:Ljava/lang/Object;
        12: dup                     
        13: astore_1                
        14: monitorenter            
        15: aload_0                 
        16: getfield      #218                // Field closed:Z
        19: ifeq          25                
        22: aload_1                 
        23: monitorexit             
        24: return                  
        25: aload_0                 
        26: iconst_1                
        27: putfield      #218                // Field closed:Z
        30: aload_1                 
        31: monitorexit             
        32: goto          40                
        35: astore_2                
        36: aload_1                 
        37: monitorexit             
        38: aload_2                 
        39: athrow                  
        40: aload_0                 
        41: getfield      #221                // Field channel:Ljava/nio/channels/FileChannel;
        44: astore_1                
        45: aload_1                 
        46: ifnull        53                
        49: aload_1                 
        50: invokevirtual #225                // Method java/nio/channels/FileChannel.close:()V
        53: aload_0                 
        54: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        57: new           #228                // class java/io/FileInputStream$1
        60: dup                     
        61: aload_0                 
        62: invokespecial #230                // Method java/io/FileInputStream$1."<init>":(Ljava/io/FileInputStream;)V
        65: invokevirtual #233                // Method java/io/FileDescriptor.closeAll:(Ljava/io/Closeable;)V
        68: return                  
      Exception table:
          from       to target type
            15       24    35  any
            25       32    35  any
            35       38    35  any
      LineNumberTable:
        line 501: 0
        line 502: 7
        line 504: 8
        line 505: 15
        line 506: 22
        line 508: 25
        line 509: 30
        line 511: 40
        line 512: 45
        line 515: 49
        line 518: 53
        line 523: 68
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       69     0  this   Ljava/io/FileInputStream;
          45       24     1  fc     Ljava/nio/channels/FileChannel;
      StackMapTable: number_of_entries = 5
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [class java/lang/Object]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [class java/nio/channels/FileChannel]
    Exceptions:
      throws java.io.IOException
  
  public final java.io.FileDescriptor getFD() throws java.io.IOException;
    descriptor: ()Ljava/io/FileDescriptor;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
         4: ifnull        12                
         7: aload_0                 
         8: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        11: areturn                 
        12: new           #236                // class java/io/IOException
        15: dup                     
        16: invokespecial #238                // Method java/io/IOException."<init>":()V
        19: athrow                  
      LineNumberTable:
        line 536: 0
        line 537: 7
        line 539: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/io/FileInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
    Exceptions:
      throws java.io.IOException
  
  public java.nio.channels.FileChannel getChannel();
    descriptor: ()Ljava/nio/channels/FileChannel;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=5, args_size=1
         0: aload_0                 
         1: getfield      #221                // Field channel:Ljava/nio/channels/FileChannel;
         4: astore_1                
         5: aload_1                 
         6: ifnonnull     80                
         9: aload_0                 
        10: dup                     
        11: astore_2                
        12: monitorenter            
        13: aload_0                 
        14: getfield      #221                // Field channel:Ljava/nio/channels/FileChannel;
        17: astore_1                
        18: aload_1                 
        19: ifnonnull     68                
        22: aload_0                 
        23: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        26: aload_0                 
        27: getfield      #37                 // Field path:Ljava/lang/String;
        30: iconst_1                
        31: iconst_0                
        32: iconst_0                
        33: iconst_0                
        34: aload_0                 
        35: invokestatic  #239                // Method sun/nio/ch/FileChannelImpl.open:(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
        38: astore_1                
        39: aload_0                 
        40: aload_1                 
        41: putfield      #221                // Field channel:Ljava/nio/channels/FileChannel;
        44: aload_0                 
        45: getfield      #218                // Field closed:Z
        48: ifeq          68                
        51: aload_1                 
        52: invokevirtual #225                // Method java/nio/channels/FileChannel.close:()V
        55: goto          68                
        58: astore_3                
        59: new           #244                // class java/lang/InternalError
        62: dup                     
        63: aload_3                 
        64: invokespecial #246                // Method java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
        67: athrow                  
        68: aload_2                 
        69: monitorexit             
        70: goto          80                
        73: astore        4                 
        75: aload_2                 
        76: monitorexit             
        77: aload         4                 
        79: athrow                  
        80: aload_1                 
        81: areturn                 
      Exception table:
          from       to target type
            51       55    58  Class java/io/IOException
            13       70    73  any
            73       77    73  any
      LineNumberTable:
        line 558: 0
        line 559: 5
        line 560: 9
        line 561: 13
        line 562: 18
        line 563: 22
        line 564: 39
        line 565: 44
        line 569: 51
        line 572: 55
        line 570: 58
        line 571: 59
        line 575: 68
        line 577: 80
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          59        9     3  ioe    Ljava/io/IOException;
           0       82     0  this   Ljava/io/FileInputStream;
           5       77     1  fc     Ljava/nio/channels/FileChannel;
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [class java/io/FileInputStream, class java/nio/channels/FileChannel, class java/lang/Object]
          stack = [class java/io/IOException]
        frame_type = 9 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6
  
  private boolean isRegularFile();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=2, args_size=1
         0: aload_0                 
         1: getfield      #249                // Field isRegularFile:Ljava/lang/Boolean;
         4: astore_1                
         5: aload_1                 
         6: ifnonnull     26                
         9: aload_0                 
        10: aload_0                 
        11: aload_0                 
        12: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        15: invokevirtual #252                // Method isRegularFile0:(Ljava/io/FileDescriptor;)Z
        18: invokestatic  #256                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        21: dup                     
        22: astore_1                
        23: putfield      #249                // Field isRegularFile:Ljava/lang/Boolean;
        26: aload_1                 
        27: invokevirtual #261                // Method java/lang/Boolean.booleanValue:()Z
        30: ireturn                 
      LineNumberTable:
        line 584: 0
        line 585: 5
        line 586: 9
        line 588: 26
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       31     0  this   Ljava/io/FileInputStream;
           5       26     1  isRegularFile Ljava/lang/Boolean;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [class java/lang/Boolean]
  
  private native boolean isRegularFile0(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)Z
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
  
  private static native void initIDs();
    descriptor: ()V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=0, locals=0, args_size=0
         0: invokestatic  #264                // Method initIDs:()V
         3: return                  
      LineNumberTable:
        line 595: 0
        line 596: 3
}
SourceFile: "FileInputStream.java"
NestMembers:
  java/io/FileInputStream$1
InnerClasses:
  #228;                                       // class java/io/FileInputStream$1
