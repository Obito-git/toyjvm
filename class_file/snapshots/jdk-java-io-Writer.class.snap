---
source: class_file/src/lib.rs
expression: display
---
public abstract class java.io.Writer implements java.lang.Appendable, java.io.Closeable, java.io.Flushable
  minor version: 0
  major version: 68
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #11                      //java/io/Writer
  super_class: #8                      //java/lang/Object
  interfaces: 3, fields: 3, methods: 16, attributes: 3
Constant pool:
    #1 = Class              #2               // java/io/Writer$1
    #2 = Utf8               java/io/Writer$1
    #3 = Methodref          #1.#4            // java/io/Writer$1."<init>":()V
    #4 = NameAndType        #5:#6            // "<init>":()V
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Methodref          #8.#4            // java/lang/Object."<init>":()V
    #8 = Class              #9               // java/lang/Object
    #9 = Utf8               java/lang/Object
   #10 = Fieldref           #11.#12          // java/io/Writer.lock:Ljava/lang/Object;
   #11 = Class              #13              // java/io/Writer
   #12 = NameAndType        #14:#15          // lock:Ljava/lang/Object;
   #13 = Utf8               java/io/Writer
   #14 = Utf8               lock
   #15 = Utf8               Ljava/lang/Object;
   #16 = Class              #17              // java/lang/NullPointerException
   #17 = Utf8               java/lang/NullPointerException
   #18 = Methodref          #16.#4           // java/lang/NullPointerException."<init>":()V
   #19 = Fieldref           #11.#20          // java/io/Writer.writeBuffer:[C
   #20 = NameAndType        #21:#22          // writeBuffer:[C
   #21 = Utf8               writeBuffer
   #22 = Utf8               [C
   #23 = Methodref          #11.#24          // java/io/Writer.write:([CII)V
   #24 = NameAndType        #25:#26          // write:([CII)V
   #25 = Utf8               write
   #26 = Utf8               ([CII)V
   #27 = Methodref          #28.#29          // java/lang/String.length:()I
   #28 = Class              #30              // java/lang/String
   #29 = NameAndType        #31:#32          // length:()I
   #30 = Utf8               java/lang/String
   #31 = Utf8               length
   #32 = Utf8               ()I
   #33 = Methodref          #11.#34          // java/io/Writer.write:(Ljava/lang/String;II)V
   #34 = NameAndType        #25:#35          // write:(Ljava/lang/String;II)V
   #35 = Utf8               (Ljava/lang/String;II)V
   #36 = Methodref          #28.#37          // java/lang/String.getChars:(II[CI)V
   #37 = NameAndType        #38:#39          // getChars:(II[CI)V
   #38 = Utf8               getChars
   #39 = Utf8               (II[CI)V
   #40 = Methodref          #28.#41          // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #41 = NameAndType        #42:#43          // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #42 = Utf8               valueOf
   #43 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #44 = Methodref          #11.#45          // java/io/Writer.write:(Ljava/lang/String;)V
   #45 = NameAndType        #25:#46          // write:(Ljava/lang/String;)V
   #46 = Utf8               (Ljava/lang/String;)V
   #47 = String             #48              // null
   #48 = Utf8               null
   #49 = InterfaceMethodref #50.#51          // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
   #50 = Class              #52              // java/lang/CharSequence
   #51 = NameAndType        #53:#54          // subSequence:(II)Ljava/lang/CharSequence;
   #52 = Utf8               java/lang/CharSequence
   #53 = Utf8               subSequence
   #54 = Utf8               (II)Ljava/lang/CharSequence;
   #55 = Methodref          #11.#56          // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #56 = NameAndType        #57:#58          // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #57 = Utf8               append
   #58 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;
   #59 = Methodref          #11.#60          // java/io/Writer.write:(I)V
   #60 = NameAndType        #25:#61          // write:(I)V
   #61 = Utf8               (I)V
   #62 = Methodref          #11.#63          // java/io/Writer.append:(C)Ljava/io/Writer;
   #63 = NameAndType        #57:#64          // append:(C)Ljava/io/Writer;
   #64 = Utf8               (C)Ljava/io/Writer;
   #65 = Methodref          #11.#66          // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #66 = NameAndType        #57:#67          // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #67 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #68 = Class              #69              // java/lang/Appendable
   #69 = Utf8               java/lang/Appendable
   #70 = Class              #71              // java/io/Closeable
   #71 = Utf8               java/io/Closeable
   #72 = Class              #73              // java/io/Flushable
   #73 = Utf8               java/io/Flushable
   #74 = Utf8               WRITE_BUFFER_SIZE
   #75 = Utf8               I
   #76 = Utf8               ConstantValue
   #77 = Integer            1024
   #78 = Utf8               nullWriter
   #79 = Utf8               ()Ljava/io/Writer;
   #80 = Utf8               Code
   #81 = Utf8               LineNumberTable
   #82 = Utf8               LocalVariableTable
   #83 = Utf8               this
   #84 = Utf8               Ljava/io/Writer;
   #85 = Utf8               (Ljava/lang/Object;)V
   #86 = Utf8               StackMapTable
   #87 = Utf8               c
   #88 = Class              #89              // java/lang/Throwable
   #89 = Utf8               java/lang/Throwable
   #90 = Utf8               Exceptions
   #91 = Class              #92              // java/io/IOException
   #92 = Utf8               java/io/IOException
   #93 = Utf8               ([C)V
   #94 = Utf8               cbuf
   #95 = Utf8               str
   #96 = Utf8               Ljava/lang/String;
   #97 = Utf8               off
   #98 = Utf8               len
   #99 = Class              #22              // "[C"
  #100 = Utf8               csq
  #101 = Utf8               Ljava/lang/CharSequence;
  #102 = Utf8               start
  #103 = Utf8               end
  #104 = Utf8               C
  #105 = Utf8               flush
  #106 = Utf8               close
  #107 = Utf8               (C)Ljava/lang/Appendable;
  #108 = Utf8               MethodParameters
  #109 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
  #110 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
  #111 = Utf8               SourceFile
  #112 = Utf8               Writer.java
  #113 = Utf8               NestMembers
  #114 = Utf8               InnerClasses
{
  private char[] writeBuffer;
    descriptor: [C
    flags: (0x0002) ACC_PRIVATE
  
  private static final int WRITE_BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024
  
  protected java.lang.Object lock;
    descriptor: Ljava/lang/Object;
    flags: (0x0004) ACC_PROTECTED
  
  public static java.io.Writer nullWriter();
    descriptor: ()Ljava/io/Writer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: new           #1                  // class java/io/Writer$1
         3: dup                     
         4: invokespecial #3                  // Method java/io/Writer$1."<init>":()V
         7: areturn                 
      LineNumberTable:
        line 82: 0
  
  protected java.io.Writer();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #7                  // Method java/lang/Object."<init>":()V
         4: aload_0                 
         5: aload_0                 
         6: putfield      #10                 // Field lock:Ljava/lang/Object;
         9: return                  
      LineNumberTable:
        line 160: 0
        line 161: 4
        line 162: 9
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/io/Writer;
  
  protected java.io.Writer(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #7                  // Method java/lang/Object."<init>":()V
         4: aload_1                 
         5: ifnonnull     16                
         8: new           #16                 // class java/lang/NullPointerException
        11: dup                     
        12: invokespecial #18                 // Method java/lang/NullPointerException."<init>":()V
        15: athrow                  
        16: aload_0                 
        17: aload_1                 
        18: putfield      #10                 // Field lock:Ljava/lang/Object;
        21: return                  
      LineNumberTable:
        line 171: 0
        line 172: 4
        line 173: 8
        line 175: 16
        line 176: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  this   Ljava/io/Writer;
           0       22     1  lock   Ljava/lang/Object;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [class java/io/Writer, class java/lang/Object]
          stack = []
  
  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=4, args_size=2
         0: aload_0                 
         1: getfield      #10                 // Field lock:Ljava/lang/Object;
         4: dup                     
         5: astore_2                
         6: monitorenter            
         7: aload_0                 
         8: getfield      #19                 // Field writeBuffer:[C
        11: ifnonnull     23                
        14: aload_0                 
        15: sipush        1024              
        18: newarray      char              
        20: putfield      #19                 // Field writeBuffer:[C
        23: aload_0                 
        24: getfield      #19                 // Field writeBuffer:[C
        27: iconst_0                
        28: iload_1                 
        29: i2c                     
        30: castore                 
        31: aload_0                 
        32: aload_0                 
        33: getfield      #19                 // Field writeBuffer:[C
        36: iconst_0                
        37: iconst_1                
        38: invokevirtual #23                 // Method write:([CII)V
        41: aload_2                 
        42: monitorexit             
        43: goto          51                
        46: astore_3                
        47: aload_2                 
        48: monitorexit             
        49: aload_3                 
        50: athrow                  
        51: return                  
      Exception table:
          from       to target type
             7       43    46  any
            46       49    46  any
      LineNumberTable:
        line 193: 0
        line 194: 7
        line 195: 14
        line 197: 23
        line 198: 31
        line 199: 41
        line 200: 51
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       52     0  this   Ljava/io/Writer;
           0       52     1  c      I
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [class java/lang/Object]
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
    Exceptions:
      throws java.io.IOException
  
  public void write(char[]) throws java.io.IOException;
    descriptor: ([C)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: aload_1                 
         4: arraylength             
         5: invokevirtual #23                 // Method write:([CII)V
         8: return                  
      LineNumberTable:
        line 212: 0
        line 213: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/io/Writer;
           0        9     1  cbuf   [C
    Exceptions:
      throws java.io.IOException
  
  public abstract void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException
  
  public void write(java.lang.String) throws java.io.IOException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: aload_1                 
         4: invokevirtual #27                 // Method java/lang/String.length:()I
         7: invokevirtual #33                 // Method write:(Ljava/lang/String;II)V
        10: return                  
      LineNumberTable:
        line 248: 0
        line 249: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  this   Ljava/io/Writer;
           0       11     1  str    Ljava/lang/String;
    Exceptions:
      throws java.io.IOException
  
  public void write(java.lang.String, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/String;II)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=7, args_size=4
         0: aload_0                 
         1: getfield      #10                 // Field lock:Ljava/lang/Object;
         4: dup                     
         5: astore        4                 
         7: monitorenter            
         8: iload_3                 
         9: sipush        1024              
        12: if_icmpgt     40                
        15: aload_0                 
        16: getfield      #19                 // Field writeBuffer:[C
        19: ifnonnull     31                
        22: aload_0                 
        23: sipush        1024              
        26: newarray      char              
        28: putfield      #19                 // Field writeBuffer:[C
        31: aload_0                 
        32: getfield      #19                 // Field writeBuffer:[C
        35: astore        5                 
        37: goto          45                
        40: iload_3                 
        41: newarray      char              
        43: astore        5                 
        45: aload_1                 
        46: iload_2                 
        47: iload_2                 
        48: iload_3                 
        49: iadd                    
        50: aload         5                 
        52: iconst_0                
        53: invokevirtual #36                 // Method java/lang/String.getChars:(II[CI)V
        56: aload_0                 
        57: aload         5                 
        59: iconst_0                
        60: iload_3                 
        61: invokevirtual #23                 // Method write:([CII)V
        64: aload         4                 
        66: monitorexit             
        67: goto          78                
        70: astore        6                 
        72: aload         4                 
        74: monitorexit             
        75: aload         6                 
        77: athrow                  
        78: return                  
      Exception table:
          from       to target type
             8       67    70  any
            70       75    70  any
      LineNumberTable:
        line 278: 0
        line 280: 8
        line 281: 15
        line 282: 22
        line 284: 31
        line 286: 40
        line 288: 45
        line 289: 56
        line 290: 64
        line 291: 78
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          37        3     5  cbuf   [C
          45       19     5  cbuf   [C
           0       79     0  this   Ljava/io/Writer;
           0       79     1  str    Ljava/lang/String;
           0       79     2  off    I
           0       79     3  len    I
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [class java/lang/Object]
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 4
          locals = [class "[C"]
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [class java/io/Writer, class java/lang/String, int, int, class java/lang/Object]
          stack = [class java/lang/Throwable]
        frame_type = 250 /* chop */
          offset_delta = 7
    Exceptions:
      throws java.io.IOException
  
  public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokestatic  #40                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
         5: invokevirtual #44                 // Method write:(Ljava/lang/String;)V
         8: aload_0                 
         9: areturn                 
      LineNumberTable:
        line 323: 0
        line 324: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/io/Writer;
           0       10     1  csq    Ljava/lang/CharSequence;
    Exceptions:
      throws java.io.IOException
  
  public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_1                 
         1: ifnonnull     7                 
         4: ldc           #47                 // String null
         6: astore_1                
         7: aload_0                 
         8: aload_1                 
         9: iload_2                 
        10: iload_3                 
        11: invokeinterface #49, 3              // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
        16: invokevirtual #55                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
        19: areturn                 
      LineNumberTable:
        line 365: 0
        line 366: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/io/Writer;
           0       20     1  csq    Ljava/lang/CharSequence;
           0       20     2  start  I
           0       20     3  end    I
      StackMapTable: number_of_entries = 1
        frame_type = 7 /* same */
    Exceptions:
      throws java.io.IOException
  
  public java.io.Writer append(char) throws java.io.IOException;
    descriptor: (C)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokevirtual #59                 // Method write:(I)V
         5: aload_0                 
         6: areturn                 
      LineNumberTable:
        line 390: 0
        line 391: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/io/Writer;
           0        7     1  c      C
    Exceptions:
      throws java.io.IOException
  
  public abstract void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException
  
  public abstract void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.io.IOException
  
  public java.lang.Appendable append(char) throws java.io.IOException;
    descriptor: (C)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokevirtual #62                 // Method append:(C)Ljava/io/Writer;
         5: areturn                 
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/io/Writer;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: iload_2                 
         3: iload_3                 
         4: invokevirtual #65                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
         7: areturn                 
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/Writer;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
      <no name>                        synthetic 
      <no name>                        synthetic 
  
  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokevirtual #55                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
         5: areturn                 
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/io/Writer;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
}
SourceFile: "Writer.java"
NestMembers:
  java/io/Writer$1
InnerClasses:
  #1;                                         // class java/io/Writer$1
