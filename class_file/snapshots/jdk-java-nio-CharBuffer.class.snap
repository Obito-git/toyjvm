---
source: class_file/src/lib.rs
expression: display
---
public abstract class java.nio.CharBuffer extends java.nio.Buffer implements java.lang.Comparable<java.nio.CharBuffer>, java.lang.Appendable, java.lang.CharSequence, java.lang.Readable
  minor version: 0
  major version: 68
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #8                       //java/nio/CharBuffer
  super_class: #2                      //java/nio/Buffer
  interfaces: 4, fields: 5, methods: 84, attributes: 5
Constant pool:
    #1 = Methodref          #2.#3            // java/nio/Buffer."<init>":(IIIILjava/lang/foreign/MemorySegment;)V
    #2 = Class              #4               // java/nio/Buffer
    #3 = NameAndType        #5:#6            // "<init>":(IIIILjava/lang/foreign/MemorySegment;)V
    #4 = Utf8               java/nio/Buffer
    #5 = Utf8               <init>
    #6 = Utf8               (IIIILjava/lang/foreign/MemorySegment;)V
    #7 = Fieldref           #8.#9            // java/nio/CharBuffer.hb:[C
    #8 = Class              #10              // java/nio/CharBuffer
    #9 = NameAndType        #11:#12          // hb:[C
   #10 = Utf8               java/nio/CharBuffer
   #11 = Utf8               hb
   #12 = Utf8               [C
   #13 = Fieldref           #8.#14           // java/nio/CharBuffer.offset:I
   #14 = NameAndType        #15:#16          // offset:I
   #15 = Utf8               offset
   #16 = Utf8               I
   #17 = Methodref          #8.#18           // java/nio/CharBuffer."<init>":(IIII[CILjava/lang/foreign/MemorySegment;)V
   #18 = NameAndType        #5:#19           // "<init>":(IIII[CILjava/lang/foreign/MemorySegment;)V
   #19 = Utf8               (IIII[CILjava/lang/foreign/MemorySegment;)V
   #20 = Methodref          #2.#21           // java/nio/Buffer."<init>":(JILjava/lang/foreign/MemorySegment;)V
   #21 = NameAndType        #5:#22           // "<init>":(JILjava/lang/foreign/MemorySegment;)V
   #22 = Utf8               (JILjava/lang/foreign/MemorySegment;)V
   #23 = Methodref          #8.#24           // java/nio/CharBuffer.createCapacityException:(I)Ljava/lang/IllegalArgumentException;
   #24 = NameAndType        #25:#26          // createCapacityException:(I)Ljava/lang/IllegalArgumentException;
   #25 = Utf8               createCapacityException
   #26 = Utf8               (I)Ljava/lang/IllegalArgumentException;
   #27 = Class              #28              // java/nio/HeapCharBuffer
   #28 = Utf8               java/nio/HeapCharBuffer
   #29 = Methodref          #27.#30          // java/nio/HeapCharBuffer."<init>":(IILjava/lang/foreign/MemorySegment;)V
   #30 = NameAndType        #5:#31           // "<init>":(IILjava/lang/foreign/MemorySegment;)V
   #31 = Utf8               (IILjava/lang/foreign/MemorySegment;)V
   #32 = Methodref          #27.#33          // java/nio/HeapCharBuffer."<init>":([CIILjava/lang/foreign/MemorySegment;)V
   #33 = NameAndType        #5:#34           // "<init>":([CIILjava/lang/foreign/MemorySegment;)V
   #34 = Utf8               ([CIILjava/lang/foreign/MemorySegment;)V
   #35 = Class              #36              // java/lang/IllegalArgumentException
   #36 = Utf8               java/lang/IllegalArgumentException
   #37 = Class              #38              // java/lang/IndexOutOfBoundsException
   #38 = Utf8               java/lang/IndexOutOfBoundsException
   #39 = Methodref          #37.#40          // java/lang/IndexOutOfBoundsException."<init>":()V
   #40 = NameAndType        #5:#41           // "<init>":()V
   #41 = Utf8               ()V
   #42 = Methodref          #8.#43           // java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
   #43 = NameAndType        #44:#45          // wrap:([CII)Ljava/nio/CharBuffer;
   #44 = Utf8               wrap
   #45 = Utf8               ([CII)Ljava/nio/CharBuffer;
   #46 = Methodref          #8.#47           // java/nio/CharBuffer.limit:()I
   #47 = NameAndType        #48:#49          // limit:()I
   #48 = Utf8               limit
   #49 = Utf8               ()I
   #50 = Methodref          #8.#51           // java/nio/CharBuffer.position:()I
   #51 = NameAndType        #52:#49          // position:()I
   #52 = Utf8               position
   #53 = Fieldref           #8.#54           // java/nio/CharBuffer.$assertionsDisabled:Z
   #54 = NameAndType        #55:#56          // $assertionsDisabled:Z
   #55 = Utf8               $assertionsDisabled
   #56 = Utf8               Z
   #57 = Class              #58              // java/lang/AssertionError
   #58 = Utf8               java/lang/AssertionError
   #59 = Methodref          #57.#40          // java/lang/AssertionError."<init>":()V
   #60 = Methodref          #8.#61           // java/nio/CharBuffer.remaining:()I
   #61 = NameAndType        #62:#49          // remaining:()I
   #62 = Utf8               remaining
   #63 = Methodref          #64.#65          // java/lang/Math.min:(II)I
   #64 = Class              #66              // java/lang/Math
   #65 = NameAndType        #67:#68          // min:(II)I
   #66 = Utf8               java/lang/Math
   #67 = Utf8               min
   #68 = Utf8               (II)I
   #69 = Methodref          #8.#70           // java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;
   #70 = NameAndType        #48:#71          // limit:(I)Ljava/nio/CharBuffer;
   #71 = Utf8               (I)Ljava/nio/CharBuffer;
   #72 = Methodref          #8.#73           // java/nio/CharBuffer.put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
   #73 = NameAndType        #74:#75          // put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
   #74 = Utf8               put
   #75 = Utf8               (Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
   #76 = Class              #77              // java/nio/StringCharBuffer
   #77 = Utf8               java/nio/StringCharBuffer
   #78 = Methodref          #76.#79          // java/nio/StringCharBuffer."<init>":(Ljava/lang/CharSequence;II)V
   #79 = NameAndType        #5:#80           // "<init>":(Ljava/lang/CharSequence;II)V
   #80 = Utf8               (Ljava/lang/CharSequence;II)V
   #81 = InterfaceMethodref #82.#83          // java/lang/CharSequence.length:()I
   #82 = Class              #84              // java/lang/CharSequence
   #83 = NameAndType        #85:#49          // length:()I
   #84 = Utf8               java/lang/CharSequence
   #85 = Utf8               length
   #86 = Methodref          #8.#87           // java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
   #87 = NameAndType        #44:#88          // wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
   #88 = Utf8               (Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
   #89 = Methodref          #90.#91          // java/util/Objects.checkFromIndexSize:(III)I
   #90 = Class              #92              // java/util/Objects
   #91 = NameAndType        #93:#94          // checkFromIndexSize:(III)I
   #92 = Utf8               java/util/Objects
   #93 = Utf8               checkFromIndexSize
   #94 = Utf8               (III)I
   #95 = Class              #96              // java/nio/BufferUnderflowException
   #96 = Utf8               java/nio/BufferUnderflowException
   #97 = Methodref          #95.#40          // java/nio/BufferUnderflowException."<init>":()V
   #98 = Methodref          #8.#99           // java/nio/CharBuffer.getArray:(I[CII)Ljava/nio/CharBuffer;
   #99 = NameAndType        #100:#101        // getArray:(I[CII)Ljava/nio/CharBuffer;
  #100 = Utf8               getArray
  #101 = Utf8               (I[CII)Ljava/nio/CharBuffer;
  #102 = Methodref          #8.#103          // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;
  #103 = NameAndType        #52:#71          // position:(I)Ljava/nio/CharBuffer;
  #104 = Methodref          #8.#105          // java/nio/CharBuffer.get:([CII)Ljava/nio/CharBuffer;
  #105 = NameAndType        #106:#45         // get:([CII)Ljava/nio/CharBuffer;
  #106 = Utf8               get
  #107 = Methodref          #8.#108          // java/nio/CharBuffer.get:(I[CII)Ljava/nio/CharBuffer;
  #108 = NameAndType        #106:#101        // get:(I[CII)Ljava/nio/CharBuffer;
  #109 = Methodref          #8.#110          // java/nio/CharBuffer.isAddressable:()Z
  #110 = NameAndType        #111:#112        // isAddressable:()Z
  #111 = Utf8               isAddressable
  #112 = Utf8               ()Z
  #113 = Class              #114             // java/nio/Bits
  #114 = Utf8               java/nio/Bits
  #115 = Long               6l
  #117 = Fieldref           #8.#118          // java/nio/CharBuffer.address:J
  #118 = NameAndType        #119:#120        // address:J
  #119 = Utf8               address
  #120 = Utf8               J
  #121 = Fieldref           #8.#122          // java/nio/CharBuffer.ARRAY_BASE_OFFSET:J
  #122 = NameAndType        #123:#120        // ARRAY_BASE_OFFSET:J
  #123 = Utf8               ARRAY_BASE_OFFSET
  #124 = Methodref          #8.#125          // java/nio/CharBuffer.order:()Ljava/nio/ByteOrder;
  #125 = NameAndType        #126:#127        // order:()Ljava/nio/ByteOrder;
  #126 = Utf8               order
  #127 = Utf8               ()Ljava/nio/ByteOrder;
  #128 = Methodref          #129.#130        // java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
  #129 = Class              #131             // java/nio/ByteOrder
  #130 = NameAndType        #132:#127        // nativeOrder:()Ljava/nio/ByteOrder;
  #131 = Utf8               java/nio/ByteOrder
  #132 = Utf8               nativeOrder
  #133 = Fieldref           #8.#134          // java/nio/CharBuffer.SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
  #134 = NameAndType        #135:#136        // SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
  #135 = Utf8               SCOPED_MEMORY_ACCESS
  #136 = Utf8               Ljdk/internal/misc/ScopedMemoryAccess;
  #137 = Methodref          #8.#138          // java/nio/CharBuffer.session:()Ljdk/internal/foreign/MemorySessionImpl;
  #138 = NameAndType        #139:#140        // session:()Ljdk/internal/foreign/MemorySessionImpl;
  #139 = Utf8               session
  #140 = Utf8               ()Ljdk/internal/foreign/MemorySessionImpl;
  #141 = Methodref          #8.#142          // java/nio/CharBuffer.base:()Ljava/lang/Object;
  #142 = NameAndType        #143:#144        // base:()Ljava/lang/Object;
  #143 = Utf8               base
  #144 = Utf8               ()Ljava/lang/Object;
  #145 = Class              #146             // java/lang/Character
  #146 = Utf8               java/lang/Character
  #147 = Long               2l
  #149 = Methodref          #150.#151        // jdk/internal/misc/ScopedMemoryAccess.copySwapMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
  #150 = Class              #152             // jdk/internal/misc/ScopedMemoryAccess
  #151 = NameAndType        #153:#154        // copySwapMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
  #152 = Utf8               jdk/internal/misc/ScopedMemoryAccess
  #153 = Utf8               copySwapMemory
  #154 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
  #155 = Methodref          #150.#156        // jdk/internal/misc/ScopedMemoryAccess.copyMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
  #156 = NameAndType        #157:#158        // copyMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
  #157 = Utf8               copyMemory
  #158 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
  #159 = Methodref          #160.#161        // java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
  #160 = Class              #162             // java/lang/ref/Reference
  #161 = NameAndType        #163:#164        // reachabilityFence:(Ljava/lang/Object;)V
  #162 = Utf8               java/lang/ref/Reference
  #163 = Utf8               reachabilityFence
  #164 = Utf8               (Ljava/lang/Object;)V
  #165 = Methodref          #8.#166          // java/nio/CharBuffer.get:(I)C
  #166 = NameAndType        #106:#167        // get:(I)C
  #167 = Utf8               (I)C
  #168 = Methodref          #8.#169          // java/nio/CharBuffer.createSameBufferException:()Ljava/lang/IllegalArgumentException;
  #169 = NameAndType        #170:#171        // createSameBufferException:()Ljava/lang/IllegalArgumentException;
  #170 = Utf8               createSameBufferException
  #171 = Utf8               ()Ljava/lang/IllegalArgumentException;
  #172 = Methodref          #8.#173          // java/nio/CharBuffer.isReadOnly:()Z
  #173 = NameAndType        #174:#112        // isReadOnly:()Z
  #174 = Utf8               isReadOnly
  #175 = Class              #176             // java/nio/ReadOnlyBufferException
  #176 = Utf8               java/nio/ReadOnlyBufferException
  #177 = Methodref          #175.#40         // java/nio/ReadOnlyBufferException."<init>":()V
  #178 = Class              #179             // java/nio/BufferOverflowException
  #179 = Utf8               java/nio/BufferOverflowException
  #180 = Methodref          #178.#40         // java/nio/BufferOverflowException."<init>":()V
  #181 = Methodref          #8.#182          // java/nio/CharBuffer.putBuffer:(ILjava/nio/CharBuffer;II)V
  #182 = NameAndType        #183:#184        // putBuffer:(ILjava/nio/CharBuffer;II)V
  #183 = Utf8               putBuffer
  #184 = Utf8               (ILjava/nio/CharBuffer;II)V
  #185 = Methodref          #8.#186          // java/nio/CharBuffer.isDirect:()Z
  #186 = NameAndType        #187:#112        // isDirect:()Z
  #187 = Utf8               isDirect
  #188 = Methodref          #189.#190        // java/lang/Class.isInstance:(Ljava/lang/Object;)Z
  #189 = Class              #191             // java/lang/Class
  #190 = NameAndType        #192:#193        // isInstance:(Ljava/lang/Object;)Z
  #191 = Utf8               java/lang/Class
  #192 = Utf8               isInstance
  #193 = Utf8               (Ljava/lang/Object;)Z
  #194 = Methodref          #8.#195          // java/nio/CharBuffer.put:(IC)Ljava/nio/CharBuffer;
  #195 = NameAndType        #74:#196         // put:(IC)Ljava/nio/CharBuffer;
  #196 = Utf8               (IC)Ljava/nio/CharBuffer;
  #197 = Methodref          #8.#198          // java/nio/CharBuffer.putArray:(I[CII)Ljava/nio/CharBuffer;
  #198 = NameAndType        #199:#101        // putArray:(I[CII)Ljava/nio/CharBuffer;
  #199 = Utf8               putArray
  #200 = Methodref          #8.#201          // java/nio/CharBuffer.put:([CII)Ljava/nio/CharBuffer;
  #201 = NameAndType        #74:#45          // put:([CII)Ljava/nio/CharBuffer;
  #202 = Methodref          #8.#203          // java/nio/CharBuffer.put:(I[CII)Ljava/nio/CharBuffer;
  #203 = NameAndType        #74:#101         // put:(I[CII)Ljava/nio/CharBuffer;
  #204 = Methodref          #205.#83         // java/lang/String.length:()I
  #205 = Class              #206             // java/lang/String
  #206 = Utf8               java/lang/String
  #207 = Methodref          #205.#208        // java/lang/String.charAt:(I)C
  #208 = NameAndType        #209:#167        // charAt:(I)C
  #209 = Utf8               charAt
  #210 = Methodref          #8.#211          // java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
  #211 = NameAndType        #74:#212         // put:(C)Ljava/nio/CharBuffer;
  #212 = Utf8               (C)Ljava/nio/CharBuffer;
  #213 = Methodref          #8.#214          // java/nio/CharBuffer.put:(Ljava/lang/String;II)Ljava/nio/CharBuffer;
  #214 = NameAndType        #74:#215         // put:(Ljava/lang/String;II)Ljava/nio/CharBuffer;
  #215 = Utf8               (Ljava/lang/String;II)Ljava/nio/CharBuffer;
  #216 = Fieldref           #8.#217          // java/nio/CharBuffer.isReadOnly:Z
  #217 = NameAndType        #174:#56         // isReadOnly:Z
  #218 = Class              #219             // java/lang/UnsupportedOperationException
  #219 = Utf8               java/lang/UnsupportedOperationException
  #220 = Methodref          #218.#40         // java/lang/UnsupportedOperationException."<init>":()V
  #221 = Methodref          #2.#222          // java/nio/Buffer.position:(I)Ljava/nio/Buffer;
  #222 = NameAndType        #52:#223         // position:(I)Ljava/nio/Buffer;
  #223 = Utf8               (I)Ljava/nio/Buffer;
  #224 = Methodref          #2.#225          // java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
  #225 = NameAndType        #48:#223         // limit:(I)Ljava/nio/Buffer;
  #226 = Methodref          #2.#227          // java/nio/Buffer.mark:()Ljava/nio/Buffer;
  #227 = NameAndType        #228:#229        // mark:()Ljava/nio/Buffer;
  #228 = Utf8               mark
  #229 = Utf8               ()Ljava/nio/Buffer;
  #230 = Methodref          #2.#231          // java/nio/Buffer.reset:()Ljava/nio/Buffer;
  #231 = NameAndType        #232:#229        // reset:()Ljava/nio/Buffer;
  #232 = Utf8               reset
  #233 = Methodref          #2.#234          // java/nio/Buffer.clear:()Ljava/nio/Buffer;
  #234 = NameAndType        #235:#229        // clear:()Ljava/nio/Buffer;
  #235 = Utf8               clear
  #236 = Methodref          #2.#237          // java/nio/Buffer.flip:()Ljava/nio/Buffer;
  #237 = NameAndType        #238:#229        // flip:()Ljava/nio/Buffer;
  #238 = Utf8               flip
  #239 = Methodref          #2.#240          // java/nio/Buffer.rewind:()Ljava/nio/Buffer;
  #240 = NameAndType        #241:#229        // rewind:()Ljava/nio/Buffer;
  #241 = Utf8               rewind
  #242 = Methodref          #243.#244        // java/nio/BufferMismatch.mismatch:(Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I
  #243 = Class              #245             // java/nio/BufferMismatch
  #244 = NameAndType        #246:#247        // mismatch:(Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I
  #245 = Utf8               java/nio/BufferMismatch
  #246 = Utf8               mismatch
  #247 = Utf8               (Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I
  #248 = Methodref          #8.#249          // java/nio/CharBuffer.compare:(CC)I
  #249 = NameAndType        #250:#251        // compare:(CC)I
  #250 = Utf8               compare
  #251 = Utf8               (CC)I
  #252 = Methodref          #145.#249        // java/lang/Character.compare:(CC)I
  #253 = Methodref          #8.#254          // java/nio/CharBuffer.toString:(II)Ljava/lang/String;
  #254 = NameAndType        #255:#256        // toString:(II)Ljava/lang/String;
  #255 = Utf8               toString
  #256 = Utf8               (II)Ljava/lang/String;
  #257 = Methodref          #8.#258          // java/nio/CharBuffer.checkIndex:(II)I
  #258 = NameAndType        #259:#68         // checkIndex:(II)I
  #259 = Utf8               checkIndex
  #260 = String             #261             // null
  #261 = Utf8               null
  #262 = Methodref          #8.#263          // java/nio/CharBuffer.put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
  #263 = NameAndType        #74:#264         // put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
  #264 = Utf8               (Ljava/lang/String;)Ljava/nio/CharBuffer;
  #265 = InterfaceMethodref #82.#266         // java/lang/CharSequence.toString:()Ljava/lang/String;
  #266 = NameAndType        #255:#267        // toString:()Ljava/lang/String;
  #267 = Utf8               ()Ljava/lang/String;
  #268 = Methodref          #90.#269         // java/util/Objects.checkFromToIndex:(III)I
  #269 = NameAndType        #270:#94         // checkFromToIndex:(III)I
  #270 = Utf8               checkFromToIndex
  #271 = Methodref          #8.#272          // java/nio/CharBuffer.put:(ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
  #272 = NameAndType        #74:#273         // put:(ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
  #273 = Utf8               (ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
  #274 = InterfaceMethodref #82.#275         // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
  #275 = NameAndType        #276:#277        // subSequence:(II)Ljava/lang/CharSequence;
  #276 = Utf8               subSequence
  #277 = Utf8               (II)Ljava/lang/CharSequence;
  #278 = Methodref          #279.#280        // java/lang/Integer.numberOfTrailingZeros:(I)I
  #279 = Class              #281             // java/lang/Integer
  #280 = NameAndType        #282:#283        // numberOfTrailingZeros:(I)I
  #281 = Utf8               java/lang/Integer
  #282 = Utf8               numberOfTrailingZeros
  #283 = Utf8               (I)I
  #284 = Methodref          #285.#286        // jdk/internal/foreign/SegmentFactories.arrayOfCharSegment:(Ljava/lang/Object;JJZLjdk/internal/foreign/MemorySessionImpl;)Ljdk/internal/foreign/HeapMemorySegmentImpl$OfChar;
  #285 = Class              #287             // jdk/internal/foreign/SegmentFactories
  #286 = NameAndType        #288:#289        // arrayOfCharSegment:(Ljava/lang/Object;JJZLjdk/internal/foreign/MemorySessionImpl;)Ljdk/internal/foreign/HeapMemorySegmentImpl$OfChar;
  #287 = Utf8               jdk/internal/foreign/SegmentFactories
  #288 = Utf8               arrayOfCharSegment
  #289 = Utf8               (Ljava/lang/Object;JJZLjdk/internal/foreign/MemorySessionImpl;)Ljdk/internal/foreign/HeapMemorySegmentImpl$OfChar;
  #290 = InvokeDynamic      #0:#291          // #0:get:(Ljava/nio/CharBuffer;)Ljava/util/function/Supplier;
  #291 = NameAndType        #106:#292        // get:(Ljava/nio/CharBuffer;)Ljava/util/function/Supplier;
  #292 = Utf8               (Ljava/nio/CharBuffer;)Ljava/util/function/Supplier;
  #293 = Methodref          #294.#295        // java/util/stream/StreamSupport.intStream:(Ljava/util/function/Supplier;IZ)Ljava/util/stream/IntStream;
  #294 = Class              #296             // java/util/stream/StreamSupport
  #295 = NameAndType        #297:#298        // intStream:(Ljava/util/function/Supplier;IZ)Ljava/util/stream/IntStream;
  #296 = Utf8               java/util/stream/StreamSupport
  #297 = Utf8               intStream
  #298 = Utf8               (Ljava/util/function/Supplier;IZ)Ljava/util/stream/IntStream;
  #299 = Methodref          #8.#300          // java/nio/CharBuffer.duplicate:()Ljava/nio/CharBuffer;
  #300 = NameAndType        #301:#302        // duplicate:()Ljava/nio/CharBuffer;
  #301 = Utf8               duplicate
  #302 = Utf8               ()Ljava/nio/CharBuffer;
  #303 = Methodref          #8.#304          // java/nio/CharBuffer.slice:(II)Ljava/nio/CharBuffer;
  #304 = NameAndType        #305:#306        // slice:(II)Ljava/nio/CharBuffer;
  #305 = Utf8               slice
  #306 = Utf8               (II)Ljava/nio/CharBuffer;
  #307 = Methodref          #8.#308          // java/nio/CharBuffer.slice:()Ljava/nio/CharBuffer;
  #308 = NameAndType        #305:#302        // slice:()Ljava/nio/CharBuffer;
  #309 = Methodref          #8.#310          // java/nio/CharBuffer.array:()[C
  #310 = NameAndType        #311:#312        // array:()[C
  #311 = Utf8               array
  #312 = Utf8               ()[C
  #313 = Methodref          #8.#314          // java/nio/CharBuffer.rewind:()Ljava/nio/CharBuffer;
  #314 = NameAndType        #241:#302        // rewind:()Ljava/nio/CharBuffer;
  #315 = Methodref          #8.#316          // java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;
  #316 = NameAndType        #238:#302        // flip:()Ljava/nio/CharBuffer;
  #317 = Methodref          #8.#318          // java/nio/CharBuffer.clear:()Ljava/nio/CharBuffer;
  #318 = NameAndType        #235:#302        // clear:()Ljava/nio/CharBuffer;
  #319 = Methodref          #8.#320          // java/nio/CharBuffer.reset:()Ljava/nio/CharBuffer;
  #320 = NameAndType        #232:#302        // reset:()Ljava/nio/CharBuffer;
  #321 = Methodref          #8.#322          // java/nio/CharBuffer.mark:()Ljava/nio/CharBuffer;
  #322 = NameAndType        #228:#302        // mark:()Ljava/nio/CharBuffer;
  #323 = Methodref          #8.#324          // java/nio/CharBuffer.compareTo:(Ljava/nio/CharBuffer;)I
  #324 = NameAndType        #325:#326        // compareTo:(Ljava/nio/CharBuffer;)I
  #325 = Utf8               compareTo
  #326 = Utf8               (Ljava/nio/CharBuffer;)I
  #327 = Methodref          #8.#328          // java/nio/CharBuffer.append:(C)Ljava/nio/CharBuffer;
  #328 = NameAndType        #329:#212        // append:(C)Ljava/nio/CharBuffer;
  #329 = Utf8               append
  #330 = Methodref          #8.#331          // java/nio/CharBuffer.append:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
  #331 = NameAndType        #329:#88         // append:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
  #332 = Methodref          #8.#333          // java/nio/CharBuffer.append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #333 = NameAndType        #329:#334        // append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #334 = Utf8               (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #335 = Methodref          #8.#336          // java/nio/CharBuffer.subSequence:(II)Ljava/nio/CharBuffer;
  #336 = NameAndType        #276:#306        // subSequence:(II)Ljava/nio/CharBuffer;
  #337 = Class              #338             // java/nio/CharBufferSpliterator
  #338 = Utf8               java/nio/CharBufferSpliterator
  #339 = Methodref          #337.#340        // java/nio/CharBufferSpliterator."<init>":(Ljava/nio/CharBuffer;)V
  #340 = NameAndType        #5:#341          // "<init>":(Ljava/nio/CharBuffer;)V
  #341 = Utf8               (Ljava/nio/CharBuffer;)V
  #342 = Methodref          #189.#343        // java/lang/Class.desiredAssertionStatus:()Z
  #343 = NameAndType        #344:#112        // desiredAssertionStatus:()Z
  #344 = Utf8               desiredAssertionStatus
  #345 = Fieldref           #8.#346          // java/nio/CharBuffer.UNSAFE:Ljdk/internal/misc/Unsafe;
  #346 = NameAndType        #347:#348        // UNSAFE:Ljdk/internal/misc/Unsafe;
  #347 = Utf8               UNSAFE
  #348 = Utf8               Ljdk/internal/misc/Unsafe;
  #349 = Class              #12              // "[C"
  #350 = Methodref          #351.#352        // jdk/internal/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
  #351 = Class              #353             // jdk/internal/misc/Unsafe
  #352 = NameAndType        #354:#355        // arrayBaseOffset:(Ljava/lang/Class;)I
  #353 = Utf8               jdk/internal/misc/Unsafe
  #354 = Utf8               arrayBaseOffset
  #355 = Utf8               (Ljava/lang/Class;)I
  #356 = Class              #357             // java/lang/Comparable
  #357 = Utf8               java/lang/Comparable
  #358 = Class              #359             // java/lang/Appendable
  #359 = Utf8               java/lang/Appendable
  #360 = Class              #361             // java/lang/Readable
  #361 = Utf8               java/lang/Readable
  #362 = Utf8               Code
  #363 = Utf8               LineNumberTable
  #364 = Utf8               LocalVariableTable
  #365 = Utf8               this
  #366 = Utf8               Ljava/nio/CharBuffer;
  #367 = Utf8               pos
  #368 = Utf8               lim
  #369 = Utf8               cap
  #370 = Utf8               segment
  #371 = Utf8               Ljava/lang/foreign/MemorySegment;
  #372 = Utf8               ([CJILjava/lang/foreign/MemorySegment;)V
  #373 = Utf8               addr
  #374 = Utf8               allocate
  #375 = Utf8               capacity
  #376 = Utf8               StackMapTable
  #377 = Utf8               x
  #378 = Utf8               Ljava/lang/IllegalArgumentException;
  #379 = Utf8               ([C)Ljava/nio/CharBuffer;
  #380 = Utf8               read
  #381 = Utf8               target
  #382 = Utf8               targetRemaining
  #383 = Utf8               n
  #384 = Class              #385             // java/lang/Throwable
  #385 = Utf8               java/lang/Throwable
  #386 = Utf8               Exceptions
  #387 = Class              #388             // java/io/IOException
  #388 = Utf8               java/io/IOException
  #389 = Utf8               csq
  #390 = Utf8               Ljava/lang/CharSequence;
  #391 = Utf8               start
  #392 = Utf8               end
  #393 = Utf8               asReadOnlyBuffer
  #394 = Utf8               ()C
  #395 = Utf8               getUnchecked
  #396 = Utf8               dst
  #397 = Utf8               index
  #398 = Utf8               (I[C)Ljava/nio/CharBuffer;
  #399 = Utf8               bufAddr
  #400 = Utf8               dstOffset
  #401 = Utf8               len
  #402 = Utf8               i
  #403 = Utf8               j
  #404 = Utf8               src
  #405 = Utf8               srcPos
  #406 = Utf8               srcLim
  #407 = Utf8               srcRem
  #408 = Utf8               rem
  #409 = Utf8               Ljava/lang/Object;
  #410 = Utf8               srcAddr
  #411 = Utf8               posMax
  #412 = Utf8               srcBase
  #413 = Class              #414             // java/lang/Object
  #414 = Utf8               java/lang/Object
  #415 = Utf8               srcOffset
  #416 = Utf8               Ljava/lang/String;
  #417 = Utf8               hasArray
  #418 = Utf8               arrayOffset
  #419 = Utf8               newPosition
  #420 = Utf8               newLimit
  #421 = Utf8               compact
  #422 = Utf8               hashCode
  #423 = Utf8               h
  #424 = Utf8               p
  #425 = Utf8               equals
  #426 = Utf8               ob
  #427 = Utf8               that
  #428 = Utf8               thisPos
  #429 = Utf8               thisRem
  #430 = Utf8               thatPos
  #431 = Utf8               thatRem
  #432 = Utf8               C
  #433 = Utf8               y
  #434 = Utf8               r
  #435 = Utf8               isEmpty
  #436 = Utf8               cb
  #437 = Utf8               cs
  #438 = Utf8               c
  #439 = Utf8               charRegionOrder
  #440 = Utf8               scaleShifts
  #441 = Utf8               RuntimeVisibleAnnotations
  #442 = Utf8               Ljdk/internal/vm/annotation/ForceInline;
  #443 = Utf8               heapSegment
  #444 = Utf8               (Ljava/lang/Object;JJZLjdk/internal/foreign/MemorySessionImpl;)Ljdk/internal/foreign/AbstractMemorySegmentImpl;
  #445 = Utf8               readOnly
  #446 = Utf8               bufferScope
  #447 = Utf8               Ljdk/internal/foreign/MemorySessionImpl;
  #448 = Utf8               chars
  #449 = Utf8               ()Ljava/util/stream/IntStream;
  #450 = Utf8               (II)Ljava/nio/Buffer;
  #451 = Utf8               MethodParameters
  #452 = Utf8               (Ljava/lang/Object;)I
  #453 = Utf8               (C)Ljava/lang/Appendable;
  #454 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
  #455 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
  #456 = Utf8               lambda$chars$0
  #457 = Utf8               ()Ljava/util/Spliterator$OfInt;
  #458 = Utf8               <clinit>
  #459 = Utf8               Signature
  #460 = Utf8               Ljava/nio/Buffer;Ljava/lang/Comparable<Ljava/nio/CharBuffer;>;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/Readable;
  #461 = Utf8               SourceFile
  #462 = Utf8               CharBuffer.java
  #463 = Utf8               PermittedSubclasses
  #464 = Class              #465             // java/nio/DirectCharBufferS
  #465 = Utf8               java/nio/DirectCharBufferS
  #466 = Class              #467             // java/nio/DirectCharBufferU
  #467 = Utf8               java/nio/DirectCharBufferU
  #468 = Class              #469             // java/nio/ByteBufferAsCharBufferB
  #469 = Utf8               java/nio/ByteBufferAsCharBufferB
  #470 = Class              #471             // java/nio/ByteBufferAsCharBufferL
  #471 = Utf8               java/nio/ByteBufferAsCharBufferL
  #472 = Utf8               BootstrapMethods
  #473 = MethodType         #144             // ()Ljava/lang/Object;
  #474 = MethodHandle       5:#475           // REF_invokeVirtual java/nio/CharBuffer.lambda$chars$0:()Ljava/util/Spliterator$OfInt;
  #475 = Methodref          #8.#476          // java/nio/CharBuffer.lambda$chars$0:()Ljava/util/Spliterator$OfInt;
  #476 = NameAndType        #456:#457        // lambda$chars$0:()Ljava/util/Spliterator$OfInt;
  #477 = MethodType         #457             // ()Ljava/util/Spliterator$OfInt;
  #478 = MethodHandle       6:#479           // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #479 = Methodref          #480.#481        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #480 = Class              #482             // java/lang/invoke/LambdaMetafactory
  #481 = NameAndType        #483:#484        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #482 = Utf8               java/lang/invoke/LambdaMetafactory
  #483 = Utf8               metafactory
  #484 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #485 = Utf8               InnerClasses
  #486 = Class              #487             // jdk/internal/foreign/HeapMemorySegmentImpl$OfChar
  #487 = Utf8               jdk/internal/foreign/HeapMemorySegmentImpl$OfChar
  #488 = Class              #489             // jdk/internal/foreign/HeapMemorySegmentImpl
  #489 = Utf8               jdk/internal/foreign/HeapMemorySegmentImpl
  #490 = Utf8               OfChar
  #491 = Class              #492             // java/util/Spliterator$OfInt
  #492 = Utf8               java/util/Spliterator$OfInt
  #493 = Class              #494             // java/util/Spliterator
  #494 = Utf8               java/util/Spliterator
  #495 = Utf8               OfInt
  #496 = Class              #497             // java/lang/invoke/MethodHandles$Lookup
  #497 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #498 = Class              #499             // java/lang/invoke/MethodHandles
  #499 = Utf8               java/lang/invoke/MethodHandles
  #500 = Utf8               Lookup
{
  private static final long ARRAY_BASE_OFFSET;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  final char[] hb;
    descriptor: [C
    flags: (0x0010) ACC_FINAL
  
  final int offset;
    descriptor: I
    flags: (0x0010) ACC_FINAL
  
  boolean isReadOnly;
    descriptor: Z
    flags: (0x0000) 
  
  static final boolean $assertionsDisabled;
    descriptor: Z
    flags: (0x1018) ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
  
  java.nio.CharBuffer(int, int, int, int, char[], int, java.lang.foreign.MemorySegment);
    descriptor: (IIII[CILjava/lang/foreign/MemorySegment;)V
    flags: (0x0000) 
    Code: 
      stack=6, locals=8, args_size=8
         0: aload_0                 
         1: iload_1                 
         2: iload_2                 
         3: iload_3                 
         4: iload         4                 
         6: aload         7                 
         8: invokespecial #1                  // Method java/nio/Buffer."<init>":(IIIILjava/lang/foreign/MemorySegment;)V
        11: aload_0                 
        12: aload         5                 
        14: putfield      #7                  // Field hb:[C
        17: aload_0                 
        18: iload         6                 
        20: putfield      #13                 // Field offset:I
        23: return                  
      LineNumberTable:
        line 323: 0
        line 324: 11
        line 325: 17
        line 326: 23
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       24     0  this   Ljava/nio/CharBuffer;
           0       24     1  mark   I
           0       24     2  pos    I
           0       24     3  lim    I
           0       24     4  cap    I
           0       24     5  hb     [C
           0       24     6  offset I
           0       24     7  segment Ljava/lang/foreign/MemorySegment;
  
  java.nio.CharBuffer(int, int, int, int, java.lang.foreign.MemorySegment);
    descriptor: (IIIILjava/lang/foreign/MemorySegment;)V
    flags: (0x0000) 
    Code: 
      stack=8, locals=6, args_size=6
         0: aload_0                 
         1: iload_1                 
         2: iload_2                 
         3: iload_3                 
         4: iload         4                 
         6: aconst_null             
         7: iconst_0                
         8: aload         5                 
        10: invokespecial #17                 // Method "<init>":(IIII[CILjava/lang/foreign/MemorySegment;)V
        13: return                  
      LineNumberTable:
        line 331: 0
        line 332: 13
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/nio/CharBuffer;
           0       14     1  mark   I
           0       14     2  pos    I
           0       14     3  lim    I
           0       14     4  cap    I
           0       14     5  segment Ljava/lang/foreign/MemorySegment;
  
  java.nio.CharBuffer(char[], long, int, java.lang.foreign.MemorySegment);
    descriptor: ([CJILjava/lang/foreign/MemorySegment;)V
    flags: (0x0000) 
    Code: 
      stack=5, locals=6, args_size=5
         0: aload_0                 
         1: lload_2                 
         2: iload         4                 
         4: aload         5                 
         6: invokespecial #20                 // Method java/nio/Buffer."<init>":(JILjava/lang/foreign/MemorySegment;)V
         9: aload_0                 
        10: aload_1                 
        11: putfield      #7                  // Field hb:[C
        14: aload_0                 
        15: iconst_0                
        16: putfield      #13                 // Field offset:I
        19: return                  
      LineNumberTable:
        line 337: 0
        line 338: 9
        line 339: 14
        line 340: 19
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/nio/CharBuffer;
           0       20     1  hb     [C
           0       20     2  addr   J
           0       20     4  cap    I
           0       20     5  segment Ljava/lang/foreign/MemorySegment;
  
  java.lang.Object base();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0000) 
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field hb:[C
         4: areturn                 
      LineNumberTable:
        line 344: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public static java.nio.CharBuffer allocate(int);
    descriptor: (I)Ljava/nio/CharBuffer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=5, locals=1, args_size=1
         0: iload_0                 
         1: ifge          9                 
         4: iload_0                 
         5: invokestatic  #23                 // Method createCapacityException:(I)Ljava/lang/IllegalArgumentException;
         8: athrow                  
         9: new           #27                 // class java/nio/HeapCharBuffer
        12: dup                     
        13: iload_0                 
        14: iload_0                 
        15: aconst_null             
        16: invokespecial #29                 // Method java/nio/HeapCharBuffer."<init>":(IILjava/lang/foreign/MemorySegment;)V
        19: areturn                 
      LineNumberTable:
        line 396: 0
        line 397: 4
        line 398: 9
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  capacity I
      StackMapTable: number_of_entries = 1
        frame_type = 9 /* same */
  
  public static java.nio.CharBuffer wrap(char[], int, int);
    descriptor: ([CII)Ljava/nio/CharBuffer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=6, locals=4, args_size=3
         0: new           #27                 // class java/nio/HeapCharBuffer
         3: dup                     
         4: aload_0                 
         5: iload_1                 
         6: iload_2                 
         7: aconst_null             
         8: invokespecial #32                 // Method java/nio/HeapCharBuffer."<init>":([CIILjava/lang/foreign/MemorySegment;)V
        11: areturn                 
        12: astore_3                
        13: new           #37                 // class java/lang/IndexOutOfBoundsException
        16: dup                     
        17: invokespecial #39                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
        20: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 443: 0
        line 444: 12
        line 445: 13
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          13        8     3  x      Ljava/lang/IllegalArgumentException;
           0       21     0  array  [C
           0       21     1  offset I
           0       21     2  length I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
  
  public static java.nio.CharBuffer wrap(char[]);
    descriptor: ([C)Ljava/nio/CharBuffer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: iconst_0                
         2: aload_0                 
         3: arraylength             
         4: invokestatic  #42                 // Method wrap:([CII)Ljava/nio/CharBuffer;
         7: areturn                 
      LineNumberTable:
        line 472: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  array  [C
  
  public int read(java.nio.CharBuffer) throws java.io.IOException;
    descriptor: (Ljava/nio/CharBuffer;)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=8, args_size=2
         0: aload_0                 
         1: invokevirtual #46                 // Method limit:()I
         4: istore_2                
         5: aload_0                 
         6: invokevirtual #50                 // Method position:()I
         9: istore_3                
        10: iload_2                 
        11: iload_3                 
        12: isub                    
        13: istore        4                 
        15: getstatic     #53                 // Field $assertionsDisabled:Z
        18: ifne          34                
        21: iload         4                 
        23: ifge          34                
        26: new           #57                 // class java/lang/AssertionError
        29: dup                     
        30: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
        33: athrow                  
        34: iload         4                 
        36: ifgt          41                
        39: iconst_m1               
        40: ireturn                 
        41: aload_1                 
        42: invokevirtual #60                 // Method remaining:()I
        45: istore        5                 
        47: getstatic     #53                 // Field $assertionsDisabled:Z
        50: ifne          66                
        53: iload         5                 
        55: ifge          66                
        58: new           #57                 // class java/lang/AssertionError
        61: dup                     
        62: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
        65: athrow                  
        66: iload         5                 
        68: ifgt          73                
        71: iconst_0                
        72: ireturn                 
        73: iload         4                 
        75: iload         5                 
        77: invokestatic  #63                 // Method java/lang/Math.min:(II)I
        80: istore        6                 
        82: iload         5                 
        84: iload         4                 
        86: if_icmpge     98                
        89: aload_0                 
        90: iload_3                 
        91: iload         6                 
        93: iadd                    
        94: invokevirtual #69                 // Method limit:(I)Ljava/nio/CharBuffer;
        97: pop                     
        98: iload         6                 
       100: ifle          109               
       103: aload_1                 
       104: aload_0                 
       105: invokevirtual #72                 // Method put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
       108: pop                     
       109: aload_0                 
       110: iload_2                 
       111: invokevirtual #69                 // Method limit:(I)Ljava/nio/CharBuffer;
       114: pop                     
       115: goto          129               
       118: astore        7                 
       120: aload_0                 
       121: iload_2                 
       122: invokevirtual #69                 // Method limit:(I)Ljava/nio/CharBuffer;
       125: pop                     
       126: aload         7                 
       128: athrow                  
       129: iload         6                 
       131: ireturn                 
      Exception table:
          from       to target type
            98      109   118  any
           118      120   118  any
      LineNumberTable:
        line 495: 0
        line 496: 5
        line 497: 10
        line 498: 15
        line 499: 34
        line 500: 39
        line 502: 41
        line 503: 47
        line 504: 66
        line 505: 71
        line 507: 73
        line 510: 82
        line 511: 89
        line 513: 98
        line 514: 103
        line 516: 109
        line 517: 115
        line 516: 118
        line 517: 126
        line 518: 129
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      132     0  this   Ljava/nio/CharBuffer;
           0      132     1  target Ljava/nio/CharBuffer;
           5      127     2  limit  I
          10      122     3  pos    I
          15      117     4  remaining I
          47       85     5  targetRemaining I
          82       50     6  n      I
      StackMapTable: number_of_entries = 8
        frame_type = 254 /* append */
          offset_delta = 34
          locals = [int, int, int]
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [int]
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [int]
        frame_type = 10 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 10 /* same */
    Exceptions:
      throws java.io.IOException
  
  public static java.nio.CharBuffer wrap(java.lang.CharSequence, int, int);
    descriptor: (Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=5, locals=4, args_size=3
         0: new           #76                 // class java/nio/StringCharBuffer
         3: dup                     
         4: aload_0                 
         5: iload_1                 
         6: iload_2                 
         7: invokespecial #78                 // Method java/nio/StringCharBuffer."<init>":(Ljava/lang/CharSequence;II)V
        10: areturn                 
        11: astore_3                
        12: new           #37                 // class java/lang/IndexOutOfBoundsException
        15: dup                     
        16: invokespecial #39                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
        19: athrow                  
      Exception table:
          from       to target type
             0       10    11  Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 552: 0
        line 553: 11
        line 554: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        8     3  x      Ljava/lang/IllegalArgumentException;
           0       20     0  csq    Ljava/lang/CharSequence;
           0       20     1  start  I
           0       20     2  end    I
      StackMapTable: number_of_entries = 1
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
  
  public static java.nio.CharBuffer wrap(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: iconst_0                
         2: aload_0                 
         3: invokeinterface #81, 1              // InterfaceMethod java/lang/CharSequence.length:()I
         8: invokestatic  #86                 // Method wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
        11: areturn                 
      LineNumberTable:
        line 573: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  csq    Ljava/lang/CharSequence;
  
  public abstract java.nio.CharBuffer slice();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract java.nio.CharBuffer slice(int, int);
    descriptor: (II)Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract java.nio.CharBuffer duplicate();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract java.nio.CharBuffer asReadOnlyBuffer();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract char get();
    descriptor: ()C
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract java.nio.CharBuffer put(char);
    descriptor: (C)Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract char get(int);
    descriptor: (I)C
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  abstract char getUnchecked(int);
    descriptor: (I)C
    flags: (0x0400) ACC_ABSTRACT
  
  public abstract java.nio.CharBuffer put(int, char);
    descriptor: (IC)Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public java.nio.CharBuffer get(char[], int, int);
    descriptor: ([CII)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=5, args_size=4
         0: iload_2                 
         1: iload_3                 
         2: aload_1                 
         3: arraylength             
         4: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
         7: pop                     
         8: aload_0                 
         9: invokevirtual #50                 // Method position:()I
        12: istore        4                 
        14: iload_3                 
        15: aload_0                 
        16: invokevirtual #46                 // Method limit:()I
        19: iload         4                 
        21: isub                    
        22: if_icmple     33                
        25: new           #95                 // class java/nio/BufferUnderflowException
        28: dup                     
        29: invokespecial #97                 // Method java/nio/BufferUnderflowException."<init>":()V
        32: athrow                  
        33: aload_0                 
        34: iload         4                 
        36: aload_1                 
        37: iload_2                 
        38: iload_3                 
        39: invokevirtual #98                 // Method getArray:(I[CII)Ljava/nio/CharBuffer;
        42: pop                     
        43: aload_0                 
        44: iload         4                 
        46: iload_3                 
        47: iadd                    
        48: invokevirtual #102                // Method position:(I)Ljava/nio/CharBuffer;
        51: pop                     
        52: aload_0                 
        53: areturn                 
      LineNumberTable:
        line 833: 0
        line 834: 8
        line 835: 14
        line 836: 25
        line 838: 33
        line 840: 43
        line 841: 52
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       54     0  this   Ljava/nio/CharBuffer;
           0       54     1  dst    [C
           0       54     2  offset I
           0       54     3  length I
          14       40     4  pos    I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [int]
  
  public java.nio.CharBuffer get(char[]);
    descriptor: ([C)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: aload_1                 
         4: arraylength             
         5: invokevirtual #104                // Method get:([CII)Ljava/nio/CharBuffer;
         8: areturn                 
      LineNumberTable:
        line 865: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/nio/CharBuffer;
           0        9     1  dst    [C
  
  public java.nio.CharBuffer get(int, char[], int, int);
    descriptor: (I[CII)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=5, args_size=5
         0: iload_1                 
         1: iload         4                 
         3: aload_0                 
         4: invokevirtual #46                 // Method limit:()I
         7: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        10: pop                     
        11: iload_3                 
        12: iload         4                 
        14: aload_2                 
        15: arraylength             
        16: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        19: pop                     
        20: aload_0                 
        21: iload_1                 
        22: aload_2                 
        23: iload_3                 
        24: iload         4                 
        26: invokevirtual #98                 // Method getArray:(I[CII)Ljava/nio/CharBuffer;
        29: pop                     
        30: aload_0                 
        31: areturn                 
      LineNumberTable:
        line 913: 0
        line 914: 11
        line 916: 20
        line 918: 30
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       32     0  this   Ljava/nio/CharBuffer;
           0       32     1  index  I
           0       32     2  dst    [C
           0       32     3  offset I
           0       32     4  length I
  
  public java.nio.CharBuffer get(int, char[]);
    descriptor: (I[C)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=3, args_size=3
         0: aload_0                 
         1: iload_1                 
         2: aload_2                 
         3: iconst_0                
         4: aload_2                 
         5: arraylength             
         6: invokevirtual #107                // Method get:(I[CII)Ljava/nio/CharBuffer;
         9: areturn                 
      LineNumberTable:
        line 950: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/nio/CharBuffer;
           0       10     1  index  I
           0       10     2  dst    [C
  
  private java.nio.CharBuffer getArray(int, char[], int, int);
    descriptor: (I[CII)Ljava/nio/CharBuffer;
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=13, locals=12, args_size=5
         0: aload_0                 
         1: invokevirtual #109                // Method isAddressable:()Z
         4: ifeq          126               
         7: iload         4                 
         9: i2l                     
        10: iconst_1                
        11: lshl                    
        12: ldc2_w        #115                // long 6l
        15: lcmp                    
        16: ifle          126               
        19: aload_0                 
        20: getfield      #117                // Field address:J
        23: iload_1                 
        24: i2l                     
        25: iconst_1                
        26: lshl                    
        27: ladd                    
        28: lstore        5                 
        30: getstatic     #121                // Field ARRAY_BASE_OFFSET:J
        33: iload_3                 
        34: i2l                     
        35: iconst_1                
        36: lshl                    
        37: ladd                    
        38: lstore        7                 
        40: iload         4                 
        42: i2l                     
        43: iconst_1                
        44: lshl                    
        45: lstore        9                 
        47: aload_0                 
        48: invokevirtual #124                // Method order:()Ljava/nio/ByteOrder;
        51: invokestatic  #128                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
        54: if_acmpeq     85                
        57: getstatic     #133                // Field SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
        60: aload_0                 
        61: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
        64: aconst_null             
        65: aload_0                 
        66: invokevirtual #141                // Method base:()Ljava/lang/Object;
        69: lload         5                 
        71: aload_2                 
        72: lload         7                 
        74: lload         9                 
        76: ldc2_w        #147                // long 2l
        79: invokevirtual #149                // Method jdk/internal/misc/ScopedMemoryAccess.copySwapMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
        82: goto          107               
        85: getstatic     #133                // Field SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
        88: aload_0                 
        89: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
        92: aconst_null             
        93: aload_0                 
        94: invokevirtual #141                // Method base:()Ljava/lang/Object;
        97: lload         5                 
        99: aload_2                 
       100: lload         7                 
       102: lload         9                 
       104: invokevirtual #155                // Method jdk/internal/misc/ScopedMemoryAccess.copyMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
       107: aload_0                 
       108: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       111: goto          123               
       114: astore        11                
       116: aload_0                 
       117: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       120: aload         11                
       122: athrow                  
       123: goto          164               
       126: iload_3                 
       127: iload         4                 
       129: iadd                    
       130: istore        5                 
       132: iload_3                 
       133: istore        6                 
       135: iload_1                 
       136: istore        7                 
       138: iload         6                 
       140: iload         5                 
       142: if_icmpge     164               
       145: aload_2                 
       146: iload         6                 
       148: aload_0                 
       149: iload         7                 
       151: invokevirtual #165                // Method get:(I)C
       154: castore                 
       155: iinc          6, 1              
       158: iinc          7, 1              
       161: goto          138               
       164: aload_0                 
       165: areturn                 
      Exception table:
          from       to target type
            47      107   114  any
           114      116   114  any
      LineNumberTable:
        line 954: 0
        line 956: 1
        line 959: 19
        line 960: 30
        line 962: 40
        line 966: 47
        line 967: 57
        line 968: 61
        line 967: 79
        line 972: 85
        line 973: 89
        line 972: 104
        line 976: 107
        line 977: 111
        line 976: 114
        line 977: 120
        line 978: 123
        line 979: 126
        line 980: 132
        line 981: 145
        line 980: 155
        line 984: 164
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          30       93     5  bufAddr J
          40       83     7  dstOffset J
          47       76     9  len    J
         135       29     6  i      I
         138       26     7  j      I
         132       32     5  end    I
           0      166     0  this   Ljava/nio/CharBuffer;
           0      166     1  index  I
           0      166     2  dst    [C
           0      166     3  offset I
           0      166     4  length I
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 85
          locals = [long, long, long]
        frame_type = 21 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 248 /* chop */
          offset_delta = 8
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 11
          locals = [int, int, int]
        frame_type = 248 /* chop */
          offset_delta = 25
  
  public java.nio.CharBuffer put(java.nio.CharBuffer);
    descriptor: (Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=8, args_size=2
         0: aload_1                 
         1: aload_0                 
         2: if_acmpne     9                 
         5: invokestatic  #168                // Method createSameBufferException:()Ljava/lang/IllegalArgumentException;
         8: athrow                  
         9: aload_0                 
        10: invokevirtual #172                // Method isReadOnly:()Z
        13: ifeq          24                
        16: new           #175                // class java/nio/ReadOnlyBufferException
        19: dup                     
        20: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        23: athrow                  
        24: aload_1                 
        25: invokevirtual #50                 // Method position:()I
        28: istore_2                
        29: aload_1                 
        30: invokevirtual #46                 // Method limit:()I
        33: istore_3                
        34: iload_2                 
        35: iload_3                 
        36: if_icmpgt     45                
        39: iload_3                 
        40: iload_2                 
        41: isub                    
        42: goto          46                
        45: iconst_0                
        46: istore        4                 
        48: aload_0                 
        49: invokevirtual #50                 // Method position:()I
        52: istore        5                 
        54: aload_0                 
        55: invokevirtual #46                 // Method limit:()I
        58: istore        6                 
        60: iload         5                 
        62: iload         6                 
        64: if_icmpgt     75                
        67: iload         6                 
        69: iload         5                 
        71: isub                    
        72: goto          76                
        75: iconst_0                
        76: istore        7                 
        78: iload         4                 
        80: iload         7                 
        82: if_icmple     93                
        85: new           #178                // class java/nio/BufferOverflowException
        88: dup                     
        89: invokespecial #180                // Method java/nio/BufferOverflowException."<init>":()V
        92: athrow                  
        93: aload_0                 
        94: iload         5                 
        96: aload_1                 
        97: iload_2                 
        98: iload         4                 
       100: invokevirtual #181                // Method putBuffer:(ILjava/nio/CharBuffer;II)V
       103: aload_0                 
       104: iload         5                 
       106: iload         4                 
       108: iadd                    
       109: invokevirtual #102                // Method position:(I)Ljava/nio/CharBuffer;
       112: pop                     
       113: aload_1                 
       114: iload_2                 
       115: iload         4                 
       117: iadd                    
       118: invokevirtual #102                // Method position:(I)Ljava/nio/CharBuffer;
       121: pop                     
       122: aload_0                 
       123: areturn                 
      LineNumberTable:
        line 1035: 0
        line 1036: 5
        line 1037: 9
        line 1038: 16
        line 1040: 24
        line 1041: 29
        line 1042: 34
        line 1043: 48
        line 1044: 54
        line 1045: 60
        line 1047: 78
        line 1048: 85
        line 1050: 93
        line 1052: 103
        line 1053: 113
        line 1055: 122
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      124     0  this   Ljava/nio/CharBuffer;
           0      124     1  src    Ljava/nio/CharBuffer;
          29       95     2  srcPos I
          34       90     3  srcLim I
          48       76     4  srcRem I
          54       70     5  pos    I
          60       64     6  lim    I
          78       46     7  rem    I
      StackMapTable: number_of_entries = 7
        frame_type = 9 /* same */
        frame_type = 14 /* same */
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [int, int]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 254 /* append */
          offset_delta = 28
          locals = [int, int, int]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [int]
  
  public java.nio.CharBuffer put(int, java.nio.CharBuffer, int, int);
    descriptor: (ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=5, args_size=5
         0: iload_1                 
         1: iload         4                 
         3: aload_0                 
         4: invokevirtual #46                 // Method limit:()I
         7: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        10: pop                     
        11: iload_3                 
        12: iload         4                 
        14: aload_2                 
        15: invokevirtual #46                 // Method limit:()I
        18: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        21: pop                     
        22: aload_0                 
        23: invokevirtual #172                // Method isReadOnly:()Z
        26: ifeq          37                
        29: new           #175                // class java/nio/ReadOnlyBufferException
        32: dup                     
        33: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        36: athrow                  
        37: aload_0                 
        38: iload_1                 
        39: aload_2                 
        40: iload_3                 
        41: iload         4                 
        43: invokevirtual #181                // Method putBuffer:(ILjava/nio/CharBuffer;II)V
        46: aload_0                 
        47: areturn                 
      LineNumberTable:
        line 1109: 0
        line 1110: 11
        line 1111: 22
        line 1112: 29
        line 1114: 37
        line 1116: 46
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       48     0  this   Ljava/nio/CharBuffer;
           0       48     1  index  I
           0       48     2  src    Ljava/nio/CharBuffer;
           0       48     3  offset I
           0       48     4  length I
      StackMapTable: number_of_entries = 1
        frame_type = 37 /* same */
  
  void putBuffer(int, java.nio.CharBuffer, int, int);
    descriptor: (ILjava/nio/CharBuffer;II)V
    flags: (0x0000) 
    Code: 
      stack=13, locals=14, args_size=5
         0: aload_2                 
         1: invokevirtual #141                // Method base:()Ljava/lang/Object;
         4: astore        5                 
         6: aload_2                 
         7: invokevirtual #109                // Method isAddressable:()Z
        10: ifeq          166               
        13: aload_0                 
        14: invokevirtual #141                // Method base:()Ljava/lang/Object;
        17: astore        6                 
        19: getstatic     #53                 // Field $assertionsDisabled:Z
        22: ifne          45                
        25: aload         6                 
        27: ifnonnull     45                
        30: aload_0                 
        31: invokevirtual #185                // Method isDirect:()Z
        34: ifne          45                
        37: new           #57                 // class java/lang/AssertionError
        40: dup                     
        41: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
        44: athrow                  
        45: aload_2                 
        46: getfield      #117                // Field address:J
        49: iload_3                 
        50: i2l                     
        51: iconst_1                
        52: lshl                    
        53: ladd                    
        54: lstore        7                 
        56: aload_0                 
        57: getfield      #117                // Field address:J
        60: iload_1                 
        61: i2l                     
        62: iconst_1                
        63: lshl                    
        64: ladd                    
        65: lstore        9                 
        67: iload         4                 
        69: i2l                     
        70: iconst_1                
        71: lshl                    
        72: lstore        11                
        74: aload_0                 
        75: invokevirtual #124                // Method order:()Ljava/nio/ByteOrder;
        78: aload_2                 
        79: invokevirtual #124                // Method order:()Ljava/nio/ByteOrder;
        82: if_acmpeq     115               
        85: getstatic     #133                // Field SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
        88: aload_2                 
        89: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
        92: aload_0                 
        93: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
        96: aload         5                 
        98: lload         7                 
       100: aload         6                 
       102: lload         9                 
       104: lload         11                
       106: ldc2_w        #147                // long 2l
       109: invokevirtual #149                // Method jdk/internal/misc/ScopedMemoryAccess.copySwapMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
       112: goto          139               
       115: getstatic     #133                // Field SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
       118: aload_2                 
       119: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
       122: aload_0                 
       123: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
       126: aload         5                 
       128: lload         7                 
       130: aload         6                 
       132: lload         9                 
       134: lload         11                
       136: invokevirtual #155                // Method jdk/internal/misc/ScopedMemoryAccess.copyMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
       139: aload_2                 
       140: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       143: aload_0                 
       144: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       147: goto          163               
       150: astore        13                
       152: aload_2                 
       153: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       156: aload_0                 
       157: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       160: aload         13                
       162: athrow                  
       163: goto          230               
       166: getstatic     #53                 // Field $assertionsDisabled:Z
       169: ifne          189               
       172: ldc           #76                 // class java/nio/StringCharBuffer
       174: aload_2                 
       175: invokevirtual #188                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       178: ifne          189               
       181: new           #57                 // class java/lang/AssertionError
       184: dup                     
       185: invokespecial #59                 // Method java/lang/AssertionError."<init>":()V
       188: athrow                  
       189: iload_1                 
       190: iload         4                 
       192: iadd                    
       193: istore        6                 
       195: iload_1                 
       196: istore        7                 
       198: iload_3                 
       199: istore        8                 
       201: iload         7                 
       203: iload         6                 
       205: if_icmpge     230               
       208: aload_0                 
       209: iload         7                 
       211: aload_2                 
       212: iload         8                 
       214: invokevirtual #165                // Method get:(I)C
       217: invokevirtual #194                // Method put:(IC)Ljava/nio/CharBuffer;
       220: pop                     
       221: iinc          7, 1              
       224: iinc          8, 1              
       227: goto          201               
       230: return                  
      Exception table:
          from       to target type
            74      139   150  any
           150      152   150  any
      LineNumberTable:
        line 1121: 0
        line 1123: 6
        line 1128: 13
        line 1129: 19
        line 1131: 45
        line 1132: 56
        line 1133: 67
        line 1137: 74
        line 1138: 85
        line 1139: 89
        line 1138: 109
        line 1143: 115
        line 1144: 119
        line 1143: 136
        line 1147: 139
        line 1148: 143
        line 1149: 147
        line 1147: 150
        line 1148: 156
        line 1149: 160
        line 1151: 163
        line 1152: 166
        line 1153: 189
        line 1154: 195
        line 1155: 208
        line 1154: 221
        line 1161: 230
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          19      144     6  base   Ljava/lang/Object;
          56      107     7  srcAddr J
          67       96     9  addr   J
          74       89    11  len    J
         198       32     7  i      I
         201       29     8  j      I
         195       35     6  posMax I
           0      231     0  this   Ljava/nio/CharBuffer;
           0      231     1  pos    I
           0      231     2  src    Ljava/nio/CharBuffer;
           0      231     3  srcPos I
           0      231     4  n      I
           6      225     5  srcBase Ljava/lang/Object;
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 45
          locals = [class java/lang/Object, class java/lang/Object]
        frame_type = 254 /* append */
          offset_delta = 69
          locals = [long, long, long]
        frame_type = 23 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [class java/nio/CharBuffer, int, class java/nio/CharBuffer, int, int, class java/lang/Object]
          stack = []
        frame_type = 2 /* same */
        frame_type = 22 /* same */
        frame_type = 254 /* append */
          offset_delta = 11
          locals = [int, int, int]
        frame_type = 248 /* chop */
          offset_delta = 28
  
  public java.nio.CharBuffer put(char[], int, int);
    descriptor: ([CII)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=5, args_size=4
         0: aload_0                 
         1: invokevirtual #172                // Method isReadOnly:()Z
         4: ifeq          15                
         7: new           #175                // class java/nio/ReadOnlyBufferException
        10: dup                     
        11: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        14: athrow                  
        15: iload_2                 
        16: iload_3                 
        17: aload_1                 
        18: arraylength             
        19: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        22: pop                     
        23: aload_0                 
        24: invokevirtual #50                 // Method position:()I
        27: istore        4                 
        29: iload_3                 
        30: aload_0                 
        31: invokevirtual #46                 // Method limit:()I
        34: iload         4                 
        36: isub                    
        37: if_icmple     48                
        40: new           #178                // class java/nio/BufferOverflowException
        43: dup                     
        44: invokespecial #180                // Method java/nio/BufferOverflowException."<init>":()V
        47: athrow                  
        48: aload_0                 
        49: iload         4                 
        51: aload_1                 
        52: iload_2                 
        53: iload_3                 
        54: invokevirtual #197                // Method putArray:(I[CII)Ljava/nio/CharBuffer;
        57: pop                     
        58: aload_0                 
        59: iload         4                 
        61: iload_3                 
        62: iadd                    
        63: invokevirtual #102                // Method position:(I)Ljava/nio/CharBuffer;
        66: pop                     
        67: aload_0                 
        68: areturn                 
      LineNumberTable:
        line 1215: 0
        line 1216: 7
        line 1217: 15
        line 1218: 23
        line 1219: 29
        line 1220: 40
        line 1222: 48
        line 1224: 58
        line 1225: 67
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       69     0  this   Ljava/nio/CharBuffer;
           0       69     1  src    [C
           0       69     2  offset I
           0       69     3  length I
          29       40     4  pos    I
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [int]
  
  public final java.nio.CharBuffer put(char[]);
    descriptor: ([C)Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: aload_1                 
         4: arraylength             
         5: invokevirtual #200                // Method put:([CII)Ljava/nio/CharBuffer;
         8: areturn                 
      LineNumberTable:
        line 1252: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/nio/CharBuffer;
           0        9     1  src    [C
  
  public java.nio.CharBuffer put(int, char[], int, int);
    descriptor: (I[CII)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=5, args_size=5
         0: aload_0                 
         1: invokevirtual #172                // Method isReadOnly:()Z
         4: ifeq          15                
         7: new           #175                // class java/nio/ReadOnlyBufferException
        10: dup                     
        11: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        14: athrow                  
        15: iload_1                 
        16: iload         4                 
        18: aload_0                 
        19: invokevirtual #46                 // Method limit:()I
        22: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        25: pop                     
        26: iload_3                 
        27: iload         4                 
        29: aload_2                 
        30: arraylength             
        31: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        34: pop                     
        35: aload_0                 
        36: iload_1                 
        37: aload_2                 
        38: iload_3                 
        39: iload         4                 
        41: invokevirtual #197                // Method putArray:(I[CII)Ljava/nio/CharBuffer;
        44: pop                     
        45: aload_0                 
        46: areturn                 
      LineNumberTable:
        line 1301: 0
        line 1302: 7
        line 1303: 15
        line 1304: 26
        line 1306: 35
        line 1308: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       47     0  this   Ljava/nio/CharBuffer;
           0       47     1  index  I
           0       47     2  src    [C
           0       47     3  offset I
           0       47     4  length I
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
  
  public java.nio.CharBuffer put(int, char[]);
    descriptor: (I[C)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=3, args_size=3
         0: aload_0                 
         1: iload_1                 
         2: aload_2                 
         3: iconst_0                
         4: aload_2                 
         5: arraylength             
         6: invokevirtual #202                // Method put:(I[CII)Ljava/nio/CharBuffer;
         9: areturn                 
      LineNumberTable:
        line 1342: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       10     0  this   Ljava/nio/CharBuffer;
           0       10     1  index  I
           0       10     2  src    [C
  
  java.nio.CharBuffer putArray(int, char[], int, int);
    descriptor: (I[CII)Ljava/nio/CharBuffer;
    flags: (0x0000) 
    Code: 
      stack=13, locals=12, args_size=5
         0: aload_0                 
         1: invokevirtual #109                // Method isAddressable:()Z
         4: ifeq          126               
         7: iload         4                 
         9: i2l                     
        10: iconst_1                
        11: lshl                    
        12: ldc2_w        #115                // long 6l
        15: lcmp                    
        16: ifle          126               
        19: aload_0                 
        20: getfield      #117                // Field address:J
        23: iload_1                 
        24: i2l                     
        25: iconst_1                
        26: lshl                    
        27: ladd                    
        28: lstore        5                 
        30: getstatic     #121                // Field ARRAY_BASE_OFFSET:J
        33: iload_3                 
        34: i2l                     
        35: iconst_1                
        36: lshl                    
        37: ladd                    
        38: lstore        7                 
        40: iload         4                 
        42: i2l                     
        43: iconst_1                
        44: lshl                    
        45: lstore        9                 
        47: aload_0                 
        48: invokevirtual #124                // Method order:()Ljava/nio/ByteOrder;
        51: invokestatic  #128                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
        54: if_acmpeq     85                
        57: getstatic     #133                // Field SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
        60: aconst_null             
        61: aload_0                 
        62: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
        65: aload_2                 
        66: lload         7                 
        68: aload_0                 
        69: invokevirtual #141                // Method base:()Ljava/lang/Object;
        72: lload         5                 
        74: lload         9                 
        76: ldc2_w        #147                // long 2l
        79: invokevirtual #149                // Method jdk/internal/misc/ScopedMemoryAccess.copySwapMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
        82: goto          107               
        85: getstatic     #133                // Field SCOPED_MEMORY_ACCESS:Ljdk/internal/misc/ScopedMemoryAccess;
        88: aconst_null             
        89: aload_0                 
        90: invokevirtual #137                // Method session:()Ljdk/internal/foreign/MemorySessionImpl;
        93: aload_2                 
        94: lload         7                 
        96: aload_0                 
        97: invokevirtual #141                // Method base:()Ljava/lang/Object;
       100: lload         5                 
       102: lload         9                 
       104: invokevirtual #155                // Method jdk/internal/misc/ScopedMemoryAccess.copyMemory:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
       107: aload_0                 
       108: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       111: goto          123               
       114: astore        11                
       116: aload_0                 
       117: invokestatic  #159                // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
       120: aload         11                
       122: athrow                  
       123: goto          165               
       126: iload_3                 
       127: iload         4                 
       129: iadd                    
       130: istore        5                 
       132: iload_3                 
       133: istore        6                 
       135: iload_1                 
       136: istore        7                 
       138: iload         6                 
       140: iload         5                 
       142: if_icmpge     165               
       145: aload_0                 
       146: iload         7                 
       148: aload_2                 
       149: iload         6                 
       151: caload                  
       152: invokevirtual #194                // Method put:(IC)Ljava/nio/CharBuffer;
       155: pop                     
       156: iinc          6, 1              
       159: iinc          7, 1              
       162: goto          138               
       165: aload_0                 
       166: areturn                 
      Exception table:
          from       to target type
            47      107   114  any
           114      116   114  any
      LineNumberTable:
        line 1347: 0
        line 1349: 1
        line 1352: 19
        line 1353: 30
        line 1355: 40
        line 1359: 47
        line 1360: 57
        line 1361: 62
        line 1362: 69
        line 1360: 79
        line 1365: 85
        line 1366: 90
        line 1367: 97
        line 1365: 104
        line 1369: 107
        line 1370: 111
        line 1369: 114
        line 1370: 120
        line 1371: 123
        line 1372: 126
        line 1373: 132
        line 1374: 145
        line 1373: 156
        line 1376: 165
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          30       93     5  bufAddr J
          40       83     7  srcOffset J
          47       76     9  len    J
         135       30     6  i      I
         138       27     7  j      I
         132       33     5  end    I
           0      167     0  this   Ljava/nio/CharBuffer;
           0      167     1  index  I
           0      167     2  src    [C
           0      167     3  offset I
           0      167     4  length I
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 85
          locals = [long, long, long]
        frame_type = 21 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 248 /* chop */
          offset_delta = 8
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 11
          locals = [int, int, int]
        frame_type = 248 /* chop */
          offset_delta = 26
  
  public java.nio.CharBuffer put(java.lang.String, int, int);
    descriptor: (Ljava/lang/String;II)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=5, args_size=4
         0: iload_2                 
         1: iload_3                 
         2: iload_2                 
         3: isub                    
         4: aload_1                 
         5: invokevirtual #204                // Method java/lang/String.length:()I
         8: invokestatic  #89                 // Method java/util/Objects.checkFromIndexSize:(III)I
        11: pop                     
        12: aload_0                 
        13: invokevirtual #172                // Method isReadOnly:()Z
        16: ifeq          27                
        19: new           #175                // class java/nio/ReadOnlyBufferException
        22: dup                     
        23: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        26: athrow                  
        27: iload_3                 
        28: iload_2                 
        29: isub                    
        30: aload_0                 
        31: invokevirtual #60                 // Method remaining:()I
        34: if_icmple     45                
        37: new           #178                // class java/nio/BufferOverflowException
        40: dup                     
        41: invokespecial #180                // Method java/nio/BufferOverflowException."<init>":()V
        44: athrow                  
        45: iload_2                 
        46: istore        4                 
        48: iload         4                 
        50: iload_3                 
        51: if_icmpge     71                
        54: aload_0                 
        55: aload_1                 
        56: iload         4                 
        58: invokevirtual #207                // Method java/lang/String.charAt:(I)C
        61: invokevirtual #210                // Method put:(C)Ljava/nio/CharBuffer;
        64: pop                     
        65: iinc          4, 1              
        68: goto          48                
        71: aload_0                 
        72: areturn                 
      LineNumberTable:
        line 1438: 0
        line 1439: 12
        line 1440: 19
        line 1441: 27
        line 1442: 37
        line 1443: 45
        line 1444: 54
        line 1443: 65
        line 1445: 71
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          48       23     4  i      I
           0       73     0  this   Ljava/nio/CharBuffer;
           0       73     1  src    Ljava/lang/String;
           0       73     2  start  I
           0       73     3  end    I
      StackMapTable: number_of_entries = 4
        frame_type = 27 /* same */
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [int]
        frame_type = 250 /* chop */
          offset_delta = 22
  
  public final java.nio.CharBuffer put(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: aload_1                 
         4: invokevirtual #204                // Method java/lang/String.length:()I
         7: invokevirtual #213                // Method put:(Ljava/lang/String;II)Ljava/nio/CharBuffer;
        10: areturn                 
      LineNumberTable:
        line 1471: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  this   Ljava/nio/CharBuffer;
           0       11     1  src    Ljava/lang/String;
  
  public final boolean hasArray();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field hb:[C
         4: ifnull        18                
         7: aload_0                 
         8: getfield      #216                // Field isReadOnly:Z
        11: ifne          18                
        14: iconst_1                
        15: goto          19                
        18: iconst_0                
        19: ireturn                 
      LineNumberTable:
        line 1491: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/nio/CharBuffer;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public final char[] array();
    descriptor: ()[C
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field hb:[C
         4: ifnonnull     15                
         7: new           #218                // class java/lang/UnsupportedOperationException
        10: dup                     
        11: invokespecial #220                // Method java/lang/UnsupportedOperationException."<init>":()V
        14: athrow                  
        15: aload_0                 
        16: getfield      #216                // Field isReadOnly:Z
        19: ifeq          30                
        22: new           #175                // class java/nio/ReadOnlyBufferException
        25: dup                     
        26: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        29: athrow                  
        30: aload_0                 
        31: getfield      #7                  // Field hb:[C
        34: areturn                 
      LineNumberTable:
        line 1514: 0
        line 1515: 7
        line 1516: 15
        line 1517: 22
        line 1518: 30
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljava/nio/CharBuffer;
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 14 /* same */
  
  public final int arrayOffset();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field hb:[C
         4: ifnonnull     15                
         7: new           #218                // class java/lang/UnsupportedOperationException
        10: dup                     
        11: invokespecial #220                // Method java/lang/UnsupportedOperationException."<init>":()V
        14: athrow                  
        15: aload_0                 
        16: getfield      #216                // Field isReadOnly:Z
        19: ifeq          30                
        22: new           #175                // class java/nio/ReadOnlyBufferException
        25: dup                     
        26: invokespecial #177                // Method java/nio/ReadOnlyBufferException."<init>":()V
        29: athrow                  
        30: aload_0                 
        31: getfield      #13                 // Field offset:I
        34: ireturn                 
      LineNumberTable:
        line 1542: 0
        line 1543: 7
        line 1544: 15
        line 1545: 22
        line 1546: 30
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljava/nio/CharBuffer;
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 14 /* same */
  
  public final java.nio.CharBuffer position(int);
    descriptor: (I)Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokespecial #221                // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
         5: pop                     
         6: aload_0                 
         7: areturn                 
      LineNumberTable:
        line 1561: 0
        line 1562: 6
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/nio/CharBuffer;
           0        8     1  newPosition I
  
  public final java.nio.CharBuffer limit(int);
    descriptor: (I)Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokespecial #224                // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
         5: pop                     
         6: aload_0                 
         7: areturn                 
      LineNumberTable:
        line 1575: 0
        line 1576: 6
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/nio/CharBuffer;
           0        8     1  newLimit I
  
  public final java.nio.CharBuffer mark();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #226                // Method java/nio/Buffer.mark:()Ljava/nio/Buffer;
         4: pop                     
         5: aload_0                 
         6: areturn                 
      LineNumberTable:
        line 1589: 0
        line 1590: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
  
  public final java.nio.CharBuffer reset();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #230                // Method java/nio/Buffer.reset:()Ljava/nio/Buffer;
         4: pop                     
         5: aload_0                 
         6: areturn                 
      LineNumberTable:
        line 1603: 0
        line 1604: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
  
  public final java.nio.CharBuffer clear();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #233                // Method java/nio/Buffer.clear:()Ljava/nio/Buffer;
         4: pop                     
         5: aload_0                 
         6: areturn                 
      LineNumberTable:
        line 1617: 0
        line 1618: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
  
  public final java.nio.CharBuffer flip();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #236                // Method java/nio/Buffer.flip:()Ljava/nio/Buffer;
         4: pop                     
         5: aload_0                 
         6: areturn                 
      LineNumberTable:
        line 1631: 0
        line 1632: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
  
  public final java.nio.CharBuffer rewind();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #239                // Method java/nio/Buffer.rewind:()Ljava/nio/Buffer;
         4: pop                     
         5: aload_0                 
         6: areturn                 
      LineNumberTable:
        line 1645: 0
        line 1646: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
  
  public abstract java.nio.CharBuffer compact();
    descriptor: ()Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public abstract boolean isDirect();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  boolean isAddressable();
    descriptor: ()Z
    flags: (0x0000) 
    Code: 
      stack=1, locals=1, args_size=1
         0: iconst_1                
         1: ireturn                 
      LineNumberTable:
        line 1708: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        2     0  this   Ljava/nio/CharBuffer;
  
  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=4, args_size=1
         0: iconst_1                
         1: istore_1                
         2: aload_0                 
         3: invokevirtual #50                 // Method position:()I
         6: istore_2                
         7: aload_0                 
         8: invokevirtual #46                 // Method limit:()I
        11: iconst_1                
        12: isub                    
        13: istore_3                
        14: iload_3                 
        15: iload_2                 
        16: if_icmplt     36                
        19: bipush        31                
        21: iload_1                 
        22: imul                    
        23: aload_0                 
        24: iload_3                 
        25: invokevirtual #165                // Method get:(I)C
        28: iadd                    
        29: istore_1                
        30: iinc          3, -1             
        33: goto          14                
        36: iload_1                 
        37: ireturn                 
      LineNumberTable:
        line 1746: 0
        line 1747: 2
        line 1748: 7
        line 1752: 19
        line 1748: 30
        line 1754: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14       22     3  i      I
           0       38     0  this   Ljava/nio/CharBuffer;
           2       36     1  h      I
           7       31     2  p      I
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 14
          locals = [int, int, int]
        frame_type = 250 /* chop */
          offset_delta = 21
  
  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=7, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: if_acmpne     7                 
         5: iconst_1                
         6: ireturn                 
         7: aload_1                 
         8: instanceof    #8                  // class java/nio/CharBuffer
        11: ifne          16                
        14: iconst_0                
        15: ireturn                 
        16: aload_1                 
        17: checkcast     #8                  // class java/nio/CharBuffer
        20: astore_2                
        21: aload_0                 
        22: invokevirtual #50                 // Method position:()I
        25: istore_3                
        26: aload_0                 
        27: invokevirtual #46                 // Method limit:()I
        30: iload_3                 
        31: isub                    
        32: istore        4                 
        34: aload_2                 
        35: invokevirtual #50                 // Method position:()I
        38: istore        5                 
        40: aload_2                 
        41: invokevirtual #46                 // Method limit:()I
        44: iload         5                 
        46: isub                    
        47: istore        6                 
        49: iload         4                 
        51: iflt          61                
        54: iload         4                 
        56: iload         6                 
        58: if_icmpeq     63                
        61: iconst_0                
        62: ireturn                 
        63: aload_0                 
        64: iload_3                 
        65: aload_2                 
        66: iload         5                 
        68: iload         4                 
        70: invokestatic  #242                // Method java/nio/BufferMismatch.mismatch:(Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I
        73: ifge          80                
        76: iconst_1                
        77: goto          81                
        80: iconst_0                
        81: ireturn                 
      LineNumberTable:
        line 1790: 0
        line 1791: 5
        line 1792: 7
        line 1793: 14
        line 1794: 16
        line 1795: 21
        line 1796: 26
        line 1797: 34
        line 1798: 40
        line 1799: 49
        line 1800: 61
        line 1801: 63
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       82     0  this   Ljava/nio/CharBuffer;
           0       82     1  ob     Ljava/lang/Object;
          21       61     2  that   Ljava/nio/CharBuffer;
          26       56     3  thisPos I
          34       48     4  thisRem I
          40       42     5  thatPos I
          49       33     6  thatRem I
      StackMapTable: number_of_entries = 6
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [class java/nio/CharBuffer, class java/lang/Object, class java/nio/CharBuffer, int, int, int, int]
          stack = []
        frame_type = 1 /* same */
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public int compareTo(java.nio.CharBuffer);
    descriptor: (Ljava/nio/CharBuffer;)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=8, args_size=2
         0: aload_0                 
         1: invokevirtual #50                 // Method position:()I
         4: istore_2                
         5: aload_0                 
         6: invokevirtual #46                 // Method limit:()I
         9: iload_2                 
        10: isub                    
        11: istore_3                
        12: aload_1                 
        13: invokevirtual #50                 // Method position:()I
        16: istore        4                 
        18: aload_1                 
        19: invokevirtual #46                 // Method limit:()I
        22: iload         4                 
        24: isub                    
        25: istore        5                 
        27: iload_3                 
        28: iload         5                 
        30: invokestatic  #63                 // Method java/lang/Math.min:(II)I
        33: istore        6                 
        35: iload         6                 
        37: ifge          42                
        40: iconst_m1               
        41: ireturn                 
        42: aload_0                 
        43: iload_2                 
        44: aload_1                 
        45: iload         4                 
        47: iload         6                 
        49: invokestatic  #242                // Method java/nio/BufferMismatch.mismatch:(Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I
        52: istore        7                 
        54: iload         7                 
        56: iflt          80                
        59: aload_0                 
        60: iload_2                 
        61: iload         7                 
        63: iadd                    
        64: invokevirtual #165                // Method get:(I)C
        67: aload_1                 
        68: iload         4                 
        70: iload         7                 
        72: iadd                    
        73: invokevirtual #165                // Method get:(I)C
        76: invokestatic  #248                // Method compare:(CC)I
        79: ireturn                 
        80: iload_3                 
        81: iload         5                 
        83: isub                    
        84: ireturn                 
      LineNumberTable:
        line 1830: 0
        line 1831: 5
        line 1832: 12
        line 1833: 18
        line 1834: 27
        line 1835: 35
        line 1836: 40
        line 1837: 42
        line 1840: 54
        line 1841: 59
        line 1843: 80
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       85     0  this   Ljava/nio/CharBuffer;
           0       85     1  that   Ljava/nio/CharBuffer;
           5       80     2  thisPos I
          12       73     3  thisRem I
          18       67     4  thatPos I
          27       58     5  thatRem I
          35       50     6  length I
          54       31     7  i      I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [class java/nio/CharBuffer, class java/nio/CharBuffer, int, int, int, int, int]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [int]
  
  private static int compare(char, char);
    descriptor: (CC)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: iload_1                 
         2: invokestatic  #252                // Method java/lang/Character.compare:(CC)I
         5: ireturn                 
      LineNumberTable:
        line 1853: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  x      C
           0        6     1  y      C
  
  public int mismatch(java.nio.CharBuffer);
    descriptor: (Ljava/nio/CharBuffer;)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=8, args_size=2
         0: aload_0                 
         1: invokevirtual #50                 // Method position:()I
         4: istore_2                
         5: aload_0                 
         6: invokevirtual #46                 // Method limit:()I
         9: iload_2                 
        10: isub                    
        11: istore_3                
        12: aload_1                 
        13: invokevirtual #50                 // Method position:()I
        16: istore        4                 
        18: aload_1                 
        19: invokevirtual #46                 // Method limit:()I
        22: iload         4                 
        24: isub                    
        25: istore        5                 
        27: iload_3                 
        28: iload         5                 
        30: invokestatic  #63                 // Method java/lang/Math.min:(II)I
        33: istore        6                 
        35: iload         6                 
        37: ifge          42                
        40: iconst_m1               
        41: ireturn                 
        42: aload_0                 
        43: iload_2                 
        44: aload_1                 
        45: iload         4                 
        47: iload         6                 
        49: invokestatic  #242                // Method java/nio/BufferMismatch.mismatch:(Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I
        52: istore        7                 
        54: iload         7                 
        56: iconst_m1               
        57: if_icmpne     71                
        60: iload_3                 
        61: iload         5                 
        63: if_icmpeq     71                
        66: iload         6                 
        68: goto          73                
        71: iload         7                 
        73: ireturn                 
      LineNumberTable:
        line 1882: 0
        line 1883: 5
        line 1884: 12
        line 1885: 18
        line 1886: 27
        line 1887: 35
        line 1888: 40
        line 1889: 42
        line 1892: 54
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       74     0  this   Ljava/nio/CharBuffer;
           0       74     1  that   Ljava/nio/CharBuffer;
           5       69     2  thisPos I
          12       62     3  thisRem I
          18       56     4  thatPos I
          27       47     5  thatRem I
          35       39     6  length I
          54       20     7  r      I
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [class java/nio/CharBuffer, class java/nio/CharBuffer, int, int, int, int, int]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [int]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: aload_0                 
         2: invokevirtual #50                 // Method position:()I
         5: aload_0                 
         6: invokevirtual #46                 // Method limit:()I
         9: invokevirtual #253                // Method toString:(II)Ljava/lang/String;
        12: areturn                 
      LineNumberTable:
        line 1910: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  this   Ljava/nio/CharBuffer;
  
  abstract java.lang.String toString(int, int);
    descriptor: (II)Ljava/lang/String;
    flags: (0x0400) ACC_ABSTRACT
  
  public final int length();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #60                 // Method remaining:()I
         4: ireturn                 
      LineNumberTable:
        line 1929: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public final boolean isEmpty();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #60                 // Method remaining:()I
         4: ifne          11                
         7: iconst_1                
         8: goto          12                
        11: iconst_0                
        12: ireturn                 
      LineNumberTable:
        line 1941: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  this   Ljava/nio/CharBuffer;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public final char charAt(int);
    descriptor: (I)C
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=5, locals=2, args_size=2
         0: aload_0                 
         1: aload_0                 
         2: invokevirtual #50                 // Method position:()I
         5: aload_0                 
         6: iload_1                 
         7: iconst_1                
         8: invokevirtual #257                // Method checkIndex:(II)I
        11: iadd                    
        12: invokevirtual #165                // Method get:(I)C
        15: ireturn                 
      LineNumberTable:
        line 1959: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  this   Ljava/nio/CharBuffer;
           0       16     1  index  I
  
  public abstract java.nio.CharBuffer subSequence(int, int);
    descriptor: (II)Ljava/nio/CharBuffer;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  public java.nio.CharBuffer append(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=3, args_size=2
         0: aload_1                 
         1: ifnonnull     12                
         4: aload_0                 
         5: ldc_w         #260                // String null
         8: invokevirtual #262                // Method put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
        11: areturn                 
        12: aload_1                 
        13: instanceof    #8                  // class java/nio/CharBuffer
        16: ifeq          30                
        19: aload_1                 
        20: checkcast     #8                  // class java/nio/CharBuffer
        23: astore_2                
        24: aload_0                 
        25: aload_2                 
        26: invokevirtual #72                 // Method put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
        29: areturn                 
        30: aload_0                 
        31: aload_1                 
        32: invokeinterface #265, 1             // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
        37: invokevirtual #262                // Method put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
        40: areturn                 
      LineNumberTable:
        line 2031: 0
        line 2032: 4
        line 2033: 12
        line 2034: 24
        line 2036: 30
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          24        6     2  cb     Ljava/nio/CharBuffer;
           0       41     0  this   Ljava/nio/CharBuffer;
           0       41     1  csq    Ljava/lang/CharSequence;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 17 /* same */
  
  public java.nio.CharBuffer append(java.lang.CharSequence, int, int);
    descriptor: (Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=9, args_size=4
         0: aload_1                 
         1: instanceof    #8                  // class java/nio/CharBuffer
         4: ifeq          99                
         7: aload_1                 
         8: checkcast     #8                  // class java/nio/CharBuffer
        11: astore        4                 
        13: iload_2                 
        14: iload_3                 
        15: aload_1                 
        16: invokeinterface #81, 1              // InterfaceMethod java/lang/CharSequence.length:()I
        21: invokestatic  #268                // Method java/util/Objects.checkFromToIndex:(III)I
        24: pop                     
        25: iload_3                 
        26: iload_2                 
        27: isub                    
        28: istore        5                 
        30: aload_0                 
        31: invokevirtual #50                 // Method position:()I
        34: istore        6                 
        36: aload_0                 
        37: invokevirtual #46                 // Method limit:()I
        40: istore        7                 
        42: iload         6                 
        44: iload         7                 
        46: if_icmpgt     57                
        49: iload         7                 
        51: iload         6                 
        53: isub                    
        54: goto          58                
        57: iconst_0                
        58: istore        8                 
        60: iload         5                 
        62: iload         8                 
        64: if_icmple     75                
        67: new           #178                // class java/nio/BufferOverflowException
        70: dup                     
        71: invokespecial #180                // Method java/nio/BufferOverflowException."<init>":()V
        74: athrow                  
        75: aload_0                 
        76: iload         6                 
        78: aload         4                 
        80: iload_2                 
        81: iload         5                 
        83: invokevirtual #271                // Method put:(ILjava/nio/CharBuffer;II)Ljava/nio/CharBuffer;
        86: pop                     
        87: aload_0                 
        88: iload         6                 
        90: iload         5                 
        92: iadd                    
        93: invokevirtual #102                // Method position:(I)Ljava/nio/CharBuffer;
        96: pop                     
        97: aload_0                 
        98: areturn                 
        99: aload_1                 
       100: ifnonnull     109               
       103: ldc_w         #260                // String null
       106: goto          110               
       109: aload_1                 
       110: astore        4                 
       112: aload_0                 
       113: aload         4                 
       115: iload_2                 
       116: iload_3                 
       117: invokeinterface #274, 3             // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
       122: invokeinterface #265, 1             // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
       127: invokevirtual #262                // Method put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
       130: areturn                 
      LineNumberTable:
        line 2073: 0
        line 2074: 13
        line 2080: 25
        line 2081: 30
        line 2082: 36
        line 2083: 42
        line 2084: 60
        line 2085: 67
        line 2087: 75
        line 2088: 87
        line 2089: 97
        line 2091: 99
        line 2092: 112
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          30       69     5  length I
          36       63     6  pos    I
          42       57     7  lim    I
          60       39     8  rem    I
          13       86     4  cb     Ljava/nio/CharBuffer;
           0      131     0  this   Ljava/nio/CharBuffer;
           0      131     1  csq    Ljava/lang/CharSequence;
           0      131     2  start  I
           0      131     3  end    I
         112       19     4  cs     Ljava/lang/CharSequence;
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [class java/nio/CharBuffer, class java/lang/CharSequence, int, int, class java/nio/CharBuffer, int, int, int]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [int]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [class java/nio/CharBuffer, class java/lang/CharSequence, int, int]
          stack = []
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/CharSequence ]
  
  public java.nio.CharBuffer append(char);
    descriptor: (C)Ljava/nio/CharBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokevirtual #210                // Method put:(C)Ljava/nio/CharBuffer;
         5: areturn                 
      LineNumberTable:
        line 2120: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/nio/CharBuffer;
           0        6     1  c      C
  
  public abstract java.nio.ByteOrder order();
    descriptor: ()Ljava/nio/ByteOrder;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
  
  abstract java.nio.ByteOrder charRegionOrder();
    descriptor: ()Ljava/nio/ByteOrder;
    flags: (0x0400) ACC_ABSTRACT
  
  int scaleShifts();
    descriptor: ()I
    flags: (0x0000) 
    Code: 
      stack=1, locals=1, args_size=1
         0: iconst_2                
         1: invokestatic  #278                // Method java/lang/Integer.numberOfTrailingZeros:(I)I
         4: ireturn                 
      LineNumberTable:
        line 2331: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
    RuntimeVisibleAnnotations:
      0: #442()
        jdk.internal.vm.annotation.ForceInline
  
  jdk.internal.foreign.AbstractMemorySegmentImpl heapSegment(java.lang.Object, long, long, boolean, jdk.internal.foreign.MemorySessionImpl);
    descriptor: (Ljava/lang/Object;JJZLjdk/internal/foreign/MemorySessionImpl;)Ljdk/internal/foreign/AbstractMemorySegmentImpl;
    flags: (0x0000) 
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_1                 
         1: lload_2                 
         2: lload         4                 
         4: iload         6                 
         6: aload         7                 
         8: invokestatic  #284                // Method jdk/internal/foreign/SegmentFactories.arrayOfCharSegment:(Ljava/lang/Object;JJZLjdk/internal/foreign/MemorySessionImpl;)Ljdk/internal/foreign/HeapMemorySegmentImpl$OfChar;
        11: areturn                 
      LineNumberTable:
        line 2341: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       12     0  this   Ljava/nio/CharBuffer;
           0       12     1  base   Ljava/lang/Object;
           0       12     2  offset J
           0       12     4  length J
           0       12     6  readOnly Z
           0       12     7  bufferScope Ljdk/internal/foreign/MemorySessionImpl;
    RuntimeVisibleAnnotations:
      0: #442()
        jdk.internal.vm.annotation.ForceInline
  
  public java.util.stream.IntStream chars();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: invokedynamic #290, 0             // InvokeDynamic #0:get:(Ljava/nio/CharBuffer;)Ljava/util/function/Supplier;
         6: sipush        16464             
         9: iconst_0                
        10: invokestatic  #293                // Method java/util/stream/StreamSupport.intStream:(Ljava/util/function/Supplier;IZ)Ljava/util/stream/IntStream;
        13: areturn                 
      LineNumberTable:
        line 2350: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer duplicate();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #299                // Method duplicate:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer slice(int, int);
    descriptor: (II)Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=3, locals=3, args_size=3
         0: aload_0                 
         1: iload_1                 
         2: iload_2                 
         3: invokevirtual #303                // Method slice:(II)Ljava/nio/CharBuffer;
         6: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
      <no name>                        synthetic 
  
  public java.nio.Buffer slice();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #307                // Method slice:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.lang.Object array();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #309                // Method array:()[C
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer rewind();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #313                // Method rewind:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer flip();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #315                // Method flip:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer clear();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #317                // Method clear:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer reset();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #319                // Method reset:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer mark();
    descriptor: ()Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #321                // Method mark:()Ljava/nio/CharBuffer;
         4: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/CharBuffer;
  
  public java.nio.Buffer limit(int);
    descriptor: (I)Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokevirtual #69                 // Method limit:(I)Ljava/nio/CharBuffer;
         5: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/nio/CharBuffer;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public java.nio.Buffer position(int);
    descriptor: (I)Ljava/nio/Buffer;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokevirtual #102                // Method position:(I)Ljava/nio/CharBuffer;
         5: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/nio/CharBuffer;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: checkcast     #8                  // class java/nio/CharBuffer
         5: invokevirtual #323                // Method compareTo:(Ljava/nio/CharBuffer;)I
         8: ireturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/nio/CharBuffer;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public java.lang.Appendable append(char) throws java.io.IOException;
    descriptor: (C)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: invokevirtual #327                // Method append:(C)Ljava/nio/CharBuffer;
         5: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/nio/CharBuffer;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: iload_2                 
         3: iload_3                 
         4: invokevirtual #330                // Method append:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
         7: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/nio/CharBuffer;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
      <no name>                        synthetic 
      <no name>                        synthetic 
  
  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokevirtual #332                // Method append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
         5: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/nio/CharBuffer;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
  
  public java.lang.CharSequence subSequence(int, int);
    descriptor: (II)Ljava/lang/CharSequence;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=3, locals=3, args_size=3
         0: aload_0                 
         1: iload_1                 
         2: iload_2                 
         3: invokevirtual #335                // Method subSequence:(II)Ljava/nio/CharBuffer;
         6: areturn                 
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/nio/CharBuffer;
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
      <no name>                        synthetic 
  
  private java.util.Spliterator$OfInt lambda$chars$0();
    descriptor: ()Ljava/util/Spliterator$OfInt;
    flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC
    Code: 
      stack=3, locals=1, args_size=1
         0: new           #337                // class java/nio/CharBufferSpliterator
         3: dup                     
         4: aload_0                 
         5: invokespecial #339                // Method java/nio/CharBufferSpliterator."<init>":(Ljava/nio/CharBuffer;)V
         8: areturn                 
      LineNumberTable:
        line 2350: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/nio/CharBuffer;
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: ldc           #8                  // class java/nio/CharBuffer
         2: invokevirtual #342                // Method java/lang/Class.desiredAssertionStatus:()Z
         5: ifne          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: putstatic     #53                 // Field $assertionsDisabled:Z
        16: getstatic     #345                // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        19: ldc_w         #349                // class "[C"
        22: invokevirtual #350                // Method jdk/internal/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
        25: i2l                     
        26: putstatic     #121                // Field ARRAY_BASE_OFFSET:J
        29: return                  
      LineNumberTable:
        line 292: 0
        line 307: 16
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
Signature: #460                        // Ljava/nio/Buffer;Ljava/lang/Comparable<Ljava/nio/CharBuffer;>;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/Readable;
SourceFile: "CharBuffer.java"
PermittedSubclasses:
  java/nio/StringCharBuffer
  java/nio/HeapCharBuffer
  java/nio/DirectCharBufferS
  java/nio/DirectCharBufferU
  java/nio/ByteBufferAsCharBufferB
  java/nio/ByteBufferAsCharBufferL
BootstrapMethods:
  0: #478 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #473 ()Ljava/lang/Object;
      #474 REF_invokeVirtual java/nio/CharBuffer.lambda$chars$0:()Ljava/util/Spliterator$OfInt;
      #477 ()Ljava/util/Spliterator$OfInt;
InnerClasses:
  public static final #490= #486 of #488;     // OfChar=class jdk/internal/foreign/HeapMemorySegmentImpl$OfChar of class jdk/internal/foreign/HeapMemorySegmentImpl
  public static #495= #491 of #493;           // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
  public static final #500= #496 of #498;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
