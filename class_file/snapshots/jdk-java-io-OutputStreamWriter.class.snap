---
source: class_file/src/lib.rs
expression: display
---
public class java.io.OutputStreamWriter extends java.io.Writer
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #21                      //java/io/OutputStreamWriter
  super_class: #2                      //java/io/Writer
  interfaces: 0, fields: 1, methods: 15, attributes: 1
Constant pool:
    #1 = Methodref          #2.#3            // java/io/Writer."<init>":(Ljava/lang/Object;)V
    #2 = Class              #4               // java/io/Writer
    #3 = NameAndType        #5:#6            // "<init>":(Ljava/lang/Object;)V
    #4 = Utf8               java/io/Writer
    #5 = Utf8               <init>
    #6 = Utf8               (Ljava/lang/Object;)V
    #7 = Class              #8               // java/lang/NullPointerException
    #8 = Utf8               java/lang/NullPointerException
    #9 = String             #10              // charsetName
   #10 = Utf8               charsetName
   #11 = Methodref          #7.#12           // java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
   #12 = NameAndType        #5:#13           // "<init>":(Ljava/lang/String;)V
   #13 = Utf8               (Ljava/lang/String;)V
   #14 = Methodref          #15.#16          // sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamEncoder;
   #15 = Class              #17              // sun/nio/cs/StreamEncoder
   #16 = NameAndType        #18:#19          // forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamEncoder;
   #17 = Utf8               sun/nio/cs/StreamEncoder
   #18 = Utf8               forOutputStreamWriter
   #19 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamEncoder;
   #20 = Fieldref           #21.#22          // java/io/OutputStreamWriter.se:Lsun/nio/cs/StreamEncoder;
   #21 = Class              #23              // java/io/OutputStreamWriter
   #22 = NameAndType        #24:#25          // se:Lsun/nio/cs/StreamEncoder;
   #23 = Utf8               java/io/OutputStreamWriter
   #24 = Utf8               se
   #25 = Utf8               Lsun/nio/cs/StreamEncoder;
   #26 = Class              #27              // java/io/PrintStream
   #27 = Utf8               java/io/PrintStream
   #28 = Methodref          #26.#29          // java/io/PrintStream.charset:()Ljava/nio/charset/Charset;
   #29 = NameAndType        #30:#31          // charset:()Ljava/nio/charset/Charset;
   #30 = Utf8               charset
   #31 = Utf8               ()Ljava/nio/charset/Charset;
   #32 = Methodref          #33.#34          // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
   #33 = Class              #35              // java/nio/charset/Charset
   #34 = NameAndType        #36:#31          // defaultCharset:()Ljava/nio/charset/Charset;
   #35 = Utf8               java/nio/charset/Charset
   #36 = Utf8               defaultCharset
   #37 = Methodref          #15.#38          // sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamEncoder;
   #38 = NameAndType        #18:#39          // forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamEncoder;
   #39 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamEncoder;
   #40 = String             #30              // charset
   #41 = String             #42              // charset encoder
   #42 = Utf8               charset encoder
   #43 = Methodref          #15.#44          // sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetEncoder;)Lsun/nio/cs/StreamEncoder;
   #44 = NameAndType        #18:#45          // forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetEncoder;)Lsun/nio/cs/StreamEncoder;
   #45 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetEncoder;)Lsun/nio/cs/StreamEncoder;
   #46 = Methodref          #15.#47          // sun/nio/cs/StreamEncoder.getEncoding:()Ljava/lang/String;
   #47 = NameAndType        #48:#49          // getEncoding:()Ljava/lang/String;
   #48 = Utf8               getEncoding
   #49 = Utf8               ()Ljava/lang/String;
   #50 = Methodref          #15.#51          // sun/nio/cs/StreamEncoder.flushBuffer:()V
   #51 = NameAndType        #52:#53          // flushBuffer:()V
   #52 = Utf8               flushBuffer
   #53 = Utf8               ()V
   #54 = Methodref          #15.#55          // sun/nio/cs/StreamEncoder.write:(I)V
   #55 = NameAndType        #56:#57          // write:(I)V
   #56 = Utf8               write
   #57 = Utf8               (I)V
   #58 = Methodref          #15.#59          // sun/nio/cs/StreamEncoder.write:([CII)V
   #59 = NameAndType        #56:#60          // write:([CII)V
   #60 = Utf8               ([CII)V
   #61 = Methodref          #15.#62          // sun/nio/cs/StreamEncoder.write:(Ljava/lang/String;II)V
   #62 = NameAndType        #56:#63          // write:(Ljava/lang/String;II)V
   #63 = Utf8               (Ljava/lang/String;II)V
   #64 = String             #65              // null
   #65 = Utf8               null
   #66 = InterfaceMethodref #67.#68          // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
   #67 = Class              #69              // java/lang/CharSequence
   #68 = NameAndType        #70:#71          // subSequence:(II)Ljava/lang/CharSequence;
   #69 = Utf8               java/lang/CharSequence
   #70 = Utf8               subSequence
   #71 = Utf8               (II)Ljava/lang/CharSequence;
   #72 = Methodref          #21.#73          // java/io/OutputStreamWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #73 = NameAndType        #74:#75          // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
   #74 = Utf8               append
   #75 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;
   #76 = Class              #77              // java/nio/CharBuffer
   #77 = Utf8               java/nio/CharBuffer
   #78 = Methodref          #15.#79          // sun/nio/cs/StreamEncoder.write:(Ljava/nio/CharBuffer;)V
   #79 = NameAndType        #56:#80          // write:(Ljava/nio/CharBuffer;)V
   #80 = Utf8               (Ljava/nio/CharBuffer;)V
   #81 = Methodref          #82.#83          // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #82 = Class              #84              // java/lang/String
   #83 = NameAndType        #85:#86          // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #84 = Utf8               java/lang/String
   #85 = Utf8               valueOf
   #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #87 = Methodref          #15.#88          // sun/nio/cs/StreamEncoder.write:(Ljava/lang/String;)V
   #88 = NameAndType        #56:#13          // write:(Ljava/lang/String;)V
   #89 = Methodref          #15.#90          // sun/nio/cs/StreamEncoder.flush:()V
   #90 = NameAndType        #91:#53          // flush:()V
   #91 = Utf8               flush
   #92 = Methodref          #15.#93          // sun/nio/cs/StreamEncoder.close:()V
   #93 = NameAndType        #94:#53          // close:()V
   #94 = Utf8               close
   #95 = Methodref          #21.#96          // java/io/OutputStreamWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #96 = NameAndType        #74:#97          // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #97 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;
   #98 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V
   #99 = Utf8               Code
  #100 = Utf8               LineNumberTable
  #101 = Utf8               LocalVariableTable
  #102 = Utf8               this
  #103 = Utf8               Ljava/io/OutputStreamWriter;
  #104 = Utf8               out
  #105 = Utf8               Ljava/io/OutputStream;
  #106 = Utf8               Ljava/lang/String;
  #107 = Utf8               StackMapTable
  #108 = Class              #109             // java/io/OutputStream
  #109 = Utf8               java/io/OutputStream
  #110 = Utf8               Exceptions
  #111 = Class              #112             // java/io/UnsupportedEncodingException
  #112 = Utf8               java/io/UnsupportedEncodingException
  #113 = Utf8               (Ljava/io/OutputStream;)V
  #114 = Utf8               ps
  #115 = Utf8               Ljava/io/PrintStream;
  #116 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
  #117 = Utf8               cs
  #118 = Utf8               Ljava/nio/charset/Charset;
  #119 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V
  #120 = Utf8               enc
  #121 = Utf8               Ljava/nio/charset/CharsetEncoder;
  #122 = Class              #123             // java/nio/charset/CharsetEncoder
  #123 = Utf8               java/nio/charset/CharsetEncoder
  #124 = Class              #125             // java/io/IOException
  #125 = Utf8               java/io/IOException
  #126 = Utf8               c
  #127 = Utf8               I
  #128 = Utf8               cbuf
  #129 = Utf8               [C
  #130 = Utf8               off
  #131 = Utf8               len
  #132 = Utf8               str
  #133 = Utf8               csq
  #134 = Utf8               Ljava/lang/CharSequence;
  #135 = Utf8               start
  #136 = Utf8               end
  #137 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
  #138 = Utf8               MethodParameters
  #139 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
  #140 = Utf8               SourceFile
  #141 = Utf8               OutputStreamWriter.java
{
  private final sun.nio.cs.StreamEncoder se;
    descriptor: Lsun/nio/cs/StreamEncoder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  public java.io.OutputStreamWriter(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException;
    descriptor: (Ljava/io/OutputStream;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: invokespecial #1                  // Method java/io/Writer."<init>":(Ljava/lang/Object;)V
         5: aload_2                 
         6: ifnonnull     19                
         9: new           #7                  // class java/lang/NullPointerException
        12: dup                     
        13: ldc           #9                  // String charsetName
        15: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        18: athrow                  
        19: aload_0                 
        20: aload_1                 
        21: aload_0                 
        22: aload_2                 
        23: invokestatic  #14                 // Method sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamEncoder;
        26: putfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
        29: return                  
      LineNumberTable:
        line 93: 0
        line 94: 5
        line 95: 9
        line 96: 19
        line 97: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  this   Ljava/io/OutputStreamWriter;
           0       30     1  out    Ljava/io/OutputStream;
           0       30     2  charsetName Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [class java/io/OutputStreamWriter, class java/io/OutputStream, class java/lang/String]
          stack = []
    Exceptions:
      throws java.io.UnsupportedEncodingException
  
  public java.io.OutputStreamWriter(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokespecial #1                  // Method java/io/Writer."<init>":(Ljava/lang/Object;)V
         5: aload_0                 
         6: aload_1                 
         7: aload_0                 
         8: aload_1                 
         9: instanceof    #26                 // class java/io/PrintStream
        12: ifeq          27                
        15: aload_1                 
        16: checkcast     #26                 // class java/io/PrintStream
        19: astore_2                
        20: aload_2                 
        21: invokevirtual #28                 // Method java/io/PrintStream.charset:()Ljava/nio/charset/Charset;
        24: goto          30                
        27: invokestatic  #32                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
        30: invokestatic  #37                 // Method sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamEncoder;
        33: putfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
        36: return                  
      LineNumberTable:
        line 109: 0
        line 110: 5
        line 111: 8
        line 110: 30
        line 112: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          20        7     2  ps     Ljava/io/PrintStream;
           0       37     0  this   Ljava/io/OutputStreamWriter;
           0       37     1  out    Ljava/io/OutputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [class java/io/OutputStreamWriter, class java/io/OutputStream]
          stack = [class java/io/OutputStreamWriter, class java/io/OutputStream, class java/io/OutputStreamWriter]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [class java/io/OutputStreamWriter, class java/io/OutputStream]
          stack = [class java/io/OutputStreamWriter, class java/io/OutputStream, class java/io/OutputStreamWriter, class java/nio/charset/Charset]
  
  public java.io.OutputStreamWriter(java.io.OutputStream, java.nio.charset.Charset);
    descriptor: (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: invokespecial #1                  // Method java/io/Writer."<init>":(Ljava/lang/Object;)V
         5: aload_2                 
         6: ifnonnull     19                
         9: new           #7                  // class java/lang/NullPointerException
        12: dup                     
        13: ldc           #40                 // String charset
        15: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        18: athrow                  
        19: aload_0                 
        20: aload_1                 
        21: aload_0                 
        22: aload_2                 
        23: invokestatic  #37                 // Method sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamEncoder;
        26: putfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
        29: return                  
      LineNumberTable:
        line 127: 0
        line 128: 5
        line 129: 9
        line 130: 19
        line 131: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  this   Ljava/io/OutputStreamWriter;
           0       30     1  out    Ljava/io/OutputStream;
           0       30     2  cs     Ljava/nio/charset/Charset;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [class java/io/OutputStreamWriter, class java/io/OutputStream, class java/nio/charset/Charset]
          stack = []
  
  public java.io.OutputStreamWriter(java.io.OutputStream, java.nio.charset.CharsetEncoder);
    descriptor: (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: invokespecial #1                  // Method java/io/Writer."<init>":(Ljava/lang/Object;)V
         5: aload_2                 
         6: ifnonnull     19                
         9: new           #7                  // class java/lang/NullPointerException
        12: dup                     
        13: ldc           #41                 // String charset encoder
        15: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        18: athrow                  
        19: aload_0                 
        20: aload_1                 
        21: aload_0                 
        22: aload_2                 
        23: invokestatic  #43                 // Method sun/nio/cs/StreamEncoder.forOutputStreamWriter:(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetEncoder;)Lsun/nio/cs/StreamEncoder;
        26: putfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
        29: return                  
      LineNumberTable:
        line 146: 0
        line 147: 5
        line 148: 9
        line 149: 19
        line 150: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  this   Ljava/io/OutputStreamWriter;
           0       30     1  out    Ljava/io/OutputStream;
           0       30     2  enc    Ljava/nio/charset/CharsetEncoder;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [class java/io/OutputStreamWriter, class java/io/OutputStream, class java/nio/charset/CharsetEncoder]
          stack = []
  
  public java.lang.String getEncoding();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: invokevirtual #46                 // Method sun/nio/cs/StreamEncoder.getEncoding:()Ljava/lang/String;
         7: areturn                 
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/OutputStreamWriter;
  
  void flushBuffer() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0000) 
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: invokevirtual #50                 // Method sun/nio/cs/StreamEncoder.flushBuffer:()V
         7: return                  
      LineNumberTable:
        line 179: 0
        line 180: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/OutputStreamWriter;
    Exceptions:
      throws java.io.IOException
  
  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: iload_1                 
         5: invokevirtual #54                 // Method sun/nio/cs/StreamEncoder.write:(I)V
         8: return                  
      LineNumberTable:
        line 188: 0
        line 189: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/io/OutputStreamWriter;
           0        9     1  c      I
    Exceptions:
      throws java.io.IOException
  
  public void write(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: aload_1                 
         5: iload_2                 
         6: iload_3                 
         7: invokevirtual #58                 // Method sun/nio/cs/StreamEncoder.write:([CII)V
        10: return                  
      LineNumberTable:
        line 206: 0
        line 207: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  this   Ljava/io/OutputStreamWriter;
           0       11     1  cbuf   [C
           0       11     2  off    I
           0       11     3  len    I
    Exceptions:
      throws java.io.IOException
  
  public void write(java.lang.String, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/String;II)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: aload_1                 
         5: iload_2                 
         6: iload_3                 
         7: invokevirtual #61                 // Method sun/nio/cs/StreamEncoder.write:(Ljava/lang/String;II)V
        10: return                  
      LineNumberTable:
        line 224: 0
        line 225: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  this   Ljava/io/OutputStreamWriter;
           0       11     1  str    Ljava/lang/String;
           0       11     2  off    I
           0       11     3  len    I
    Exceptions:
      throws java.io.IOException
  
  public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_1                 
         1: ifnonnull     7                 
         4: ldc           #64                 // String null
         6: astore_1                
         7: aload_0                 
         8: aload_1                 
         9: iload_2                 
        10: iload_3                 
        11: invokeinterface #66, 3              // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
        16: invokevirtual #72                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
        19: areturn                 
      LineNumberTable:
        line 229: 0
        line 230: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/io/OutputStreamWriter;
           0       20     1  csq    Ljava/lang/CharSequence;
           0       20     2  start  I
           0       20     3  end    I
      StackMapTable: number_of_entries = 1
        frame_type = 7 /* same */
    Exceptions:
      throws java.io.IOException
  
  public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_1                 
         1: instanceof    #76                 // class java/nio/CharBuffer
         4: ifeq          21                
         7: aload_0                 
         8: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
        11: aload_1                 
        12: checkcast     #76                 // class java/nio/CharBuffer
        15: invokevirtual #78                 // Method sun/nio/cs/StreamEncoder.write:(Ljava/nio/CharBuffer;)V
        18: goto          32                
        21: aload_0                 
        22: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
        25: aload_1                 
        26: invokestatic  #81                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        29: invokevirtual #87                 // Method sun/nio/cs/StreamEncoder.write:(Ljava/lang/String;)V
        32: aload_0                 
        33: areturn                 
      LineNumberTable:
        line 235: 0
        line 236: 7
        line 238: 21
        line 240: 32
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljava/io/OutputStreamWriter;
           0       34     1  csq    Ljava/lang/CharSequence;
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 10 /* same */
    Exceptions:
      throws java.io.IOException
  
  public void flush() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: invokevirtual #89                 // Method sun/nio/cs/StreamEncoder.flush:()V
         7: return                  
      LineNumberTable:
        line 249: 0
        line 250: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/OutputStreamWriter;
    Exceptions:
      throws java.io.IOException
  
  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #20                 // Field se:Lsun/nio/cs/StreamEncoder;
         4: invokevirtual #92                 // Method sun/nio/cs/StreamEncoder.close:()V
         7: return                  
      LineNumberTable:
        line 253: 0
        line 254: 7
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/OutputStreamWriter;
    Exceptions:
      throws java.io.IOException
  
  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=4, locals=4, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: iload_2                 
         3: iload_3                 
         4: invokevirtual #95                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
         7: areturn                 
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        8     0  this   Ljava/io/OutputStreamWriter;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
      <no name>                        synthetic 
      <no name>                        synthetic 
  
  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: invokevirtual #72                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
         5: areturn                 
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/io/OutputStreamWriter;
    Exceptions:
      throws java.io.IOException
    MethodParameters:
      Name                             Flags
      <no name>                        synthetic 
}
SourceFile: "OutputStreamWriter.java"
