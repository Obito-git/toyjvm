---
source: class_file/src/lib.rs
expression: display
---
public class java.io.BufferedInputStream extends java.io.FilterInputStream
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                       //java/io/BufferedInputStream
  super_class: #48                     //java/io/FilterInputStream
  interfaces: 0, fields: 10, methods: 19, attributes: 1
Constant pool:
    #1 = Fieldref           #2.#3            // java/io/BufferedInputStream.in:Ljava/io/InputStream;
    #2 = Class              #4               // java/io/BufferedInputStream
    #3 = NameAndType        #5:#6            // in:Ljava/io/InputStream;
    #4 = Utf8               java/io/BufferedInputStream
    #5 = Utf8               in
    #6 = Utf8               Ljava/io/InputStream;
    #7 = Class              #8               // java/io/IOException
    #8 = Utf8               java/io/IOException
    #9 = String             #10              // Stream closed
   #10 = Utf8               Stream closed
   #11 = Methodref          #7.#12           // java/io/IOException."<init>":(Ljava/lang/String;)V
   #12 = NameAndType        #13:#14          // "<init>":(Ljava/lang/String;)V
   #13 = Utf8               <init>
   #14 = Utf8               (Ljava/lang/String;)V
   #15 = Fieldref           #2.#16           // java/io/BufferedInputStream.buf:[B
   #16 = NameAndType        #17:#18          // buf:[B
   #17 = Utf8               buf
   #18 = Utf8               [B
   #19 = Fieldref           #2.#20           // java/io/BufferedInputStream.EMPTY:[B
   #20 = NameAndType        #21:#18          // EMPTY:[B
   #21 = Utf8               EMPTY
   #22 = Fieldref           #2.#23           // java/io/BufferedInputStream.initialSize:I
   #23 = NameAndType        #24:#25          // initialSize:I
   #24 = Utf8               initialSize
   #25 = Utf8               I
   #26 = Fieldref           #2.#27           // java/io/BufferedInputStream.U:Ljdk/internal/misc/Unsafe;
   #27 = NameAndType        #28:#29          // U:Ljdk/internal/misc/Unsafe;
   #28 = Utf8               U
   #29 = Utf8               Ljdk/internal/misc/Unsafe;
   #30 = Fieldref           #2.#31           // java/io/BufferedInputStream.BUF_OFFSET:J
   #31 = NameAndType        #32:#33          // BUF_OFFSET:J
   #32 = Utf8               BUF_OFFSET
   #33 = Utf8               J
   #34 = Methodref          #35.#36          // jdk/internal/misc/Unsafe.compareAndSetReference:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
   #35 = Class              #37              // jdk/internal/misc/Unsafe
   #36 = NameAndType        #38:#39          // compareAndSetReference:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
   #37 = Utf8               jdk/internal/misc/Unsafe
   #38 = Utf8               compareAndSetReference
   #39 = Utf8               (Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
   #40 = Methodref          #2.#41           // java/io/BufferedInputStream.getBufIfOpen:(Z)[B
   #41 = NameAndType        #42:#43          // getBufIfOpen:(Z)[B
   #42 = Utf8               getBufIfOpen
   #43 = Utf8               (Z)[B
   #44 = Methodref          #2.#45           // java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;I)V
   #45 = NameAndType        #13:#46          // "<init>":(Ljava/io/InputStream;I)V
   #46 = Utf8               (Ljava/io/InputStream;I)V
   #47 = Methodref          #48.#49          // java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
   #48 = Class              #50              // java/io/FilterInputStream
   #49 = NameAndType        #13:#51          // "<init>":(Ljava/io/InputStream;)V
   #50 = Utf8               java/io/FilterInputStream
   #51 = Utf8               (Ljava/io/InputStream;)V
   #52 = Fieldref           #2.#53           // java/io/BufferedInputStream.markpos:I
   #53 = NameAndType        #54:#25          // markpos:I
   #54 = Utf8               markpos
   #55 = Class              #56              // java/lang/IllegalArgumentException
   #56 = Utf8               java/lang/IllegalArgumentException
   #57 = String             #58              // Buffer size <= 0
   #58 = Utf8               Buffer size <= 0
   #59 = Methodref          #55.#12          // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #60 = Methodref          #61.#62          // java/lang/Object.getClass:()Ljava/lang/Class;
   #61 = Class              #63              // java/lang/Object
   #62 = NameAndType        #64:#65          // getClass:()Ljava/lang/Class;
   #63 = Utf8               java/lang/Object
   #64 = Utf8               getClass
   #65 = Utf8               ()Ljava/lang/Class;
   #66 = Methodref          #2.#67           // java/io/BufferedInputStream.getBufIfOpen:()[B
   #67 = NameAndType        #42:#68          // getBufIfOpen:()[B
   #68 = Utf8               ()[B
   #69 = Fieldref           #2.#70           // java/io/BufferedInputStream.pos:I
   #70 = NameAndType        #71:#25          // pos:I
   #71 = Utf8               pos
   #72 = Methodref          #73.#74          // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   #73 = Class              #75              // java/lang/System
   #74 = NameAndType        #76:#77          // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   #75 = Utf8               java/lang/System
   #76 = Utf8               arraycopy
   #77 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
   #78 = Fieldref           #2.#79           // java/io/BufferedInputStream.marklimit:I
   #79 = NameAndType        #80:#25          // marklimit:I
   #80 = Utf8               marklimit
   #81 = Methodref          #82.#83          // jdk/internal/util/ArraysSupport.newLength:(III)I
   #82 = Class              #84              // jdk/internal/util/ArraysSupport
   #83 = NameAndType        #85:#86          // newLength:(III)I
   #84 = Utf8               jdk/internal/util/ArraysSupport
   #85 = Utf8               newLength
   #86 = Utf8               (III)I
   #87 = Fieldref           #2.#88           // java/io/BufferedInputStream.count:I
   #88 = NameAndType        #89:#25          // count:I
   #89 = Utf8               count
   #90 = Methodref          #2.#91           // java/io/BufferedInputStream.getInIfOpen:()Ljava/io/InputStream;
   #91 = NameAndType        #92:#93          // getInIfOpen:()Ljava/io/InputStream;
   #92 = Utf8               getInIfOpen
   #93 = Utf8               ()Ljava/io/InputStream;
   #94 = Methodref          #95.#96          // java/io/InputStream.read:([BII)I
   #95 = Class              #97              // java/io/InputStream
   #96 = NameAndType        #98:#99          // read:([BII)I
   #97 = Utf8               java/io/InputStream
   #98 = Utf8               read
   #99 = Utf8               ([BII)I
  #100 = Methodref          #2.#101          // java/io/BufferedInputStream.fill:()V
  #101 = NameAndType        #102:#103        // fill:()V
  #102 = Utf8               fill
  #103 = Utf8               ()V
  #104 = Methodref          #105.#106        // java/lang/Math.max:(II)I
  #105 = Class              #107             // java/lang/Math
  #106 = NameAndType        #108:#109        // max:(II)I
  #107 = Utf8               java/lang/Math
  #108 = Utf8               max
  #109 = Utf8               (II)I
  #110 = Methodref          #2.#111          // java/io/BufferedInputStream.ensureOpen:()V
  #111 = NameAndType        #112:#103        // ensureOpen:()V
  #112 = Utf8               ensureOpen
  #113 = Class              #114             // java/lang/IndexOutOfBoundsException
  #114 = Utf8               java/lang/IndexOutOfBoundsException
  #115 = Methodref          #113.#116        // java/lang/IndexOutOfBoundsException."<init>":()V
  #116 = NameAndType        #13:#103         // "<init>":()V
  #117 = Methodref          #2.#118          // java/io/BufferedInputStream.read1:([BII)I
  #118 = NameAndType        #119:#99         // read1:([BII)I
  #119 = Utf8               read1
  #120 = Methodref          #95.#121         // java/io/InputStream.available:()I
  #121 = NameAndType        #122:#123        // available:()I
  #122 = Utf8               available
  #123 = Utf8               ()I
  #124 = Methodref          #95.#125         // java/io/InputStream.skip:(J)J
  #125 = NameAndType        #126:#127        // skip:(J)J
  #126 = Utf8               skip
  #127 = Utf8               (J)J
  #128 = Class              #129             // java/lang/Integer
  #129 = Utf8               java/lang/Integer
  #130 = Integer            2147483647
  #131 = String             #132             // Resetting to invalid mark
  #132 = Utf8               Resetting to invalid mark
  #133 = Methodref          #95.#134         // java/io/InputStream.close:()V
  #134 = NameAndType        #135:#103        // close:()V
  #135 = Utf8               close
  #136 = String             #137             // out
  #137 = Utf8               out
  #138 = Methodref          #139.#140        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #139 = Class              #141             // java/util/Objects
  #140 = NameAndType        #142:#143        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #141 = Utf8               java/util/Objects
  #142 = Utf8               requireNonNull
  #143 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #144 = Methodref          #2.#145          // java/io/BufferedInputStream.isTrusted:(Ljava/io/OutputStream;)Z
  #145 = NameAndType        #146:#147        // isTrusted:(Ljava/io/OutputStream;)Z
  #146 = Utf8               isTrusted
  #147 = Utf8               (Ljava/io/OutputStream;)Z
  #148 = Methodref          #149.#150        // java/io/OutputStream.write:([BII)V
  #149 = Class              #151             // java/io/OutputStream
  #150 = NameAndType        #152:#153        // write:([BII)V
  #151 = Utf8               java/io/OutputStream
  #152 = Utf8               write
  #153 = Utf8               ([BII)V
  #154 = Methodref          #155.#156        // java/util/Arrays.copyOfRange:([BII)[B
  #155 = Class              #157             // java/util/Arrays
  #156 = NameAndType        #158:#159        // copyOfRange:([BII)[B
  #157 = Utf8               java/util/Arrays
  #158 = Utf8               copyOfRange
  #159 = Utf8               ([BII)[B
  #160 = Methodref          #149.#161        // java/io/OutputStream.write:([B)V
  #161 = NameAndType        #152:#162        // write:([B)V
  #162 = Utf8               ([B)V
  #163 = Methodref          #95.#164         // java/io/InputStream.transferTo:(Ljava/io/OutputStream;)J
  #164 = NameAndType        #165:#166        // transferTo:(Ljava/io/OutputStream;)J
  #165 = Utf8               transferTo
  #166 = Utf8               (Ljava/io/OutputStream;)J
  #167 = Methodref          #105.#168        // java/lang/Math.addExact:(JJ)J
  #168 = NameAndType        #169:#170        // addExact:(JJ)J
  #169 = Utf8               addExact
  #170 = Utf8               (JJ)J
  #171 = Class              #172             // java/lang/ArithmeticException
  #172 = Utf8               java/lang/ArithmeticException
  #173 = Class              #174             // java/lang/Long
  #174 = Utf8               java/lang/Long
  #175 = Long               9223372036854775807l
  #177 = Methodref          #48.#164         // java/io/FilterInputStream.transferTo:(Ljava/io/OutputStream;)J
  #178 = Class              #179             // java/io/ByteArrayOutputStream
  #179 = Utf8               java/io/ByteArrayOutputStream
  #180 = Class              #181             // java/io/FileOutputStream
  #181 = Utf8               java/io/FileOutputStream
  #182 = Class              #183             // java/io/PipedOutputStream
  #183 = Utf8               java/io/PipedOutputStream
  #184 = Methodref          #35.#185         // jdk/internal/misc/Unsafe.getUnsafe:()Ljdk/internal/misc/Unsafe;
  #185 = NameAndType        #186:#187        // getUnsafe:()Ljdk/internal/misc/Unsafe;
  #186 = Utf8               getUnsafe
  #187 = Utf8               ()Ljdk/internal/misc/Unsafe;
  #188 = String             #17              // buf
  #189 = Methodref          #35.#190         // jdk/internal/misc/Unsafe.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
  #190 = NameAndType        #191:#192        // objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
  #191 = Utf8               objectFieldOffset
  #192 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)J
  #193 = Utf8               DEFAULT_BUFFER_SIZE
  #194 = Utf8               ConstantValue
  #195 = Integer            8192
  #196 = Utf8               Code
  #197 = Utf8               LineNumberTable
  #198 = Utf8               LocalVariableTable
  #199 = Utf8               this
  #200 = Utf8               Ljava/io/BufferedInputStream;
  #201 = Utf8               input
  #202 = Utf8               StackMapTable
  #203 = Utf8               Exceptions
  #204 = Utf8               allocateIfEmpty
  #205 = Utf8               Z
  #206 = Utf8               buffer
  #207 = Class              #18              // "[B"
  #208 = Utf8               size
  #209 = Utf8               sz
  #210 = Utf8               nsz
  #211 = Utf8               nbuf
  #212 = Utf8               n
  #213 = Utf8               b
  #214 = Utf8               off
  #215 = Utf8               len
  #216 = Utf8               avail
  #217 = Utf8               cnt
  #218 = Utf8               nread
  #219 = Utf8               skipped
  #220 = Utf8               mark
  #221 = Utf8               (I)V
  #222 = Utf8               readlimit
  #223 = Utf8               reset
  #224 = Utf8               markSupported
  #225 = Utf8               ()Z
  #226 = Utf8               ignore
  #227 = Utf8               Ljava/lang/ArithmeticException;
  #228 = Utf8               Ljava/io/OutputStream;
  #229 = Utf8               os
  #230 = Utf8               clazz
  #231 = Utf8               Ljava/lang/Class;
  #232 = Utf8               LocalVariableTypeTable
  #233 = Utf8               Ljava/lang/Class<+Ljava/io/OutputStream;>;
  #234 = Class              #235             // java/lang/Class
  #235 = Utf8               java/lang/Class
  #236 = Utf8               <clinit>
  #237 = Utf8               SourceFile
  #238 = Utf8               BufferedInputStream.java
{
  private static final int DEFAULT_BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 8192
  
  private static final byte[] EMPTY;
    descriptor: [B
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final jdk.internal.misc.Unsafe U;
    descriptor: Ljdk/internal/misc/Unsafe;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final long BUF_OFFSET;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private final int initialSize;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  protected volatile byte[] buf;
    descriptor: [B
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE
  
  protected int count;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED
  
  protected int pos;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED
  
  protected int markpos;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED
  
  protected int marklimit;
    descriptor: I
    flags: (0x0004) ACC_PROTECTED
  
  private java.io.InputStream getInIfOpen() throws java.io.IOException;
    descriptor: ()Ljava/io/InputStream;
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=2, args_size=1
         0: aload_0                 
         1: getfield      #1                  // Field in:Ljava/io/InputStream;
         4: astore_1                
         5: aload_1                 
         6: ifnonnull     19                
         9: new           #7                  // class java/io/IOException
        12: dup                     
        13: ldc           #9                  // String Stream closed
        15: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        18: athrow                  
        19: aload_1                 
        20: areturn                 
      LineNumberTable:
        line 168: 0
        line 169: 5
        line 170: 9
        line 171: 19
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       21     0  this   Ljava/io/BufferedInputStream;
           5       16     1  input  Ljava/io/InputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [class java/io/InputStream]
    Exceptions:
      throws java.io.IOException
  
  private byte[] getBufIfOpen(boolean) throws java.io.IOException;
    descriptor: (Z)[B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=3, args_size=2
         0: aload_0                 
         1: getfield      #15                 // Field buf:[B
         4: astore_2                
         5: iload_1                 
         6: ifeq          45                
         9: aload_2                 
        10: getstatic     #19                 // Field EMPTY:[B
        13: if_acmpne     45                
        16: aload_0                 
        17: getfield      #22                 // Field initialSize:I
        20: newarray      byte              
        22: astore_2                
        23: getstatic     #26                 // Field U:Ljdk/internal/misc/Unsafe;
        26: aload_0                 
        27: getstatic     #30                 // Field BUF_OFFSET:J
        30: getstatic     #19                 // Field EMPTY:[B
        33: aload_2                 
        34: invokevirtual #34                 // Method jdk/internal/misc/Unsafe.compareAndSetReference:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
        37: ifne          45                
        40: aload_0                 
        41: getfield      #15                 // Field buf:[B
        44: astore_2                
        45: aload_2                 
        46: ifnonnull     59                
        49: new           #7                  // class java/io/IOException
        52: dup                     
        53: ldc           #9                  // String Stream closed
        55: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        58: athrow                  
        59: aload_2                 
        60: areturn                 
      LineNumberTable:
        line 180: 0
        line 181: 5
        line 182: 16
        line 183: 23
        line 185: 40
        line 188: 45
        line 189: 49
        line 191: 59
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       61     0  this   Ljava/io/BufferedInputStream;
           0       61     1  allocateIfEmpty Z
           5       56     2  buffer [B
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [class "[B"]
        frame_type = 13 /* same */
    Exceptions:
      throws java.io.IOException
  
  private byte[] getBufIfOpen() throws java.io.IOException;
    descriptor: ()[B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: iconst_1                
         2: invokevirtual #40                 // Method getBufIfOpen:(Z)[B
         5: areturn                 
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        6     0  this   Ljava/io/BufferedInputStream;
    Exceptions:
      throws java.io.IOException
  
  private void ensureOpen() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #15                 // Field buf:[B
         4: ifnonnull     17                
         7: new           #7                  // class java/io/IOException
        10: dup                     
        11: ldc           #9                  // String Stream closed
        13: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        16: athrow                  
        17: return                  
      LineNumberTable:
        line 206: 0
        line 207: 7
        line 209: 17
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       18     0  this   Ljava/io/BufferedInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
    Exceptions:
      throws java.io.IOException
  
  public java.io.BufferedInputStream(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: sipush        8192              
         5: invokespecial #44                 // Method "<init>":(Ljava/io/InputStream;I)V
         8: return                  
      LineNumberTable:
        line 220: 0
        line 221: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        9     0  this   Ljava/io/BufferedInputStream;
           0        9     1  in     Ljava/io/InputStream;
  
  public java.io.BufferedInputStream(java.io.InputStream, int);
    descriptor: (Ljava/io/InputStream;I)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: invokespecial #47                 // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
         5: aload_0                 
         6: iconst_m1               
         7: putfield      #52                 // Field markpos:I
        10: iload_2                 
        11: ifgt          24                
        14: new           #55                 // class java/lang/IllegalArgumentException
        17: dup                     
        18: ldc           #57                 // String Buffer size <= 0
        20: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        23: athrow                  
        24: aload_0                 
        25: iload_2                 
        26: putfield      #22                 // Field initialSize:I
        29: aload_0                 
        30: invokevirtual #60                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        33: ldc           #2                  // class java/io/BufferedInputStream
        35: if_acmpne     48                
        38: aload_0                 
        39: getstatic     #19                 // Field EMPTY:[B
        42: putfield      #15                 // Field buf:[B
        45: goto          55                
        48: aload_0                 
        49: iload_2                 
        50: newarray      byte              
        52: putfield      #15                 // Field buf:[B
        55: return                  
      LineNumberTable:
        line 236: 0
        line 147: 5
        line 237: 10
        line 238: 14
        line 240: 24
        line 241: 29
        line 243: 38
        line 245: 48
        line 247: 55
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       56     0  this   Ljava/io/BufferedInputStream;
           0       56     1  in     Ljava/io/InputStream;
           0       56     2  size   I
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [class java/io/BufferedInputStream, class java/io/InputStream, int]
          stack = []
        frame_type = 23 /* same */
        frame_type = 6 /* same */
  
  private void fill() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=4, args_size=1
         0: aload_0                 
         1: invokevirtual #66                 // Method getBufIfOpen:()[B
         4: astore_1                
         5: aload_0                 
         6: getfield      #52                 // Field markpos:I
         9: iconst_m1               
        10: if_icmpne     21                
        13: aload_0                 
        14: iconst_0                
        15: putfield      #69                 // Field pos:I
        18: goto          161               
        21: aload_0                 
        22: getfield      #69                 // Field pos:I
        25: aload_1                 
        26: arraylength             
        27: if_icmplt     161               
        30: aload_0                 
        31: getfield      #52                 // Field markpos:I
        34: ifle          71                
        37: aload_0                 
        38: getfield      #69                 // Field pos:I
        41: aload_0                 
        42: getfield      #52                 // Field markpos:I
        45: isub                    
        46: istore_2                
        47: aload_1                 
        48: aload_0                 
        49: getfield      #52                 // Field markpos:I
        52: aload_1                 
        53: iconst_0                
        54: iload_2                 
        55: invokestatic  #72                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        58: aload_0                 
        59: iload_2                 
        60: putfield      #69                 // Field pos:I
        63: aload_0                 
        64: iconst_0                
        65: putfield      #52                 // Field markpos:I
        68: goto          161               
        71: aload_1                 
        72: arraylength             
        73: aload_0                 
        74: getfield      #78                 // Field marklimit:I
        77: if_icmplt     93                
        80: aload_0                 
        81: iconst_m1               
        82: putfield      #52                 // Field markpos:I
        85: aload_0                 
        86: iconst_0                
        87: putfield      #69                 // Field pos:I
        90: goto          161               
        93: aload_0                 
        94: getfield      #69                 // Field pos:I
        97: iconst_1                
        98: aload_0                 
        99: getfield      #69                 // Field pos:I
       102: invokestatic  #81                 // Method jdk/internal/util/ArraysSupport.newLength:(III)I
       105: istore_2                
       106: iload_2                 
       107: aload_0                 
       108: getfield      #78                 // Field marklimit:I
       111: if_icmple     119               
       114: aload_0                 
       115: getfield      #78                 // Field marklimit:I
       118: istore_2                
       119: iload_2                 
       120: newarray      byte              
       122: astore_3                
       123: aload_1                 
       124: iconst_0                
       125: aload_3                 
       126: iconst_0                
       127: aload_0                 
       128: getfield      #69                 // Field pos:I
       131: invokestatic  #72                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       134: getstatic     #26                 // Field U:Ljdk/internal/misc/Unsafe;
       137: aload_0                 
       138: getstatic     #30                 // Field BUF_OFFSET:J
       141: aload_1                 
       142: aload_3                 
       143: invokevirtual #34                 // Method jdk/internal/misc/Unsafe.compareAndSetReference:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
       146: ifne          159               
       149: new           #7                  // class java/io/IOException
       152: dup                     
       153: ldc           #9                  // String Stream closed
       155: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       158: athrow                  
       159: aload_3                 
       160: astore_1                
       161: aload_0                 
       162: aload_0                 
       163: getfield      #69                 // Field pos:I
       166: putfield      #87                 // Field count:I
       169: aload_0                 
       170: invokevirtual #90                 // Method getInIfOpen:()Ljava/io/InputStream;
       173: aload_1                 
       174: aload_0                 
       175: getfield      #69                 // Field pos:I
       178: aload_1                 
       179: arraylength             
       180: aload_0                 
       181: getfield      #69                 // Field pos:I
       184: isub                    
       185: invokevirtual #94                 // Method java/io/InputStream.read:([BII)I
       188: istore_2                
       189: iload_2                 
       190: ifle          203               
       193: aload_0                 
       194: iload_2                 
       195: aload_0                 
       196: getfield      #69                 // Field pos:I
       199: iadd                    
       200: putfield      #87                 // Field count:I
       203: return                  
      LineNumberTable:
        line 257: 0
        line 258: 5
        line 259: 13
        line 260: 21
        line 261: 30
        line 262: 37
        line 263: 47
        line 264: 58
        line 265: 63
        line 266: 68
        line 267: 80
        line 268: 85
        line 270: 93
        line 273: 106
        line 274: 114
        line 275: 119
        line 276: 123
        line 277: 134
        line 283: 149
        line 285: 159
        line 288: 161
        line 289: 169
        line 290: 189
        line 291: 193
        line 292: 203
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          47       21     2  sz     I
         106       55     2  nsz    I
         123       38     3  nbuf   [B
           0      204     0  this   Ljava/io/BufferedInputStream;
           5      199     1  buffer [B
         189       15     2  n      I
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [class "[B"]
        frame_type = 49 /* same */
        frame_type = 21 /* same */
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [int]
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [class "[B"]
        frame_type = 249 /* chop */
          offset_delta = 1
        frame_type = 252 /* append */
          offset_delta = 41
          locals = [int]
    Exceptions:
      throws java.io.IOException
  
  public synchronized int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=5, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #69                 // Field pos:I
         4: aload_0                 
         5: getfield      #87                 // Field count:I
         8: if_icmplt     28                
        11: aload_0                 
        12: invokevirtual #100                // Method fill:()V
        15: aload_0                 
        16: getfield      #69                 // Field pos:I
        19: aload_0                 
        20: getfield      #87                 // Field count:I
        23: if_icmplt     28                
        26: iconst_m1               
        27: ireturn                 
        28: aload_0                 
        29: invokevirtual #66                 // Method getBufIfOpen:()[B
        32: aload_0                 
        33: dup                     
        34: getfield      #69                 // Field pos:I
        37: dup_x1                  
        38: iconst_1                
        39: iadd                    
        40: putfield      #69                 // Field pos:I
        43: baload                  
        44: sipush        255               
        47: iand                    
        48: ireturn                 
      LineNumberTable:
        line 307: 0
        line 308: 11
        line 309: 15
        line 310: 26
        line 312: 28
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       49     0  this   Ljava/io/BufferedInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
    Exceptions:
      throws java.io.IOException
  
  private int read1(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: getfield      #87                 // Field count:I
         4: aload_0                 
         5: getfield      #69                 // Field pos:I
         8: isub                    
         9: istore        4                 
        11: iload         4                 
        13: ifgt          78                
        16: aload_0                 
        17: iconst_0                
        18: invokevirtual #40                 // Method getBufIfOpen:(Z)[B
        21: arraylength             
        22: aload_0                 
        23: getfield      #22                 // Field initialSize:I
        26: invokestatic  #104                // Method java/lang/Math.max:(II)I
        29: istore        5                 
        31: iload_3                 
        32: iload         5                 
        34: if_icmplt     56                
        37: aload_0                 
        38: getfield      #52                 // Field markpos:I
        41: iconst_m1               
        42: if_icmpne     56                
        45: aload_0                 
        46: invokevirtual #90                 // Method getInIfOpen:()Ljava/io/InputStream;
        49: aload_1                 
        50: iload_2                 
        51: iload_3                 
        52: invokevirtual #94                 // Method java/io/InputStream.read:([BII)I
        55: ireturn                 
        56: aload_0                 
        57: invokevirtual #100                // Method fill:()V
        60: aload_0                 
        61: getfield      #87                 // Field count:I
        64: aload_0                 
        65: getfield      #69                 // Field pos:I
        68: isub                    
        69: istore        4                 
        71: iload         4                 
        73: ifgt          78                
        76: iconst_m1               
        77: ireturn                 
        78: iload         4                 
        80: iload_3                 
        81: if_icmpge     89                
        84: iload         4                 
        86: goto          90                
        89: iload_3                 
        90: istore        5                 
        92: aload_0                 
        93: invokevirtual #66                 // Method getBufIfOpen:()[B
        96: aload_0                 
        97: getfield      #69                 // Field pos:I
       100: aload_1                 
       101: iload_2                 
       102: iload         5                 
       104: invokestatic  #72                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       107: aload_0                 
       108: dup                     
       109: getfield      #69                 // Field pos:I
       112: iload         5                 
       114: iadd                    
       115: putfield      #69                 // Field pos:I
       118: iload         5                 
       120: ireturn                 
      LineNumberTable:
        line 320: 0
        line 321: 11
        line 326: 16
        line 327: 31
        line 328: 45
        line 330: 56
        line 331: 60
        line 332: 71
        line 334: 78
        line 335: 92
        line 336: 107
        line 337: 118
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          31       47     5  size   I
           0      121     0  this   Ljava/io/BufferedInputStream;
           0      121     1  b      [B
           0      121     2  off    I
           0      121     3  len    I
          11      110     4  avail  I
          92       29     5  cnt    I
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 56
          locals = [int, int]
        frame_type = 250 /* chop */
          offset_delta = 21
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException
  
  public synchronized int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=5, locals=7, args_size=4
         0: aload_0                 
         1: invokevirtual #110                // Method ensureOpen:()V
         4: iload_2                 
         5: iload_3                 
         6: ior                     
         7: iload_2                 
         8: iload_3                 
         9: iadd                    
        10: ior                     
        11: aload_1                 
        12: arraylength             
        13: iload_2                 
        14: iload_3                 
        15: iadd                    
        16: isub                    
        17: ior                     
        18: ifge          29                
        21: new           #113                // class java/lang/IndexOutOfBoundsException
        24: dup                     
        25: invokespecial #115                // Method java/lang/IndexOutOfBoundsException."<init>":()V
        28: athrow                  
        29: iload_3                 
        30: ifne          35                
        33: iconst_0                
        34: ireturn                 
        35: iconst_0                
        36: istore        4                 
        38: aload_0                 
        39: aload_1                 
        40: iload_2                 
        41: iload         4                 
        43: iadd                    
        44: iload_3                 
        45: iload         4                 
        47: isub                    
        48: invokevirtual #117                // Method read1:([BII)I
        51: istore        5                 
        53: iload         5                 
        55: ifgt          71                
        58: iload         4                 
        60: ifne          68                
        63: iload         5                 
        65: goto          70                
        68: iload         4                 
        70: ireturn                 
        71: iload         4                 
        73: iload         5                 
        75: iadd                    
        76: istore        4                 
        78: iload         4                 
        80: iload_3                 
        81: if_icmplt     87                
        84: iload         4                 
        86: ireturn                 
        87: aload_0                 
        88: getfield      #1                  // Field in:Ljava/io/InputStream;
        91: astore        6                 
        93: aload         6                 
        95: ifnull        109               
        98: aload         6                 
       100: invokevirtual #120                // Method java/io/InputStream.available:()I
       103: ifgt          109               
       106: iload         4                 
       108: ireturn                 
       109: goto          38                
      LineNumberTable:
        line 379: 0
        line 380: 4
        line 381: 21
        line 382: 29
        line 383: 33
        line 386: 35
        line 388: 38
        line 389: 53
        line 390: 58
        line 391: 71
        line 392: 78
        line 393: 84
        line 395: 87
        line 396: 93
        line 397: 106
        line 398: 109
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          53       56     5  nread  I
          93       16     6  input  Ljava/io/InputStream;
           0      112     0  this   Ljava/io/BufferedInputStream;
           0      112     1  b      [B
           0      112     2  off    I
           0      112     3  len    I
          38       74     4  n      I
      StackMapTable: number_of_entries = 8
        frame_type = 29 /* same */
        frame_type = 5 /* same */
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [int]
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [int]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 15 /* same */
        frame_type = 250 /* chop */
          offset_delta = 21
    Exceptions:
      throws java.io.IOException
  
  public synchronized long skip(long) throws java.io.IOException;
    descriptor: (J)J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=4, locals=7, args_size=2
         0: aload_0                 
         1: invokevirtual #110                // Method ensureOpen:()V
         4: lload_1                 
         5: lconst_0                
         6: lcmp                    
         7: ifgt          12                
        10: lconst_0                
        11: lreturn                 
        12: aload_0                 
        13: getfield      #87                 // Field count:I
        16: aload_0                 
        17: getfield      #69                 // Field pos:I
        20: isub                    
        21: i2l                     
        22: lstore_3                
        23: lload_3                 
        24: lconst_0                
        25: lcmp                    
        26: ifgt          69                
        29: aload_0                 
        30: getfield      #52                 // Field markpos:I
        33: iconst_m1               
        34: if_icmpne     46                
        37: aload_0                 
        38: invokevirtual #90                 // Method getInIfOpen:()Ljava/io/InputStream;
        41: lload_1                 
        42: invokevirtual #124                // Method java/io/InputStream.skip:(J)J
        45: lreturn                 
        46: aload_0                 
        47: invokevirtual #100                // Method fill:()V
        50: aload_0                 
        51: getfield      #87                 // Field count:I
        54: aload_0                 
        55: getfield      #69                 // Field pos:I
        58: isub                    
        59: i2l                     
        60: lstore_3                
        61: lload_3                 
        62: lconst_0                
        63: lcmp                    
        64: ifgt          69                
        67: lconst_0                
        68: lreturn                 
        69: lload_3                 
        70: lload_1                 
        71: lcmp                    
        72: ifge          79                
        75: lload_3                 
        76: goto          80                
        79: lload_1                 
        80: lstore        5                 
        82: aload_0                 
        83: dup                     
        84: getfield      #69                 // Field pos:I
        87: lload         5                 
        89: l2i                     
        90: iadd                    
        91: putfield      #69                 // Field pos:I
        94: lload         5                 
        96: lreturn                 
      LineNumberTable:
        line 411: 0
        line 412: 4
        line 413: 10
        line 415: 12
        line 417: 23
        line 419: 29
        line 420: 37
        line 423: 46
        line 424: 50
        line 425: 61
        line 426: 67
        line 429: 69
        line 430: 82
        line 431: 94
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       97     0  this   Ljava/io/BufferedInputStream;
           0       97     1  n      J
          23       74     3  avail  J
          82       15     5  skipped J
      StackMapTable: number_of_entries = 5
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [long]
        frame_type = 22 /* same */
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
    Exceptions:
      throws java.io.IOException
  
  public synchronized int available() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=3, locals=3, args_size=1
         0: aload_0                 
         1: getfield      #87                 // Field count:I
         4: aload_0                 
         5: getfield      #69                 // Field pos:I
         8: isub                    
         9: istore_1                
        10: aload_0                 
        11: invokevirtual #90                 // Method getInIfOpen:()Ljava/io/InputStream;
        14: invokevirtual #120                // Method java/io/InputStream.available:()I
        17: istore_2                
        18: iload_1                 
        19: ldc           #130                // int 2147483647
        21: iload_2                 
        22: isub                    
        23: if_icmple     31                
        26: ldc           #130                // int 2147483647
        28: goto          34                
        31: iload_1                 
        32: iload_2                 
        33: iadd                    
        34: ireturn                 
      LineNumberTable:
        line 452: 0
        line 453: 10
        line 454: 18
        line 455: 26
        line 456: 31
        line 454: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljava/io/BufferedInputStream;
          10       25     1  n      I
          18       17     2  avail  I
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [int, int]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException
  
  public synchronized void mark(int);
    descriptor: (I)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=2, locals=2, args_size=2
         0: aload_0                 
         1: iload_1                 
         2: putfield      #78                 // Field marklimit:I
         5: aload_0                 
         6: aload_0                 
         7: getfield      #69                 // Field pos:I
        10: putfield      #52                 // Field markpos:I
        13: return                  
      LineNumberTable:
        line 468: 0
        line 469: 5
        line 470: 13
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/io/BufferedInputStream;
           0       14     1  readlimit I
  
  public synchronized void reset() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #110                // Method ensureOpen:()V
         4: aload_0                 
         5: getfield      #52                 // Field markpos:I
         8: ifge          21                
        11: new           #7                  // class java/io/IOException
        14: dup                     
        15: ldc           #131                // String Resetting to invalid mark
        17: invokespecial #11                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
        20: athrow                  
        21: aload_0                 
        22: aload_0                 
        23: getfield      #52                 // Field markpos:I
        26: putfield      #69                 // Field pos:I
        29: return                  
      LineNumberTable:
        line 489: 0
        line 490: 4
        line 491: 11
        line 492: 21
        line 493: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       30     0  this   Ljava/io/BufferedInputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 21 /* same */
    Exceptions:
      throws java.io.IOException
  
  public boolean markSupported();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: iconst_1                
         1: ireturn                 
      LineNumberTable:
        line 507: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        2     0  this   Ljava/io/BufferedInputStream;
  
  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=3, args_size=1
         0: aload_0                 
         1: getfield      #15                 // Field buf:[B
         4: dup                     
         5: astore_1                
         6: ifnull        43                
         9: getstatic     #26                 // Field U:Ljdk/internal/misc/Unsafe;
        12: aload_0                 
        13: getstatic     #30                 // Field BUF_OFFSET:J
        16: aload_1                 
        17: aconst_null             
        18: invokevirtual #34                 // Method jdk/internal/misc/Unsafe.compareAndSetReference:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
        21: ifeq          0                 
        24: aload_0                 
        25: getfield      #1                  // Field in:Ljava/io/InputStream;
        28: astore_2                
        29: aload_0                 
        30: aconst_null             
        31: putfield      #1                  // Field in:Ljava/io/InputStream;
        34: aload_2                 
        35: ifnull        42                
        38: aload_2                 
        39: invokevirtual #133                // Method java/io/InputStream.close:()V
        42: return                  
        43: return                  
      LineNumberTable:
        line 521: 0
        line 522: 9
        line 523: 24
        line 524: 29
        line 525: 34
        line 526: 38
        line 527: 42
        line 531: 43
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          29       14     2  input  Ljava/io/InputStream;
           0       44     0  this   Ljava/io/BufferedInputStream;
           6       38     1  buffer [B
      StackMapTable: number_of_entries = 3
        frame_type = 0 /* same */
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [class "[B", class java/io/InputStream]
        frame_type = 250 /* chop */
          offset_delta = 0
    Exceptions:
      throws java.io.IOException
  
  public synchronized long transferTo(java.io.OutputStream) throws java.io.IOException;
    descriptor: (Ljava/io/OutputStream;)J
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code: 
      stack=4, locals=4, args_size=2
         0: aload_1                 
         1: ldc           #136                // String out
         3: invokestatic  #138                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop                     
         7: aload_0                 
         8: invokevirtual #60                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        11: ldc           #2                  // class java/io/BufferedInputStream
        13: if_acmpne     109               
        16: aload_0                 
        17: getfield      #52                 // Field markpos:I
        20: iconst_m1               
        21: if_icmpne     109               
        24: aload_0                 
        25: getfield      #87                 // Field count:I
        28: aload_0                 
        29: getfield      #69                 // Field pos:I
        32: isub                    
        33: istore_2                
        34: iload_2                 
        35: ifle          90                
        38: aload_1                 
        39: invokestatic  #144                // Method isTrusted:(Ljava/io/OutputStream;)Z
        42: ifeq          61                
        45: aload_1                 
        46: aload_0                 
        47: invokevirtual #66                 // Method getBufIfOpen:()[B
        50: aload_0                 
        51: getfield      #69                 // Field pos:I
        54: iload_2                 
        55: invokevirtual #148                // Method java/io/OutputStream.write:([BII)V
        58: goto          82                
        61: aload_0                 
        62: invokevirtual #66                 // Method getBufIfOpen:()[B
        65: aload_0                 
        66: getfield      #69                 // Field pos:I
        69: aload_0                 
        70: getfield      #87                 // Field count:I
        73: invokestatic  #154                // Method java/util/Arrays.copyOfRange:([BII)[B
        76: astore_3                
        77: aload_1                 
        78: aload_3                 
        79: invokevirtual #160                // Method java/io/OutputStream.write:([B)V
        82: aload_0                 
        83: aload_0                 
        84: getfield      #87                 // Field count:I
        87: putfield      #69                 // Field pos:I
        90: iload_2                 
        91: i2l                     
        92: aload_0                 
        93: invokevirtual #90                 // Method getInIfOpen:()Ljava/io/InputStream;
        96: aload_1                 
        97: invokevirtual #163                // Method java/io/InputStream.transferTo:(Ljava/io/OutputStream;)J
       100: invokestatic  #167                // Method java/lang/Math.addExact:(JJ)J
       103: lreturn                 
       104: astore_3                
       105: ldc2_w        #175                // long 9223372036854775807l
       108: lreturn                 
       109: aload_0                 
       110: aload_1                 
       111: invokespecial #177                // Method java/io/FilterInputStream.transferTo:(Ljava/io/OutputStream;)J
       114: lreturn                 
      Exception table:
          from       to target type
            90      103   104  Class java/lang/ArithmeticException
      LineNumberTable:
        line 535: 0
        line 536: 7
        line 537: 24
        line 538: 34
        line 539: 38
        line 540: 45
        line 543: 61
        line 544: 77
        line 546: 82
        line 549: 90
        line 550: 104
        line 551: 105
        line 554: 109
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          77        5     3  buffer [B
         105        4     3  ignore Ljava/lang/ArithmeticException;
          34       75     2  avail  I
           0      115     0  this   Ljava/io/BufferedInputStream;
           0      115     1  out    Ljava/io/OutputStream;
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 61
          locals = [int]
        frame_type = 20 /* same */
        frame_type = 7 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/ArithmeticException ]
        frame_type = 250 /* chop */
          offset_delta = 4
    Exceptions:
      throws java.io.IOException
  
  private static boolean isTrusted(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=1
         0: aload_0                 
         1: invokevirtual #60                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
         4: astore_1                
         5: aload_1                 
         6: ldc           #178                // class java/io/ByteArrayOutputStream
         8: if_acmpeq     23                
        11: aload_1                 
        12: ldc           #180                // class java/io/FileOutputStream
        14: if_acmpeq     23                
        17: aload_1                 
        18: ldc           #182                // class java/io/PipedOutputStream
        20: if_acmpne     27                
        23: iconst_1                
        24: goto          28                
        27: iconst_0                
        28: ireturn                 
      LineNumberTable:
        line 570: 0
        line 571: 5
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       29     0  os     Ljava/io/OutputStream;
           5       24     1  clazz  Ljava/lang/Class;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             5       24     1  clazz   Ljava/lang/Class<+Ljava/io/OutputStream;>;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [class java/lang/Class]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=3, locals=0, args_size=0
         0: iconst_0                
         1: newarray      byte              
         3: putstatic     #19                 // Field EMPTY:[B
         6: invokestatic  #184                // Method jdk/internal/misc/Unsafe.getUnsafe:()Ljdk/internal/misc/Unsafe;
         9: putstatic     #26                 // Field U:Ljdk/internal/misc/Unsafe;
        12: getstatic     #26                 // Field U:Ljdk/internal/misc/Unsafe;
        15: ldc           #2                  // class java/io/BufferedInputStream
        17: ldc           #188                // String buf
        19: invokevirtual #189                // Method jdk/internal/misc/Unsafe.objectFieldOffset:(Ljava/lang/Class;Ljava/lang/String;)J
        22: putstatic     #30                 // Field BUF_OFFSET:J
        25: return                  
      LineNumberTable:
        line 64: 0
        line 71: 6
        line 73: 12
        line 74: 19
        line 73: 25
}
SourceFile: "BufferedInputStream.java"
