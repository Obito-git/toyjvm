---
source: class_file/src/lib.rs
expression: display
---
public class java.io.FileOutputStream extends java.io.OutputStream
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                       //java/io/FileOutputStream
  super_class: #13                     //java/io/OutputStream
  interfaces: 0, fields: 7, methods: 19, attributes: 3
Constant pool:
    #1 = Class              #2               // java/io/File
    #2 = Utf8               java/io/File
    #3 = Methodref          #1.#4            // java/io/File."<init>":(Ljava/lang/String;)V
    #4 = NameAndType        #5:#6            // "<init>":(Ljava/lang/String;)V
    #5 = Utf8               <init>
    #6 = Utf8               (Ljava/lang/String;)V
    #7 = Methodref          #8.#9            // java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
    #8 = Class              #10              // java/io/FileOutputStream
    #9 = NameAndType        #5:#11           // "<init>":(Ljava/io/File;Z)V
   #10 = Utf8               java/io/FileOutputStream
   #11 = Utf8               (Ljava/io/File;Z)V
   #12 = Methodref          #13.#14          // java/io/OutputStream."<init>":()V
   #13 = Class              #15              // java/io/OutputStream
   #14 = NameAndType        #5:#16           // "<init>":()V
   #15 = Utf8               java/io/OutputStream
   #16 = Utf8               ()V
   #17 = Class              #18              // java/lang/Object
   #18 = Utf8               java/lang/Object
   #19 = Methodref          #17.#14          // java/lang/Object."<init>":()V
   #20 = Fieldref           #8.#21           // java/io/FileOutputStream.closeLock:Ljava/lang/Object;
   #21 = NameAndType        #22:#23          // closeLock:Ljava/lang/Object;
   #22 = Utf8               closeLock
   #23 = Utf8               Ljava/lang/Object;
   #24 = Methodref          #1.#25           // java/io/File.isInvalid:()Z
   #25 = NameAndType        #26:#27          // isInvalid:()Z
   #26 = Utf8               isInvalid
   #27 = Utf8               ()Z
   #28 = Class              #29              // java/io/FileNotFoundException
   #29 = Utf8               java/io/FileNotFoundException
   #30 = String             #31              // Invalid file path
   #31 = Utf8               Invalid file path
   #32 = Methodref          #28.#4           // java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
   #33 = Methodref          #1.#34           // java/io/File.getPath:()Ljava/lang/String;
   #34 = NameAndType        #35:#36          // getPath:()Ljava/lang/String;
   #35 = Utf8               getPath
   #36 = Utf8               ()Ljava/lang/String;
   #37 = Fieldref           #8.#38           // java/io/FileOutputStream.path:Ljava/lang/String;
   #38 = NameAndType        #39:#40          // path:Ljava/lang/String;
   #39 = Utf8               path
   #40 = Utf8               Ljava/lang/String;
   #41 = Class              #42              // java/io/FileDescriptor
   #42 = Utf8               java/io/FileDescriptor
   #43 = Methodref          #41.#14          // java/io/FileDescriptor."<init>":()V
   #44 = Fieldref           #8.#45           // java/io/FileOutputStream.fd:Ljava/io/FileDescriptor;
   #45 = NameAndType        #46:#47          // fd:Ljava/io/FileDescriptor;
   #46 = Utf8               fd
   #47 = Utf8               Ljava/io/FileDescriptor;
   #48 = Methodref          #41.#49          // java/io/FileDescriptor.attach:(Ljava/io/Closeable;)V
   #49 = NameAndType        #50:#51          // attach:(Ljava/io/Closeable;)V
   #50 = Utf8               attach
   #51 = Utf8               (Ljava/io/Closeable;)V
   #52 = Methodref          #8.#53           // java/io/FileOutputStream.open:(Ljava/lang/String;Z)V
   #53 = NameAndType        #54:#55          // open:(Ljava/lang/String;Z)V
   #54 = Utf8               open
   #55 = Utf8               (Ljava/lang/String;Z)V
   #56 = Methodref          #57.#58          // java/io/FileCleanable.register:(Ljava/io/FileDescriptor;)V
   #57 = Class              #59              // java/io/FileCleanable
   #58 = NameAndType        #60:#61          // register:(Ljava/io/FileDescriptor;)V
   #59 = Utf8               java/io/FileCleanable
   #60 = Utf8               register
   #61 = Utf8               (Ljava/io/FileDescriptor;)V
   #62 = Class              #63              // java/lang/NullPointerException
   #63 = Utf8               java/lang/NullPointerException
   #64 = Methodref          #62.#14          // java/lang/NullPointerException."<init>":()V
   #65 = Methodref          #8.#66           // java/io/FileOutputStream.open0:(Ljava/lang/String;Z)V
   #66 = NameAndType        #67:#55          // open0:(Ljava/lang/String;Z)V
   #67 = Utf8               open0
   #68 = Methodref          #69.#70          // jdk/internal/event/FileWriteEvent.timestamp:()J
   #69 = Class              #71              // jdk/internal/event/FileWriteEvent
   #70 = NameAndType        #72:#73          // timestamp:()J
   #71 = Utf8               jdk/internal/event/FileWriteEvent
   #72 = Utf8               timestamp
   #73 = Utf8               ()J
   #74 = Methodref          #8.#75           // java/io/FileOutputStream.write:(IZ)V
   #75 = NameAndType        #76:#77          // write:(IZ)V
   #76 = Utf8               write
   #77 = Utf8               (IZ)V
   #78 = Methodref          #69.#79          // jdk/internal/event/FileWriteEvent.shouldCommit:(J)Z
   #79 = NameAndType        #80:#81          // shouldCommit:(J)Z
   #80 = Utf8               shouldCommit
   #81 = Utf8               (J)Z
   #82 = Methodref          #69.#83          // jdk/internal/event/FileWriteEvent.commit:(JJLjava/lang/String;J)V
   #83 = NameAndType        #84:#85          // commit:(JJLjava/lang/String;J)V
   #84 = Utf8               commit
   #85 = Utf8               (JJLjava/lang/String;J)V
   #86 = Fieldref           #8.#87           // java/io/FileOutputStream.FD_ACCESS:Ljdk/internal/access/JavaIOFileDescriptorAccess;
   #87 = NameAndType        #88:#89          // FD_ACCESS:Ljdk/internal/access/JavaIOFileDescriptorAccess;
   #88 = Utf8               FD_ACCESS
   #89 = Utf8               Ljdk/internal/access/JavaIOFileDescriptorAccess;
   #90 = InterfaceMethodref #91.#92          // jdk/internal/access/JavaIOFileDescriptorAccess.getAppend:(Ljava/io/FileDescriptor;)Z
   #91 = Class              #93              // jdk/internal/access/JavaIOFileDescriptorAccess
   #92 = NameAndType        #94:#95          // getAppend:(Ljava/io/FileDescriptor;)Z
   #93 = Utf8               jdk/internal/access/JavaIOFileDescriptorAccess
   #94 = Utf8               getAppend
   #95 = Utf8               (Ljava/io/FileDescriptor;)Z
   #96 = Fieldref           #8.#97           // java/io/FileOutputStream.jfrTracing:Z
   #97 = NameAndType        #98:#99          // jfrTracing:Z
   #98 = Utf8               jfrTracing
   #99 = Utf8               Z
  #100 = Methodref          #69.#101         // jdk/internal/event/FileWriteEvent.enabled:()Z
  #101 = NameAndType        #102:#27         // enabled:()Z
  #102 = Utf8               enabled
  #103 = Methodref          #8.#104          // java/io/FileOutputStream.traceWrite:(IZ)V
  #104 = NameAndType        #105:#77         // traceWrite:(IZ)V
  #105 = Utf8               traceWrite
  #106 = Methodref          #8.#107          // java/io/FileOutputStream.writeBytes:([BIIZ)V
  #107 = NameAndType        #108:#109        // writeBytes:([BIIZ)V
  #108 = Utf8               writeBytes
  #109 = Utf8               ([BIIZ)V
  #110 = Methodref          #8.#111          // java/io/FileOutputStream.traceWriteBytes:([BIIZ)V
  #111 = NameAndType        #112:#109        // traceWriteBytes:([BIIZ)V
  #112 = Utf8               traceWriteBytes
  #113 = Fieldref           #8.#114          // java/io/FileOutputStream.closed:Z
  #114 = NameAndType        #115:#99         // closed:Z
  #115 = Utf8               closed
  #116 = Fieldref           #8.#117          // java/io/FileOutputStream.channel:Ljava/nio/channels/FileChannel;
  #117 = NameAndType        #118:#119        // channel:Ljava/nio/channels/FileChannel;
  #118 = Utf8               channel
  #119 = Utf8               Ljava/nio/channels/FileChannel;
  #120 = Methodref          #121.#122        // java/nio/channels/FileChannel.close:()V
  #121 = Class              #123             // java/nio/channels/FileChannel
  #122 = NameAndType        #124:#16         // close:()V
  #123 = Utf8               java/nio/channels/FileChannel
  #124 = Utf8               close
  #125 = Class              #126             // java/io/FileOutputStream$1
  #126 = Utf8               java/io/FileOutputStream$1
  #127 = Methodref          #125.#128        // java/io/FileOutputStream$1."<init>":(Ljava/io/FileOutputStream;)V
  #128 = NameAndType        #5:#129          // "<init>":(Ljava/io/FileOutputStream;)V
  #129 = Utf8               (Ljava/io/FileOutputStream;)V
  #130 = Methodref          #41.#131         // java/io/FileDescriptor.closeAll:(Ljava/io/Closeable;)V
  #131 = NameAndType        #132:#51         // closeAll:(Ljava/io/Closeable;)V
  #132 = Utf8               closeAll
  #133 = Class              #134             // java/io/IOException
  #134 = Utf8               java/io/IOException
  #135 = Methodref          #133.#14         // java/io/IOException."<init>":()V
  #136 = Methodref          #137.#138        // sun/nio/ch/FileChannelImpl.open:(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
  #137 = Class              #139             // sun/nio/ch/FileChannelImpl
  #138 = NameAndType        #54:#140         // open:(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
  #139 = Utf8               sun/nio/ch/FileChannelImpl
  #140 = Utf8               (Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
  #141 = Class              #142             // java/lang/InternalError
  #142 = Utf8               java/lang/InternalError
  #143 = Methodref          #141.#144        // java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
  #144 = NameAndType        #5:#145          // "<init>":(Ljava/lang/Throwable;)V
  #145 = Utf8               (Ljava/lang/Throwable;)V
  #146 = Methodref          #147.#148        // jdk/internal/access/SharedSecrets.getJavaIOFileDescriptorAccess:()Ljdk/internal/access/JavaIOFileDescriptorAccess;
  #147 = Class              #149             // jdk/internal/access/SharedSecrets
  #148 = NameAndType        #150:#151        // getJavaIOFileDescriptorAccess:()Ljdk/internal/access/JavaIOFileDescriptorAccess;
  #149 = Utf8               jdk/internal/access/SharedSecrets
  #150 = Utf8               getJavaIOFileDescriptorAccess
  #151 = Utf8               ()Ljdk/internal/access/JavaIOFileDescriptorAccess;
  #152 = Methodref          #8.#153          // java/io/FileOutputStream.initIDs:()V
  #153 = NameAndType        #154:#16         // initIDs:()V
  #154 = Utf8               initIDs
  #155 = Utf8               Code
  #156 = Utf8               LineNumberTable
  #157 = Utf8               LocalVariableTable
  #158 = Utf8               this
  #159 = Utf8               Ljava/io/FileOutputStream;
  #160 = Utf8               name
  #161 = Utf8               StackMapTable
  #162 = Class              #163             // java/lang/String
  #163 = Utf8               java/lang/String
  #164 = Utf8               Exceptions
  #165 = Utf8               append
  #166 = Utf8               (Ljava/io/File;)V
  #167 = Utf8               file
  #168 = Utf8               Ljava/io/File;
  #169 = Utf8               fdObj
  #170 = Utf8               duration
  #171 = Utf8               J
  #172 = Utf8               b
  #173 = Utf8               I
  #174 = Utf8               bytesWritten
  #175 = Utf8               start
  #176 = Class              #177             // java/lang/Throwable
  #177 = Utf8               java/lang/Throwable
  #178 = Utf8               (I)V
  #179 = Utf8               [B
  #180 = Utf8               off
  #181 = Utf8               len
  #182 = Utf8               ([B)V
  #183 = Utf8               ([BII)V
  #184 = Utf8               fc
  #185 = Utf8               getFD
  #186 = Utf8               ()Ljava/io/FileDescriptor;
  #187 = Utf8               getChannel
  #188 = Utf8               ()Ljava/nio/channels/FileChannel;
  #189 = Utf8               ioe
  #190 = Utf8               Ljava/io/IOException;
  #191 = Utf8               <clinit>
  #192 = Utf8               SourceFile
  #193 = Utf8               FileOutputStream.java
  #194 = Utf8               NestMembers
  #195 = Utf8               InnerClasses
{
  private static final jdk.internal.access.JavaIOFileDescriptorAccess FD_ACCESS;
    descriptor: Ljdk/internal/access/JavaIOFileDescriptorAccess;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static boolean jfrTracing;
    descriptor: Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private final java.io.FileDescriptor fd;
    descriptor: Ljava/io/FileDescriptor;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private volatile java.nio.channels.FileChannel channel;
    descriptor: Ljava/nio/channels/FileChannel;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
  
  private final java.lang.String path;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private final java.lang.Object closeLock;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private volatile boolean closed;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
  
  public java.io.FileOutputStream(java.lang.String) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: ifnull        16                
         5: new           #1                  // class java/io/File
         8: dup                     
         9: aload_1                 
        10: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
        13: goto          17                
        16: aconst_null             
        17: iconst_0                
        18: invokespecial #7                  // Method "<init>":(Ljava/io/File;Z)V
        21: return                  
      LineNumberTable:
        line 120: 0
        line 121: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  this   Ljava/io/FileOutputStream;
           0       22     1  name   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ this ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [this, class java/lang/String]
          stack = [this, class java/io/File]
    Exceptions:
      throws java.io.FileNotFoundException
  
  public java.io.FileOutputStream(java.lang.String, boolean) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: ifnull        16                
         5: new           #1                  // class java/io/File
         8: dup                     
         9: aload_1                 
        10: invokespecial #3                  // Method java/io/File."<init>":(Ljava/lang/String;)V
        13: goto          17                
        16: aconst_null             
        17: iload_2                 
        18: invokespecial #7                  // Method "<init>":(Ljava/io/File;Z)V
        21: return                  
      LineNumberTable:
        line 148: 0
        line 149: 21
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  this   Ljava/io/FileOutputStream;
           0       22     1  name   Ljava/lang/String;
           0       22     2  append Z
      StackMapTable: number_of_entries = 2
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ this ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [this, class java/lang/String, int]
          stack = [this, class java/io/File]
    Exceptions:
      throws java.io.FileNotFoundException
  
  public java.io.FileOutputStream(java.io.File) throws java.io.FileNotFoundException;
    descriptor: (Ljava/io/File;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: aload_1                 
         2: iconst_0                
         3: invokespecial #7                  // Method "<init>":(Ljava/io/File;Z)V
         6: return                  
      LineNumberTable:
        line 171: 0
        line 172: 6
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/io/FileOutputStream;
           0        7     1  file   Ljava/io/File;
    Exceptions:
      throws java.io.FileNotFoundException
  
  public java.io.FileOutputStream(java.io.File, boolean) throws java.io.FileNotFoundException;
    descriptor: (Ljava/io/File;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=3, args_size=3
         0: aload_0                 
         1: invokespecial #12                 // Method java/io/OutputStream."<init>":()V
         4: aload_0                 
         5: new           #17                 // class java/lang/Object
         8: dup                     
         9: invokespecial #19                 // Method java/lang/Object."<init>":()V
        12: putfield      #20                 // Field closeLock:Ljava/lang/Object;
        15: aload_1                 
        16: invokevirtual #24                 // Method java/io/File.isInvalid:()Z
        19: ifeq          32                
        22: new           #28                 // class java/io/FileNotFoundException
        25: dup                     
        26: ldc           #30                 // String Invalid file path
        28: invokespecial #32                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
        31: athrow                  
        32: aload_0                 
        33: aload_1                 
        34: invokevirtual #33                 // Method java/io/File.getPath:()Ljava/lang/String;
        37: putfield      #37                 // Field path:Ljava/lang/String;
        40: aload_0                 
        41: new           #41                 // class java/io/FileDescriptor
        44: dup                     
        45: invokespecial #43                 // Method java/io/FileDescriptor."<init>":()V
        48: putfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        51: aload_0                 
        52: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        55: aload_0                 
        56: invokevirtual #48                 // Method java/io/FileDescriptor.attach:(Ljava/io/Closeable;)V
        59: aload_0                 
        60: aload_0                 
        61: getfield      #37                 // Field path:Ljava/lang/String;
        64: iload_2                 
        65: invokevirtual #52                 // Method open:(Ljava/lang/String;Z)V
        68: aload_0                 
        69: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        72: invokestatic  #56                 // Method java/io/FileCleanable.register:(Ljava/io/FileDescriptor;)V
        75: return                  
      LineNumberTable:
        line 201: 0
        line 94: 4
        line 202: 15
        line 203: 22
        line 205: 32
        line 207: 40
        line 208: 51
        line 210: 59
        line 211: 68
        line 212: 75
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       76     0  this   Ljava/io/FileOutputStream;
           0       76     1  file   Ljava/io/File;
           0       76     2  append Z
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [class java/io/FileOutputStream, class java/io/File, int]
          stack = []
    Exceptions:
      throws java.io.FileNotFoundException
  
  public java.io.FileOutputStream(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_0                 
         1: invokespecial #12                 // Method java/io/OutputStream."<init>":()V
         4: aload_0                 
         5: new           #17                 // class java/lang/Object
         8: dup                     
         9: invokespecial #19                 // Method java/lang/Object."<init>":()V
        12: putfield      #20                 // Field closeLock:Ljava/lang/Object;
        15: aload_1                 
        16: ifnonnull     27                
        19: new           #62                 // class java/lang/NullPointerException
        22: dup                     
        23: invokespecial #64                 // Method java/lang/NullPointerException."<init>":()V
        26: athrow                  
        27: aload_0                 
        28: aload_1                 
        29: putfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        32: aload_0                 
        33: aconst_null             
        34: putfield      #37                 // Field path:Ljava/lang/String;
        37: aload_0                 
        38: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        41: aload_0                 
        42: invokevirtual #48                 // Method java/io/FileDescriptor.attach:(Ljava/io/Closeable;)V
        45: return                  
      LineNumberTable:
        line 230: 0
        line 94: 4
        line 231: 15
        line 232: 19
        line 234: 27
        line 235: 32
        line 237: 37
        line 238: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  this   Ljava/io/FileOutputStream;
           0       46     1  fdObj  Ljava/io/FileDescriptor;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [class java/io/FileOutputStream, class java/io/FileDescriptor]
          stack = []
  
  private native void open0(java.lang.String, boolean) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;Z)V
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.FileNotFoundException
  
  private void open(java.lang.String, boolean) throws java.io.FileNotFoundException;
    descriptor: (Ljava/lang/String;Z)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: iload_2                 
         3: invokevirtual #65                 // Method open0:(Ljava/lang/String;Z)V
         6: return                  
      LineNumberTable:
        line 255: 0
        line 256: 6
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljava/io/FileOutputStream;
           0        7     1  name   Ljava/lang/String;
           0        7     2  append Z
    Exceptions:
      throws java.io.FileNotFoundException
  
  private native void write(int, boolean) throws java.io.IOException;
    descriptor: (IZ)V
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  private void traceWrite(int, boolean) throws java.io.IOException;
    descriptor: (IZ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=7, locals=12, args_size=3
         0: lconst_0                
         1: lstore_3                
         2: lconst_0                
         3: lstore        5                 
         5: invokestatic  #68                 // Method jdk/internal/event/FileWriteEvent.timestamp:()J
         8: lstore        5                 
        10: aload_0                 
        11: iload_1                 
        12: iload_2                 
        13: invokevirtual #74                 // Method write:(IZ)V
        16: lconst_1                
        17: lstore_3                
        18: invokestatic  #68                 // Method jdk/internal/event/FileWriteEvent.timestamp:()J
        21: lload         5                 
        23: lsub                    
        24: lstore        7                 
        26: lload         7                 
        28: invokestatic  #78                 // Method jdk/internal/event/FileWriteEvent.shouldCommit:(J)Z
        31: ifeq          46                
        34: lload         5                 
        36: lload         7                 
        38: aload_0                 
        39: getfield      #37                 // Field path:Ljava/lang/String;
        42: lload_3                 
        43: invokestatic  #82                 // Method jdk/internal/event/FileWriteEvent.commit:(JJLjava/lang/String;J)V
        46: goto          82                
        49: astore        9                 
        51: invokestatic  #68                 // Method jdk/internal/event/FileWriteEvent.timestamp:()J
        54: lload         5                 
        56: lsub                    
        57: lstore        10                
        59: lload         10                
        61: invokestatic  #78                 // Method jdk/internal/event/FileWriteEvent.shouldCommit:(J)Z
        64: ifeq          79                
        67: lload         5                 
        69: lload         10                
        71: aload_0                 
        72: getfield      #37                 // Field path:Ljava/lang/String;
        75: lload_3                 
        76: invokestatic  #82                 // Method jdk/internal/event/FileWriteEvent.commit:(JJLjava/lang/String;J)V
        79: aload         9                 
        81: athrow                  
        82: return                  
      Exception table:
          from       to target type
             5       18    49  any
            49       51    49  any
      LineNumberTable:
        line 268: 0
        line 269: 2
        line 271: 5
        line 272: 10
        line 273: 16
        line 275: 18
        line 276: 26
        line 277: 34
        line 279: 46
        line 275: 49
        line 276: 59
        line 277: 67
        line 279: 79
        line 280: 82
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          26       20     7  duration J
          59       20    10  duration J
           0       83     0  this   Ljava/io/FileOutputStream;
           0       83     1  b      I
           0       83     2  append Z
           2       81     3  bytesWritten J
           5       78     5  start  J
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [long, long]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 254 /* append */
          offset_delta = 29
          locals = [top, top, class java/lang/Throwable]
        frame_type = 248 /* chop */
          offset_delta = 2
    Exceptions:
      throws java.io.IOException
  
  public void write(int) throws java.io.IOException;
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=3, args_size=2
         0: getstatic     #86                 // Field FD_ACCESS:Ljdk/internal/access/JavaIOFileDescriptorAccess;
         3: aload_0                 
         4: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
         7: invokeinterface #90, 2              // InterfaceMethod jdk/internal/access/JavaIOFileDescriptorAccess.getAppend:(Ljava/io/FileDescriptor;)Z
        12: istore_2                
        13: getstatic     #96                 // Field jfrTracing:Z
        16: ifeq          32                
        19: invokestatic  #100                // Method jdk/internal/event/FileWriteEvent.enabled:()Z
        22: ifeq          32                
        25: aload_0                 
        26: iload_1                 
        27: iload_2                 
        28: invokevirtual #103                // Method traceWrite:(IZ)V
        31: return                  
        32: aload_0                 
        33: iload_1                 
        34: iload_2                 
        35: invokevirtual #74                 // Method write:(IZ)V
        38: return                  
      LineNumberTable:
        line 291: 0
        line 292: 13
        line 293: 25
        line 294: 31
        line 296: 32
        line 297: 38
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       39     0  this   Ljava/io/FileOutputStream;
           0       39     1  b      I
          13       26     2  append Z
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [int]
    Exceptions:
      throws java.io.IOException
  
  private native void writeBytes(byte[], int, int, boolean) throws java.io.IOException;
    descriptor: ([BIIZ)V
    flags: (0x0102) ACC_PRIVATE, ACC_NATIVE
    Exceptions:
      throws java.io.IOException
  
  private void traceWriteBytes(byte[], int, int, boolean) throws java.io.IOException;
    descriptor: ([BIIZ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=7, locals=14, args_size=5
         0: lconst_0                
         1: lstore        5                 
         3: lconst_0                
         4: lstore        7                 
         6: invokestatic  #68                 // Method jdk/internal/event/FileWriteEvent.timestamp:()J
         9: lstore        7                 
        11: aload_0                 
        12: aload_1                 
        13: iload_2                 
        14: iload_3                 
        15: iload         4                 
        17: invokevirtual #106                // Method writeBytes:([BIIZ)V
        20: iload_3                 
        21: i2l                     
        22: lstore        5                 
        24: invokestatic  #68                 // Method jdk/internal/event/FileWriteEvent.timestamp:()J
        27: lload         7                 
        29: lsub                    
        30: lstore        9                 
        32: lload         9                 
        34: invokestatic  #78                 // Method jdk/internal/event/FileWriteEvent.shouldCommit:(J)Z
        37: ifeq          53                
        40: lload         7                 
        42: lload         9                 
        44: aload_0                 
        45: getfield      #37                 // Field path:Ljava/lang/String;
        48: lload         5                 
        50: invokestatic  #82                 // Method jdk/internal/event/FileWriteEvent.commit:(JJLjava/lang/String;J)V
        53: goto          90                
        56: astore        11                
        58: invokestatic  #68                 // Method jdk/internal/event/FileWriteEvent.timestamp:()J
        61: lload         7                 
        63: lsub                    
        64: lstore        12                
        66: lload         12                
        68: invokestatic  #78                 // Method jdk/internal/event/FileWriteEvent.shouldCommit:(J)Z
        71: ifeq          87                
        74: lload         7                 
        76: lload         12                
        78: aload_0                 
        79: getfield      #37                 // Field path:Ljava/lang/String;
        82: lload         5                 
        84: invokestatic  #82                 // Method jdk/internal/event/FileWriteEvent.commit:(JJLjava/lang/String;J)V
        87: aload         11                
        89: athrow                  
        90: return                  
      Exception table:
          from       to target type
             6       24    56  any
            56       58    56  any
      LineNumberTable:
        line 312: 0
        line 313: 3
        line 315: 6
        line 316: 11
        line 317: 20
        line 319: 24
        line 320: 32
        line 321: 40
        line 323: 53
        line 319: 56
        line 320: 66
        line 321: 74
        line 323: 87
        line 324: 90
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          32       21     9  duration J
          66       21    12  duration J
           0       91     0  this   Ljava/io/FileOutputStream;
           0       91     1  b      [B
           0       91     2  off    I
           0       91     3  len    I
           0       91     4  append Z
           3       88     5  bytesWritten J
           6       85     7  start  J
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 53
          locals = [long, long]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [top, top, class java/lang/Throwable]
        frame_type = 248 /* chop */
          offset_delta = 2
    Exceptions:
      throws java.io.IOException
  
  public void write(byte[]) throws java.io.IOException;
    descriptor: ([B)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=3, args_size=2
         0: getstatic     #86                 // Field FD_ACCESS:Ljdk/internal/access/JavaIOFileDescriptorAccess;
         3: aload_0                 
         4: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
         7: invokeinterface #90, 2              // InterfaceMethod jdk/internal/access/JavaIOFileDescriptorAccess.getAppend:(Ljava/io/FileDescriptor;)Z
        12: istore_2                
        13: getstatic     #96                 // Field jfrTracing:Z
        16: ifeq          35                
        19: invokestatic  #100                // Method jdk/internal/event/FileWriteEvent.enabled:()Z
        22: ifeq          35                
        25: aload_0                 
        26: aload_1                 
        27: iconst_0                
        28: aload_1                 
        29: arraylength             
        30: iload_2                 
        31: invokevirtual #110                // Method traceWriteBytes:([BIIZ)V
        34: return                  
        35: aload_0                 
        36: aload_1                 
        37: iconst_0                
        38: aload_1                 
        39: arraylength             
        40: iload_2                 
        41: invokevirtual #106                // Method writeBytes:([BIIZ)V
        44: return                  
      LineNumberTable:
        line 335: 0
        line 336: 13
        line 337: 25
        line 338: 34
        line 340: 35
        line 341: 44
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       45     0  this   Ljava/io/FileOutputStream;
           0       45     1  b      [B
          13       32     2  append Z
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 35
          locals = [int]
    Exceptions:
      throws java.io.IOException
  
  public void write(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=5, args_size=4
         0: getstatic     #86                 // Field FD_ACCESS:Ljdk/internal/access/JavaIOFileDescriptorAccess;
         3: aload_0                 
         4: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
         7: invokeinterface #90, 2              // InterfaceMethod jdk/internal/access/JavaIOFileDescriptorAccess.getAppend:(Ljava/io/FileDescriptor;)Z
        12: istore        4                 
        14: getstatic     #96                 // Field jfrTracing:Z
        17: ifeq          36                
        20: invokestatic  #100                // Method jdk/internal/event/FileWriteEvent.enabled:()Z
        23: ifeq          36                
        26: aload_0                 
        27: aload_1                 
        28: iload_2                 
        29: iload_3                 
        30: iload         4                 
        32: invokevirtual #110                // Method traceWriteBytes:([BIIZ)V
        35: return                  
        36: aload_0                 
        37: aload_1                 
        38: iload_2                 
        39: iload_3                 
        40: iload         4                 
        42: invokevirtual #106                // Method writeBytes:([BIIZ)V
        45: return                  
      LineNumberTable:
        line 355: 0
        line 356: 14
        line 357: 26
        line 358: 35
        line 360: 36
        line 361: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  this   Ljava/io/FileOutputStream;
           0       46     1  b      [B
           0       46     2  off    I
           0       46     3  len    I
          14       32     4  append Z
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [int]
    Exceptions:
      throws java.io.IOException
  
  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=3, args_size=1
         0: aload_0                 
         1: getfield      #113                // Field closed:Z
         4: ifeq          8                 
         7: return                  
         8: aload_0                 
         9: getfield      #20                 // Field closeLock:Ljava/lang/Object;
        12: dup                     
        13: astore_1                
        14: monitorenter            
        15: aload_0                 
        16: getfield      #113                // Field closed:Z
        19: ifeq          25                
        22: aload_1                 
        23: monitorexit             
        24: return                  
        25: aload_0                 
        26: iconst_1                
        27: putfield      #113                // Field closed:Z
        30: aload_1                 
        31: monitorexit             
        32: goto          40                
        35: astore_2                
        36: aload_1                 
        37: monitorexit             
        38: aload_2                 
        39: athrow                  
        40: aload_0                 
        41: getfield      #116                // Field channel:Ljava/nio/channels/FileChannel;
        44: astore_1                
        45: aload_1                 
        46: ifnull        53                
        49: aload_1                 
        50: invokevirtual #120                // Method java/nio/channels/FileChannel.close:()V
        53: aload_0                 
        54: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        57: new           #125                // class java/io/FileOutputStream$1
        60: dup                     
        61: aload_0                 
        62: invokespecial #127                // Method java/io/FileOutputStream$1."<init>":(Ljava/io/FileOutputStream;)V
        65: invokevirtual #130                // Method java/io/FileDescriptor.closeAll:(Ljava/io/Closeable;)V
        68: return                  
      Exception table:
          from       to target type
            15       24    35  any
            25       32    35  any
            35       38    35  any
      LineNumberTable:
        line 388: 0
        line 389: 7
        line 391: 8
        line 392: 15
        line 393: 22
        line 395: 25
        line 396: 30
        line 398: 40
        line 399: 45
        line 402: 49
        line 405: 53
        line 410: 68
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       69     0  this   Ljava/io/FileOutputStream;
          45       24     1  fc     Ljava/nio/channels/FileChannel;
      StackMapTable: number_of_entries = 5
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [class java/lang/Object]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [class java/nio/channels/FileChannel]
    Exceptions:
      throws java.io.IOException
  
  public final java.io.FileDescriptor getFD() throws java.io.IOException;
    descriptor: ()Ljava/io/FileDescriptor;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
         4: ifnull        12                
         7: aload_0                 
         8: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        11: areturn                 
        12: new           #133                // class java/io/IOException
        15: dup                     
        16: invokespecial #135                // Method java/io/IOException."<init>":()V
        19: athrow                  
      LineNumberTable:
        line 423: 0
        line 424: 7
        line 426: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/io/FileOutputStream;
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
    Exceptions:
      throws java.io.IOException
  
  public java.nio.channels.FileChannel getChannel();
    descriptor: ()Ljava/nio/channels/FileChannel;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=5, args_size=1
         0: aload_0                 
         1: getfield      #116                // Field channel:Ljava/nio/channels/FileChannel;
         4: astore_1                
         5: aload_1                 
         6: ifnonnull     80                
         9: aload_0                 
        10: dup                     
        11: astore_2                
        12: monitorenter            
        13: aload_0                 
        14: getfield      #116                // Field channel:Ljava/nio/channels/FileChannel;
        17: astore_1                
        18: aload_1                 
        19: ifnonnull     68                
        22: aload_0                 
        23: getfield      #44                 // Field fd:Ljava/io/FileDescriptor;
        26: aload_0                 
        27: getfield      #37                 // Field path:Ljava/lang/String;
        30: iconst_0                
        31: iconst_1                
        32: iconst_0                
        33: iconst_0                
        34: aload_0                 
        35: invokestatic  #136                // Method sun/nio/ch/FileChannelImpl.open:(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZZLjava/io/Closeable;)Ljava/nio/channels/FileChannel;
        38: astore_1                
        39: aload_0                 
        40: aload_1                 
        41: putfield      #116                // Field channel:Ljava/nio/channels/FileChannel;
        44: aload_0                 
        45: getfield      #113                // Field closed:Z
        48: ifeq          68                
        51: aload_1                 
        52: invokevirtual #120                // Method java/nio/channels/FileChannel.close:()V
        55: goto          68                
        58: astore_3                
        59: new           #141                // class java/lang/InternalError
        62: dup                     
        63: aload_3                 
        64: invokespecial #143                // Method java/lang/InternalError."<init>":(Ljava/lang/Throwable;)V
        67: athrow                  
        68: aload_2                 
        69: monitorexit             
        70: goto          80                
        73: astore        4                 
        75: aload_2                 
        76: monitorexit             
        77: aload         4                 
        79: athrow                  
        80: aload_1                 
        81: areturn                 
      Exception table:
          from       to target type
            51       55    58  Class java/io/IOException
            13       70    73  any
            73       77    73  any
      LineNumberTable:
        line 446: 0
        line 447: 5
        line 448: 9
        line 449: 13
        line 450: 18
        line 451: 22
        line 452: 39
        line 453: 44
        line 457: 51
        line 460: 55
        line 458: 58
        line 459: 59
        line 463: 68
        line 465: 80
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          59        9     3  ioe    Ljava/io/IOException;
           0       82     0  this   Ljava/io/FileOutputStream;
           5       77     1  fc     Ljava/nio/channels/FileChannel;
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [class java/io/FileOutputStream, class java/nio/channels/FileChannel, class java/lang/Object]
          stack = [class java/io/IOException]
        frame_type = 9 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 6
  
  private static native void initIDs();
    descriptor: ()V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #146                // Method jdk/internal/access/SharedSecrets.getJavaIOFileDescriptorAccess:()Ljdk/internal/access/JavaIOFileDescriptorAccess;
         3: putstatic     #86                 // Field FD_ACCESS:Ljdk/internal/access/JavaIOFileDescriptorAccess;
         6: invokestatic  #152                // Method initIDs:()V
         9: return                  
      LineNumberTable:
        line 70: 0
        line 471: 6
        line 472: 9
}
SourceFile: "FileOutputStream.java"
NestMembers:
  java/io/FileOutputStream$1
InnerClasses:
  #125;                                       // class java/io/FileOutputStream$1
