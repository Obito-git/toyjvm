---
source: class_file/src/lib.rs
expression: display
---
public class jdk.internal.misc.ScopedMemoryAccess 
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                       //jdk/internal/misc/ScopedMemoryAccess
  super_class: #8                      //java/lang/Object
  interfaces: 0, fields: 2, methods: 378, attributes: 3
Constant pool:
     #1 = Methodref          #2.#3            // jdk/internal/misc/ScopedMemoryAccess.closeScope0:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;)V
     #2 = Class              #4               // jdk/internal/misc/ScopedMemoryAccess
     #3 = NameAndType        #5:#6            // closeScope0:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;)V
     #4 = Utf8               jdk/internal/misc/ScopedMemoryAccess
     #5 = Utf8               closeScope0
     #6 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;)V
     #7 = Methodref          #8.#9            // java/lang/Object."<init>":()V
     #8 = Class              #10              // java/lang/Object
     #9 = NameAndType        #11:#12          // "<init>":()V
    #10 = Utf8               java/lang/Object
    #11 = Utf8               <init>
    #12 = Utf8               ()V
    #13 = Fieldref           #2.#14           // jdk/internal/misc/ScopedMemoryAccess.theScopedMemoryAccess:Ljdk/internal/misc/ScopedMemoryAccess;
    #14 = NameAndType        #15:#16          // theScopedMemoryAccess:Ljdk/internal/misc/ScopedMemoryAccess;
    #15 = Utf8               theScopedMemoryAccess
    #16 = Utf8               Ljdk/internal/misc/ScopedMemoryAccess;
    #17 = Methodref          #2.#18           // jdk/internal/misc/ScopedMemoryAccess.copyMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
    #18 = NameAndType        #19:#20          // copyMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
    #19 = Utf8               copyMemoryInternal
    #20 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
    #21 = Class              #22              // jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
    #22 = Utf8               jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
    #23 = Methodref          #21.#24          // jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
    #24 = NameAndType        #25:#26          // newRuntimeException:()Ljava/lang/RuntimeException;
    #25 = Utf8               newRuntimeException
    #26 = Utf8               ()Ljava/lang/RuntimeException;
    #27 = Methodref          #28.#29          // jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
    #28 = Class              #30              // jdk/internal/foreign/MemorySessionImpl
    #29 = NameAndType        #31:#12          // checkValidStateRaw:()V
    #30 = Utf8               jdk/internal/foreign/MemorySessionImpl
    #31 = Utf8               checkValidStateRaw
    #32 = Fieldref           #2.#33           // jdk/internal/misc/ScopedMemoryAccess.UNSAFE:Ljdk/internal/misc/Unsafe;
    #33 = NameAndType        #34:#35          // UNSAFE:Ljdk/internal/misc/Unsafe;
    #34 = Utf8               UNSAFE
    #35 = Utf8               Ljdk/internal/misc/Unsafe;
    #36 = Methodref          #37.#38          // jdk/internal/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
    #37 = Class              #39              // jdk/internal/misc/Unsafe
    #38 = NameAndType        #40:#41          // copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
    #39 = Utf8               jdk/internal/misc/Unsafe
    #40 = Utf8               copyMemory
    #41 = Utf8               (Ljava/lang/Object;JLjava/lang/Object;JJ)V
    #42 = Methodref          #43.#44          // java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
    #43 = Class              #45              // java/lang/ref/Reference
    #44 = NameAndType        #46:#47          // reachabilityFence:(Ljava/lang/Object;)V
    #45 = Utf8               java/lang/ref/Reference
    #46 = Utf8               reachabilityFence
    #47 = Utf8               (Ljava/lang/Object;)V
    #48 = Methodref          #2.#49           // jdk/internal/misc/ScopedMemoryAccess.copySwapMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    #49 = NameAndType        #50:#51          // copySwapMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    #50 = Utf8               copySwapMemoryInternal
    #51 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    #52 = Methodref          #37.#53          // jdk/internal/misc/Unsafe.copySwapMemory:(Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    #53 = NameAndType        #54:#55          // copySwapMemory:(Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    #54 = Utf8               copySwapMemory
    #55 = Utf8               (Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    #56 = Methodref          #2.#57           // jdk/internal/misc/ScopedMemoryAccess.setMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJB)V
    #57 = NameAndType        #58:#59          // setMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJB)V
    #58 = Utf8               setMemoryInternal
    #59 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJB)V
    #60 = Methodref          #37.#61          // jdk/internal/misc/Unsafe.setMemory:(Ljava/lang/Object;JJB)V
    #61 = NameAndType        #62:#63          // setMemory:(Ljava/lang/Object;JJB)V
    #62 = Utf8               setMemory
    #63 = Utf8               (Ljava/lang/Object;JJB)V
    #64 = Methodref          #2.#65           // jdk/internal/misc/ScopedMemoryAccess.vectorizedMismatchInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JII)I
    #65 = NameAndType        #66:#67          // vectorizedMismatchInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JII)I
    #66 = Utf8               vectorizedMismatchInternal
    #67 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JII)I
    #68 = Methodref          #69.#70          // jdk/internal/util/ArraysSupport.vectorizedMismatch:(Ljava/lang/Object;JLjava/lang/Object;JII)I
    #69 = Class              #71              // jdk/internal/util/ArraysSupport
    #70 = NameAndType        #72:#73          // vectorizedMismatch:(Ljava/lang/Object;JLjava/lang/Object;JII)I
    #71 = Utf8               jdk/internal/util/ArraysSupport
    #72 = Utf8               vectorizedMismatch
    #73 = Utf8               (Ljava/lang/Object;JLjava/lang/Object;JII)I
    #74 = Methodref          #2.#75           // jdk/internal/misc/ScopedMemoryAccess.isLoadedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)Z
    #75 = NameAndType        #76:#77          // isLoadedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)Z
    #76 = Utf8               isLoadedInternal
    #77 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)Z
    #78 = InterfaceMethodref #79.#80          // jdk/internal/access/foreign/MappedMemoryUtilsProxy.isLoaded:(JZJ)Z
    #79 = Class              #81              // jdk/internal/access/foreign/MappedMemoryUtilsProxy
    #80 = NameAndType        #82:#83          // isLoaded:(JZJ)Z
    #81 = Utf8               jdk/internal/access/foreign/MappedMemoryUtilsProxy
    #82 = Utf8               isLoaded
    #83 = Utf8               (JZJ)Z
    #84 = Methodref          #2.#85           // jdk/internal/misc/ScopedMemoryAccess.loadInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    #85 = NameAndType        #86:#87          // loadInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    #86 = Utf8               loadInternal
    #87 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    #88 = InterfaceMethodref #79.#89          // jdk/internal/access/foreign/MappedMemoryUtilsProxy.load:(JZJ)V
    #89 = NameAndType        #90:#91          // load:(JZJ)V
    #90 = Utf8               load
    #91 = Utf8               (JZJ)V
    #92 = Methodref          #2.#93           // jdk/internal/misc/ScopedMemoryAccess.unloadInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    #93 = NameAndType        #94:#87          // unloadInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    #94 = Utf8               unloadInternal
    #95 = InterfaceMethodref #79.#96          // jdk/internal/access/foreign/MappedMemoryUtilsProxy.unload:(JZJ)V
    #96 = NameAndType        #97:#91          // unload:(JZJ)V
    #97 = Utf8               unload
    #98 = Methodref          #2.#99           // jdk/internal/misc/ScopedMemoryAccess.forceInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;Ljava/io/FileDescriptor;JZJJ)V
    #99 = NameAndType        #100:#101        // forceInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;Ljava/io/FileDescriptor;JZJJ)V
   #100 = Utf8               forceInternal
   #101 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;Ljava/io/FileDescriptor;JZJJ)V
   #102 = InterfaceMethodref #79.#103         // jdk/internal/access/foreign/MappedMemoryUtilsProxy.force:(Ljava/io/FileDescriptor;JZJJ)V
   #103 = NameAndType        #104:#105        // force:(Ljava/io/FileDescriptor;JZJJ)V
   #104 = Utf8               force
   #105 = Utf8               (Ljava/io/FileDescriptor;JZJJ)V
   #106 = Methodref          #107.#108        // jdk/internal/foreign/AbstractMemorySegmentImpl.sessionImpl:()Ljdk/internal/foreign/MemorySessionImpl;
   #107 = Class              #109             // jdk/internal/foreign/AbstractMemorySegmentImpl
   #108 = NameAndType        #110:#111        // sessionImpl:()Ljdk/internal/foreign/MemorySessionImpl;
   #109 = Utf8               jdk/internal/foreign/AbstractMemorySegmentImpl
   #110 = Utf8               sessionImpl
   #111 = Utf8               ()Ljdk/internal/foreign/MemorySessionImpl;
   #112 = Methodref          #2.#113          // jdk/internal/misc/ScopedMemoryAccess.loadFromMemorySegmentScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #113 = NameAndType        #114:#115        // loadFromMemorySegmentScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #114 = Utf8               loadFromMemorySegmentScopedInternal
   #115 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #116 = Methodref          #107.#117        // jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetBase:()Ljava/lang/Object;
   #117 = NameAndType        #118:#119        // unsafeGetBase:()Ljava/lang/Object;
   #118 = Utf8               unsafeGetBase
   #119 = Utf8               ()Ljava/lang/Object;
   #120 = Methodref          #107.#121        // jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetOffset:()J
   #121 = NameAndType        #122:#123        // unsafeGetOffset:()J
   #122 = Utf8               unsafeGetOffset
   #123 = Utf8               ()J
   #124 = Methodref          #125.#126        // jdk/internal/vm/vector/VectorSupport.load:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$VectorPayload;
   #125 = Class              #127             // jdk/internal/vm/vector/VectorSupport
   #126 = NameAndType        #90:#128         // load:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$VectorPayload;
   #127 = Utf8               jdk/internal/vm/vector/VectorSupport
   #128 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$VectorPayload;
   #129 = Class              #130             // jdk/internal/vm/vector/VectorSupport$Vector
   #130 = Utf8               jdk/internal/vm/vector/VectorSupport$Vector
   #131 = Methodref          #2.#132          // jdk/internal/misc/ScopedMemoryAccess.loadFromMemorySegmentMaskedScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #132 = NameAndType        #133:#134        // loadFromMemorySegmentMaskedScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #133 = Utf8               loadFromMemorySegmentMaskedScopedInternal
   #134 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #135 = Methodref          #125.#136        // jdk/internal/vm/vector/VectorSupport.loadMasked:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorMask;ILjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #136 = NameAndType        #137:#138        // loadMasked:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorMask;ILjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #137 = Utf8               loadMasked
   #138 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorMask;ILjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
   #139 = Methodref          #2.#140          // jdk/internal/misc/ScopedMemoryAccess.storeIntoMemorySegmentScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
   #140 = NameAndType        #141:#142        // storeIntoMemorySegmentScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
   #141 = Utf8               storeIntoMemorySegmentScopedInternal
   #142 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
   #143 = Methodref          #125.#144        // jdk/internal/vm/vector/VectorSupport.store:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorPayload;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
   #144 = NameAndType        #145:#146        // store:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorPayload;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
   #145 = Utf8               store
   #146 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorPayload;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
   #147 = Methodref          #2.#148          // jdk/internal/misc/ScopedMemoryAccess.storeIntoMemorySegmentMaskedScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
   #148 = NameAndType        #149:#150        // storeIntoMemorySegmentMaskedScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
   #149 = Utf8               storeIntoMemorySegmentMaskedScopedInternal
   #150 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
   #151 = Methodref          #125.#152        // jdk/internal/vm/vector/VectorSupport.storeMasked:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
   #152 = NameAndType        #153:#154        // storeMasked:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
   #153 = Utf8               storeMasked
   #154 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
   #155 = Methodref          #2.#156          // jdk/internal/misc/ScopedMemoryAccess.getByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #156 = NameAndType        #157:#158        // getByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #157 = Utf8               getByteInternal
   #158 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #159 = Methodref          #37.#160         // jdk/internal/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
   #160 = NameAndType        #161:#162        // getByte:(Ljava/lang/Object;J)B
   #161 = Utf8               getByte
   #162 = Utf8               (Ljava/lang/Object;J)B
   #163 = Methodref          #2.#164          // jdk/internal/misc/ScopedMemoryAccess.putByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #164 = NameAndType        #165:#166        // putByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #165 = Utf8               putByteInternal
   #166 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #167 = Methodref          #37.#168         // jdk/internal/misc/Unsafe.putByte:(Ljava/lang/Object;JB)V
   #168 = NameAndType        #169:#170        // putByte:(Ljava/lang/Object;JB)V
   #169 = Utf8               putByte
   #170 = Utf8               (Ljava/lang/Object;JB)V
   #171 = Methodref          #2.#172          // jdk/internal/misc/ScopedMemoryAccess.getByteVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #172 = NameAndType        #173:#158        // getByteVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #173 = Utf8               getByteVolatileInternal
   #174 = Methodref          #37.#175         // jdk/internal/misc/Unsafe.getByteVolatile:(Ljava/lang/Object;J)B
   #175 = NameAndType        #176:#162        // getByteVolatile:(Ljava/lang/Object;J)B
   #176 = Utf8               getByteVolatile
   #177 = Methodref          #2.#178          // jdk/internal/misc/ScopedMemoryAccess.putByteVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #178 = NameAndType        #179:#166        // putByteVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #179 = Utf8               putByteVolatileInternal
   #180 = Methodref          #37.#181         // jdk/internal/misc/Unsafe.putByteVolatile:(Ljava/lang/Object;JB)V
   #181 = NameAndType        #182:#170        // putByteVolatile:(Ljava/lang/Object;JB)V
   #182 = Utf8               putByteVolatile
   #183 = Methodref          #2.#184          // jdk/internal/misc/ScopedMemoryAccess.getByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #184 = NameAndType        #185:#158        // getByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #185 = Utf8               getByteAcquireInternal
   #186 = Methodref          #37.#187         // jdk/internal/misc/Unsafe.getByteAcquire:(Ljava/lang/Object;J)B
   #187 = NameAndType        #188:#162        // getByteAcquire:(Ljava/lang/Object;J)B
   #188 = Utf8               getByteAcquire
   #189 = Methodref          #2.#190          // jdk/internal/misc/ScopedMemoryAccess.putByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #190 = NameAndType        #191:#166        // putByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #191 = Utf8               putByteReleaseInternal
   #192 = Methodref          #37.#193         // jdk/internal/misc/Unsafe.putByteRelease:(Ljava/lang/Object;JB)V
   #193 = NameAndType        #194:#170        // putByteRelease:(Ljava/lang/Object;JB)V
   #194 = Utf8               putByteRelease
   #195 = Methodref          #2.#196          // jdk/internal/misc/ScopedMemoryAccess.getByteOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #196 = NameAndType        #197:#158        // getByteOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
   #197 = Utf8               getByteOpaqueInternal
   #198 = Methodref          #37.#199         // jdk/internal/misc/Unsafe.getByteOpaque:(Ljava/lang/Object;J)B
   #199 = NameAndType        #200:#162        // getByteOpaque:(Ljava/lang/Object;J)B
   #200 = Utf8               getByteOpaque
   #201 = Methodref          #2.#202          // jdk/internal/misc/ScopedMemoryAccess.putByteOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #202 = NameAndType        #203:#166        // putByteOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
   #203 = Utf8               putByteOpaqueInternal
   #204 = Methodref          #37.#205         // jdk/internal/misc/Unsafe.putByteOpaque:(Ljava/lang/Object;JB)V
   #205 = NameAndType        #206:#170        // putByteOpaque:(Ljava/lang/Object;JB)V
   #206 = Utf8               putByteOpaque
   #207 = Methodref          #2.#208          // jdk/internal/misc/ScopedMemoryAccess.getAndAddByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #208 = NameAndType        #209:#210        // getAndAddByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #209 = Utf8               getAndAddByteInternal
   #210 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #211 = Methodref          #37.#212         // jdk/internal/misc/Unsafe.getAndAddByte:(Ljava/lang/Object;JB)B
   #212 = NameAndType        #213:#214        // getAndAddByte:(Ljava/lang/Object;JB)B
   #213 = Utf8               getAndAddByte
   #214 = Utf8               (Ljava/lang/Object;JB)B
   #215 = Methodref          #2.#216          // jdk/internal/misc/ScopedMemoryAccess.getAndAddByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #216 = NameAndType        #217:#210        // getAndAddByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #217 = Utf8               getAndAddByteAcquireInternal
   #218 = Methodref          #37.#219         // jdk/internal/misc/Unsafe.getAndAddByteAcquire:(Ljava/lang/Object;JB)B
   #219 = NameAndType        #220:#214        // getAndAddByteAcquire:(Ljava/lang/Object;JB)B
   #220 = Utf8               getAndAddByteAcquire
   #221 = Methodref          #2.#222          // jdk/internal/misc/ScopedMemoryAccess.getAndAddByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #222 = NameAndType        #223:#210        // getAndAddByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #223 = Utf8               getAndAddByteReleaseInternal
   #224 = Methodref          #37.#225         // jdk/internal/misc/Unsafe.getAndAddByteRelease:(Ljava/lang/Object;JB)B
   #225 = NameAndType        #226:#214        // getAndAddByteRelease:(Ljava/lang/Object;JB)B
   #226 = Utf8               getAndAddByteRelease
   #227 = Methodref          #2.#228          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #228 = NameAndType        #229:#210        // getAndBitwiseOrByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #229 = Utf8               getAndBitwiseOrByteInternal
   #230 = Methodref          #37.#231         // jdk/internal/misc/Unsafe.getAndBitwiseOrByte:(Ljava/lang/Object;JB)B
   #231 = NameAndType        #232:#214        // getAndBitwiseOrByte:(Ljava/lang/Object;JB)B
   #232 = Utf8               getAndBitwiseOrByte
   #233 = Methodref          #2.#234          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #234 = NameAndType        #235:#210        // getAndBitwiseOrByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #235 = Utf8               getAndBitwiseOrByteAcquireInternal
   #236 = Methodref          #37.#237         // jdk/internal/misc/Unsafe.getAndBitwiseOrByteAcquire:(Ljava/lang/Object;JB)B
   #237 = NameAndType        #238:#214        // getAndBitwiseOrByteAcquire:(Ljava/lang/Object;JB)B
   #238 = Utf8               getAndBitwiseOrByteAcquire
   #239 = Methodref          #2.#240          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #240 = NameAndType        #241:#210        // getAndBitwiseOrByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #241 = Utf8               getAndBitwiseOrByteReleaseInternal
   #242 = Methodref          #37.#243         // jdk/internal/misc/Unsafe.getAndBitwiseOrByteRelease:(Ljava/lang/Object;JB)B
   #243 = NameAndType        #244:#214        // getAndBitwiseOrByteRelease:(Ljava/lang/Object;JB)B
   #244 = Utf8               getAndBitwiseOrByteRelease
   #245 = Methodref          #2.#246          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #246 = NameAndType        #247:#210        // getAndBitwiseAndByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #247 = Utf8               getAndBitwiseAndByteInternal
   #248 = Methodref          #37.#249         // jdk/internal/misc/Unsafe.getAndBitwiseAndByte:(Ljava/lang/Object;JB)B
   #249 = NameAndType        #250:#214        // getAndBitwiseAndByte:(Ljava/lang/Object;JB)B
   #250 = Utf8               getAndBitwiseAndByte
   #251 = Methodref          #2.#252          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #252 = NameAndType        #253:#210        // getAndBitwiseAndByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #253 = Utf8               getAndBitwiseAndByteAcquireInternal
   #254 = Methodref          #37.#255         // jdk/internal/misc/Unsafe.getAndBitwiseAndByteAcquire:(Ljava/lang/Object;JB)B
   #255 = NameAndType        #256:#214        // getAndBitwiseAndByteAcquire:(Ljava/lang/Object;JB)B
   #256 = Utf8               getAndBitwiseAndByteAcquire
   #257 = Methodref          #2.#258          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #258 = NameAndType        #259:#210        // getAndBitwiseAndByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #259 = Utf8               getAndBitwiseAndByteReleaseInternal
   #260 = Methodref          #37.#261         // jdk/internal/misc/Unsafe.getAndBitwiseAndByteRelease:(Ljava/lang/Object;JB)B
   #261 = NameAndType        #262:#214        // getAndBitwiseAndByteRelease:(Ljava/lang/Object;JB)B
   #262 = Utf8               getAndBitwiseAndByteRelease
   #263 = Methodref          #2.#264          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #264 = NameAndType        #265:#210        // getAndBitwiseXorByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #265 = Utf8               getAndBitwiseXorByteInternal
   #266 = Methodref          #37.#267         // jdk/internal/misc/Unsafe.getAndBitwiseXorByte:(Ljava/lang/Object;JB)B
   #267 = NameAndType        #268:#214        // getAndBitwiseXorByte:(Ljava/lang/Object;JB)B
   #268 = Utf8               getAndBitwiseXorByte
   #269 = Methodref          #2.#270          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #270 = NameAndType        #271:#210        // getAndBitwiseXorByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #271 = Utf8               getAndBitwiseXorByteAcquireInternal
   #272 = Methodref          #37.#273         // jdk/internal/misc/Unsafe.getAndBitwiseXorByteAcquire:(Ljava/lang/Object;JB)B
   #273 = NameAndType        #274:#214        // getAndBitwiseXorByteAcquire:(Ljava/lang/Object;JB)B
   #274 = Utf8               getAndBitwiseXorByteAcquire
   #275 = Methodref          #2.#276          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #276 = NameAndType        #277:#210        // getAndBitwiseXorByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
   #277 = Utf8               getAndBitwiseXorByteReleaseInternal
   #278 = Methodref          #37.#279         // jdk/internal/misc/Unsafe.getAndBitwiseXorByteRelease:(Ljava/lang/Object;JB)B
   #279 = NameAndType        #280:#214        // getAndBitwiseXorByteRelease:(Ljava/lang/Object;JB)B
   #280 = Utf8               getAndBitwiseXorByteRelease
   #281 = Methodref          #2.#282          // jdk/internal/misc/ScopedMemoryAccess.getShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #282 = NameAndType        #283:#284        // getShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #283 = Utf8               getShortInternal
   #284 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #285 = Methodref          #37.#286         // jdk/internal/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
   #286 = NameAndType        #287:#288        // getShort:(Ljava/lang/Object;J)S
   #287 = Utf8               getShort
   #288 = Utf8               (Ljava/lang/Object;J)S
   #289 = Methodref          #2.#290          // jdk/internal/misc/ScopedMemoryAccess.putShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #290 = NameAndType        #291:#292        // putShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #291 = Utf8               putShortInternal
   #292 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #293 = Methodref          #37.#294         // jdk/internal/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
   #294 = NameAndType        #295:#296        // putShort:(Ljava/lang/Object;JS)V
   #295 = Utf8               putShort
   #296 = Utf8               (Ljava/lang/Object;JS)V
   #297 = Methodref          #2.#298          // jdk/internal/misc/ScopedMemoryAccess.getShortUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)S
   #298 = NameAndType        #299:#300        // getShortUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)S
   #299 = Utf8               getShortUnalignedInternal
   #300 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)S
   #301 = Methodref          #37.#302         // jdk/internal/misc/Unsafe.getShortUnaligned:(Ljava/lang/Object;JZ)S
   #302 = NameAndType        #303:#304        // getShortUnaligned:(Ljava/lang/Object;JZ)S
   #303 = Utf8               getShortUnaligned
   #304 = Utf8               (Ljava/lang/Object;JZ)S
   #305 = Methodref          #2.#306          // jdk/internal/misc/ScopedMemoryAccess.putShortUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JSZ)V
   #306 = NameAndType        #307:#308        // putShortUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JSZ)V
   #307 = Utf8               putShortUnalignedInternal
   #308 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JSZ)V
   #309 = Methodref          #37.#310         // jdk/internal/misc/Unsafe.putShortUnaligned:(Ljava/lang/Object;JSZ)V
   #310 = NameAndType        #311:#312        // putShortUnaligned:(Ljava/lang/Object;JSZ)V
   #311 = Utf8               putShortUnaligned
   #312 = Utf8               (Ljava/lang/Object;JSZ)V
   #313 = Methodref          #2.#314          // jdk/internal/misc/ScopedMemoryAccess.getShortVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #314 = NameAndType        #315:#284        // getShortVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #315 = Utf8               getShortVolatileInternal
   #316 = Methodref          #37.#317         // jdk/internal/misc/Unsafe.getShortVolatile:(Ljava/lang/Object;J)S
   #317 = NameAndType        #318:#288        // getShortVolatile:(Ljava/lang/Object;J)S
   #318 = Utf8               getShortVolatile
   #319 = Methodref          #2.#320          // jdk/internal/misc/ScopedMemoryAccess.putShortVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #320 = NameAndType        #321:#292        // putShortVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #321 = Utf8               putShortVolatileInternal
   #322 = Methodref          #37.#323         // jdk/internal/misc/Unsafe.putShortVolatile:(Ljava/lang/Object;JS)V
   #323 = NameAndType        #324:#296        // putShortVolatile:(Ljava/lang/Object;JS)V
   #324 = Utf8               putShortVolatile
   #325 = Methodref          #2.#326          // jdk/internal/misc/ScopedMemoryAccess.getShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #326 = NameAndType        #327:#284        // getShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #327 = Utf8               getShortAcquireInternal
   #328 = Methodref          #37.#329         // jdk/internal/misc/Unsafe.getShortAcquire:(Ljava/lang/Object;J)S
   #329 = NameAndType        #330:#288        // getShortAcquire:(Ljava/lang/Object;J)S
   #330 = Utf8               getShortAcquire
   #331 = Methodref          #2.#332          // jdk/internal/misc/ScopedMemoryAccess.putShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #332 = NameAndType        #333:#292        // putShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #333 = Utf8               putShortReleaseInternal
   #334 = Methodref          #37.#335         // jdk/internal/misc/Unsafe.putShortRelease:(Ljava/lang/Object;JS)V
   #335 = NameAndType        #336:#296        // putShortRelease:(Ljava/lang/Object;JS)V
   #336 = Utf8               putShortRelease
   #337 = Methodref          #2.#338          // jdk/internal/misc/ScopedMemoryAccess.getShortOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #338 = NameAndType        #339:#284        // getShortOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
   #339 = Utf8               getShortOpaqueInternal
   #340 = Methodref          #37.#341         // jdk/internal/misc/Unsafe.getShortOpaque:(Ljava/lang/Object;J)S
   #341 = NameAndType        #342:#288        // getShortOpaque:(Ljava/lang/Object;J)S
   #342 = Utf8               getShortOpaque
   #343 = Methodref          #2.#344          // jdk/internal/misc/ScopedMemoryAccess.putShortOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #344 = NameAndType        #345:#292        // putShortOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
   #345 = Utf8               putShortOpaqueInternal
   #346 = Methodref          #37.#347         // jdk/internal/misc/Unsafe.putShortOpaque:(Ljava/lang/Object;JS)V
   #347 = NameAndType        #348:#296        // putShortOpaque:(Ljava/lang/Object;JS)V
   #348 = Utf8               putShortOpaque
   #349 = Methodref          #2.#350          // jdk/internal/misc/ScopedMemoryAccess.getAndAddShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #350 = NameAndType        #351:#352        // getAndAddShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #351 = Utf8               getAndAddShortInternal
   #352 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #353 = Methodref          #37.#354         // jdk/internal/misc/Unsafe.getAndAddShort:(Ljava/lang/Object;JS)S
   #354 = NameAndType        #355:#356        // getAndAddShort:(Ljava/lang/Object;JS)S
   #355 = Utf8               getAndAddShort
   #356 = Utf8               (Ljava/lang/Object;JS)S
   #357 = Methodref          #2.#358          // jdk/internal/misc/ScopedMemoryAccess.getAndAddShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #358 = NameAndType        #359:#352        // getAndAddShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #359 = Utf8               getAndAddShortAcquireInternal
   #360 = Methodref          #37.#361         // jdk/internal/misc/Unsafe.getAndAddShortAcquire:(Ljava/lang/Object;JS)S
   #361 = NameAndType        #362:#356        // getAndAddShortAcquire:(Ljava/lang/Object;JS)S
   #362 = Utf8               getAndAddShortAcquire
   #363 = Methodref          #2.#364          // jdk/internal/misc/ScopedMemoryAccess.getAndAddShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #364 = NameAndType        #365:#352        // getAndAddShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #365 = Utf8               getAndAddShortReleaseInternal
   #366 = Methodref          #37.#367         // jdk/internal/misc/Unsafe.getAndAddShortRelease:(Ljava/lang/Object;JS)S
   #367 = NameAndType        #368:#356        // getAndAddShortRelease:(Ljava/lang/Object;JS)S
   #368 = Utf8               getAndAddShortRelease
   #369 = Methodref          #2.#370          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #370 = NameAndType        #371:#352        // getAndBitwiseOrShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #371 = Utf8               getAndBitwiseOrShortInternal
   #372 = Methodref          #37.#373         // jdk/internal/misc/Unsafe.getAndBitwiseOrShort:(Ljava/lang/Object;JS)S
   #373 = NameAndType        #374:#356        // getAndBitwiseOrShort:(Ljava/lang/Object;JS)S
   #374 = Utf8               getAndBitwiseOrShort
   #375 = Methodref          #2.#376          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #376 = NameAndType        #377:#352        // getAndBitwiseOrShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #377 = Utf8               getAndBitwiseOrShortAcquireInternal
   #378 = Methodref          #37.#379         // jdk/internal/misc/Unsafe.getAndBitwiseOrShortAcquire:(Ljava/lang/Object;JS)S
   #379 = NameAndType        #380:#356        // getAndBitwiseOrShortAcquire:(Ljava/lang/Object;JS)S
   #380 = Utf8               getAndBitwiseOrShortAcquire
   #381 = Methodref          #2.#382          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #382 = NameAndType        #383:#352        // getAndBitwiseOrShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #383 = Utf8               getAndBitwiseOrShortReleaseInternal
   #384 = Methodref          #37.#385         // jdk/internal/misc/Unsafe.getAndBitwiseOrShortRelease:(Ljava/lang/Object;JS)S
   #385 = NameAndType        #386:#356        // getAndBitwiseOrShortRelease:(Ljava/lang/Object;JS)S
   #386 = Utf8               getAndBitwiseOrShortRelease
   #387 = Methodref          #2.#388          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #388 = NameAndType        #389:#352        // getAndBitwiseAndShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #389 = Utf8               getAndBitwiseAndShortInternal
   #390 = Methodref          #37.#391         // jdk/internal/misc/Unsafe.getAndBitwiseAndShort:(Ljava/lang/Object;JS)S
   #391 = NameAndType        #392:#356        // getAndBitwiseAndShort:(Ljava/lang/Object;JS)S
   #392 = Utf8               getAndBitwiseAndShort
   #393 = Methodref          #2.#394          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #394 = NameAndType        #395:#352        // getAndBitwiseAndShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #395 = Utf8               getAndBitwiseAndShortAcquireInternal
   #396 = Methodref          #37.#397         // jdk/internal/misc/Unsafe.getAndBitwiseAndShortAcquire:(Ljava/lang/Object;JS)S
   #397 = NameAndType        #398:#356        // getAndBitwiseAndShortAcquire:(Ljava/lang/Object;JS)S
   #398 = Utf8               getAndBitwiseAndShortAcquire
   #399 = Methodref          #2.#400          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #400 = NameAndType        #401:#352        // getAndBitwiseAndShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #401 = Utf8               getAndBitwiseAndShortReleaseInternal
   #402 = Methodref          #37.#403         // jdk/internal/misc/Unsafe.getAndBitwiseAndShortRelease:(Ljava/lang/Object;JS)S
   #403 = NameAndType        #404:#356        // getAndBitwiseAndShortRelease:(Ljava/lang/Object;JS)S
   #404 = Utf8               getAndBitwiseAndShortRelease
   #405 = Methodref          #2.#406          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #406 = NameAndType        #407:#352        // getAndBitwiseXorShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #407 = Utf8               getAndBitwiseXorShortInternal
   #408 = Methodref          #37.#409         // jdk/internal/misc/Unsafe.getAndBitwiseXorShort:(Ljava/lang/Object;JS)S
   #409 = NameAndType        #410:#356        // getAndBitwiseXorShort:(Ljava/lang/Object;JS)S
   #410 = Utf8               getAndBitwiseXorShort
   #411 = Methodref          #2.#412          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #412 = NameAndType        #413:#352        // getAndBitwiseXorShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #413 = Utf8               getAndBitwiseXorShortAcquireInternal
   #414 = Methodref          #37.#415         // jdk/internal/misc/Unsafe.getAndBitwiseXorShortAcquire:(Ljava/lang/Object;JS)S
   #415 = NameAndType        #416:#356        // getAndBitwiseXorShortAcquire:(Ljava/lang/Object;JS)S
   #416 = Utf8               getAndBitwiseXorShortAcquire
   #417 = Methodref          #2.#418          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #418 = NameAndType        #419:#352        // getAndBitwiseXorShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
   #419 = Utf8               getAndBitwiseXorShortReleaseInternal
   #420 = Methodref          #37.#421         // jdk/internal/misc/Unsafe.getAndBitwiseXorShortRelease:(Ljava/lang/Object;JS)S
   #421 = NameAndType        #422:#356        // getAndBitwiseXorShortRelease:(Ljava/lang/Object;JS)S
   #422 = Utf8               getAndBitwiseXorShortRelease
   #423 = Methodref          #2.#424          // jdk/internal/misc/ScopedMemoryAccess.getCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #424 = NameAndType        #425:#426        // getCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #425 = Utf8               getCharInternal
   #426 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #427 = Methodref          #37.#428         // jdk/internal/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
   #428 = NameAndType        #429:#430        // getChar:(Ljava/lang/Object;J)C
   #429 = Utf8               getChar
   #430 = Utf8               (Ljava/lang/Object;J)C
   #431 = Methodref          #2.#432          // jdk/internal/misc/ScopedMemoryAccess.putCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #432 = NameAndType        #433:#434        // putCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #433 = Utf8               putCharInternal
   #434 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #435 = Methodref          #37.#436         // jdk/internal/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
   #436 = NameAndType        #437:#438        // putChar:(Ljava/lang/Object;JC)V
   #437 = Utf8               putChar
   #438 = Utf8               (Ljava/lang/Object;JC)V
   #439 = Methodref          #2.#440          // jdk/internal/misc/ScopedMemoryAccess.getCharUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)C
   #440 = NameAndType        #441:#442        // getCharUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)C
   #441 = Utf8               getCharUnalignedInternal
   #442 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)C
   #443 = Methodref          #37.#444         // jdk/internal/misc/Unsafe.getCharUnaligned:(Ljava/lang/Object;JZ)C
   #444 = NameAndType        #445:#446        // getCharUnaligned:(Ljava/lang/Object;JZ)C
   #445 = Utf8               getCharUnaligned
   #446 = Utf8               (Ljava/lang/Object;JZ)C
   #447 = Methodref          #2.#448          // jdk/internal/misc/ScopedMemoryAccess.putCharUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JCZ)V
   #448 = NameAndType        #449:#450        // putCharUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JCZ)V
   #449 = Utf8               putCharUnalignedInternal
   #450 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JCZ)V
   #451 = Methodref          #37.#452         // jdk/internal/misc/Unsafe.putCharUnaligned:(Ljava/lang/Object;JCZ)V
   #452 = NameAndType        #453:#454        // putCharUnaligned:(Ljava/lang/Object;JCZ)V
   #453 = Utf8               putCharUnaligned
   #454 = Utf8               (Ljava/lang/Object;JCZ)V
   #455 = Methodref          #2.#456          // jdk/internal/misc/ScopedMemoryAccess.getCharVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #456 = NameAndType        #457:#426        // getCharVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #457 = Utf8               getCharVolatileInternal
   #458 = Methodref          #37.#459         // jdk/internal/misc/Unsafe.getCharVolatile:(Ljava/lang/Object;J)C
   #459 = NameAndType        #460:#430        // getCharVolatile:(Ljava/lang/Object;J)C
   #460 = Utf8               getCharVolatile
   #461 = Methodref          #2.#462          // jdk/internal/misc/ScopedMemoryAccess.putCharVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #462 = NameAndType        #463:#434        // putCharVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #463 = Utf8               putCharVolatileInternal
   #464 = Methodref          #37.#465         // jdk/internal/misc/Unsafe.putCharVolatile:(Ljava/lang/Object;JC)V
   #465 = NameAndType        #466:#438        // putCharVolatile:(Ljava/lang/Object;JC)V
   #466 = Utf8               putCharVolatile
   #467 = Methodref          #2.#468          // jdk/internal/misc/ScopedMemoryAccess.getCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #468 = NameAndType        #469:#426        // getCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #469 = Utf8               getCharAcquireInternal
   #470 = Methodref          #37.#471         // jdk/internal/misc/Unsafe.getCharAcquire:(Ljava/lang/Object;J)C
   #471 = NameAndType        #472:#430        // getCharAcquire:(Ljava/lang/Object;J)C
   #472 = Utf8               getCharAcquire
   #473 = Methodref          #2.#474          // jdk/internal/misc/ScopedMemoryAccess.putCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #474 = NameAndType        #475:#434        // putCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #475 = Utf8               putCharReleaseInternal
   #476 = Methodref          #37.#477         // jdk/internal/misc/Unsafe.putCharRelease:(Ljava/lang/Object;JC)V
   #477 = NameAndType        #478:#438        // putCharRelease:(Ljava/lang/Object;JC)V
   #478 = Utf8               putCharRelease
   #479 = Methodref          #2.#480          // jdk/internal/misc/ScopedMemoryAccess.getCharOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #480 = NameAndType        #481:#426        // getCharOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
   #481 = Utf8               getCharOpaqueInternal
   #482 = Methodref          #37.#483         // jdk/internal/misc/Unsafe.getCharOpaque:(Ljava/lang/Object;J)C
   #483 = NameAndType        #484:#430        // getCharOpaque:(Ljava/lang/Object;J)C
   #484 = Utf8               getCharOpaque
   #485 = Methodref          #2.#486          // jdk/internal/misc/ScopedMemoryAccess.putCharOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #486 = NameAndType        #487:#434        // putCharOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
   #487 = Utf8               putCharOpaqueInternal
   #488 = Methodref          #37.#489         // jdk/internal/misc/Unsafe.putCharOpaque:(Ljava/lang/Object;JC)V
   #489 = NameAndType        #490:#438        // putCharOpaque:(Ljava/lang/Object;JC)V
   #490 = Utf8               putCharOpaque
   #491 = Methodref          #2.#492          // jdk/internal/misc/ScopedMemoryAccess.getAndAddCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #492 = NameAndType        #493:#494        // getAndAddCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #493 = Utf8               getAndAddCharInternal
   #494 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #495 = Methodref          #37.#496         // jdk/internal/misc/Unsafe.getAndAddChar:(Ljava/lang/Object;JC)C
   #496 = NameAndType        #497:#498        // getAndAddChar:(Ljava/lang/Object;JC)C
   #497 = Utf8               getAndAddChar
   #498 = Utf8               (Ljava/lang/Object;JC)C
   #499 = Methodref          #2.#500          // jdk/internal/misc/ScopedMemoryAccess.getAndAddCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #500 = NameAndType        #501:#494        // getAndAddCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #501 = Utf8               getAndAddCharAcquireInternal
   #502 = Methodref          #37.#503         // jdk/internal/misc/Unsafe.getAndAddCharAcquire:(Ljava/lang/Object;JC)C
   #503 = NameAndType        #504:#498        // getAndAddCharAcquire:(Ljava/lang/Object;JC)C
   #504 = Utf8               getAndAddCharAcquire
   #505 = Methodref          #2.#506          // jdk/internal/misc/ScopedMemoryAccess.getAndAddCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #506 = NameAndType        #507:#494        // getAndAddCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #507 = Utf8               getAndAddCharReleaseInternal
   #508 = Methodref          #37.#509         // jdk/internal/misc/Unsafe.getAndAddCharRelease:(Ljava/lang/Object;JC)C
   #509 = NameAndType        #510:#498        // getAndAddCharRelease:(Ljava/lang/Object;JC)C
   #510 = Utf8               getAndAddCharRelease
   #511 = Methodref          #2.#512          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #512 = NameAndType        #513:#494        // getAndBitwiseOrCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #513 = Utf8               getAndBitwiseOrCharInternal
   #514 = Methodref          #37.#515         // jdk/internal/misc/Unsafe.getAndBitwiseOrChar:(Ljava/lang/Object;JC)C
   #515 = NameAndType        #516:#498        // getAndBitwiseOrChar:(Ljava/lang/Object;JC)C
   #516 = Utf8               getAndBitwiseOrChar
   #517 = Methodref          #2.#518          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #518 = NameAndType        #519:#494        // getAndBitwiseOrCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #519 = Utf8               getAndBitwiseOrCharAcquireInternal
   #520 = Methodref          #37.#521         // jdk/internal/misc/Unsafe.getAndBitwiseOrCharAcquire:(Ljava/lang/Object;JC)C
   #521 = NameAndType        #522:#498        // getAndBitwiseOrCharAcquire:(Ljava/lang/Object;JC)C
   #522 = Utf8               getAndBitwiseOrCharAcquire
   #523 = Methodref          #2.#524          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #524 = NameAndType        #525:#494        // getAndBitwiseOrCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #525 = Utf8               getAndBitwiseOrCharReleaseInternal
   #526 = Methodref          #37.#527         // jdk/internal/misc/Unsafe.getAndBitwiseOrCharRelease:(Ljava/lang/Object;JC)C
   #527 = NameAndType        #528:#498        // getAndBitwiseOrCharRelease:(Ljava/lang/Object;JC)C
   #528 = Utf8               getAndBitwiseOrCharRelease
   #529 = Methodref          #2.#530          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #530 = NameAndType        #531:#494        // getAndBitwiseAndCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #531 = Utf8               getAndBitwiseAndCharInternal
   #532 = Methodref          #37.#533         // jdk/internal/misc/Unsafe.getAndBitwiseAndChar:(Ljava/lang/Object;JC)C
   #533 = NameAndType        #534:#498        // getAndBitwiseAndChar:(Ljava/lang/Object;JC)C
   #534 = Utf8               getAndBitwiseAndChar
   #535 = Methodref          #2.#536          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #536 = NameAndType        #537:#494        // getAndBitwiseAndCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #537 = Utf8               getAndBitwiseAndCharAcquireInternal
   #538 = Methodref          #37.#539         // jdk/internal/misc/Unsafe.getAndBitwiseAndCharAcquire:(Ljava/lang/Object;JC)C
   #539 = NameAndType        #540:#498        // getAndBitwiseAndCharAcquire:(Ljava/lang/Object;JC)C
   #540 = Utf8               getAndBitwiseAndCharAcquire
   #541 = Methodref          #2.#542          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #542 = NameAndType        #543:#494        // getAndBitwiseAndCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #543 = Utf8               getAndBitwiseAndCharReleaseInternal
   #544 = Methodref          #37.#545         // jdk/internal/misc/Unsafe.getAndBitwiseAndCharRelease:(Ljava/lang/Object;JC)C
   #545 = NameAndType        #546:#498        // getAndBitwiseAndCharRelease:(Ljava/lang/Object;JC)C
   #546 = Utf8               getAndBitwiseAndCharRelease
   #547 = Methodref          #2.#548          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #548 = NameAndType        #549:#494        // getAndBitwiseXorCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #549 = Utf8               getAndBitwiseXorCharInternal
   #550 = Methodref          #37.#551         // jdk/internal/misc/Unsafe.getAndBitwiseXorChar:(Ljava/lang/Object;JC)C
   #551 = NameAndType        #552:#498        // getAndBitwiseXorChar:(Ljava/lang/Object;JC)C
   #552 = Utf8               getAndBitwiseXorChar
   #553 = Methodref          #2.#554          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #554 = NameAndType        #555:#494        // getAndBitwiseXorCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #555 = Utf8               getAndBitwiseXorCharAcquireInternal
   #556 = Methodref          #37.#557         // jdk/internal/misc/Unsafe.getAndBitwiseXorCharAcquire:(Ljava/lang/Object;JC)C
   #557 = NameAndType        #558:#498        // getAndBitwiseXorCharAcquire:(Ljava/lang/Object;JC)C
   #558 = Utf8               getAndBitwiseXorCharAcquire
   #559 = Methodref          #2.#560          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #560 = NameAndType        #561:#494        // getAndBitwiseXorCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
   #561 = Utf8               getAndBitwiseXorCharReleaseInternal
   #562 = Methodref          #37.#563         // jdk/internal/misc/Unsafe.getAndBitwiseXorCharRelease:(Ljava/lang/Object;JC)C
   #563 = NameAndType        #564:#498        // getAndBitwiseXorCharRelease:(Ljava/lang/Object;JC)C
   #564 = Utf8               getAndBitwiseXorCharRelease
   #565 = Methodref          #2.#566          // jdk/internal/misc/ScopedMemoryAccess.getIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #566 = NameAndType        #567:#568        // getIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #567 = Utf8               getIntInternal
   #568 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #569 = Methodref          #37.#570         // jdk/internal/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
   #570 = NameAndType        #571:#572        // getInt:(Ljava/lang/Object;J)I
   #571 = Utf8               getInt
   #572 = Utf8               (Ljava/lang/Object;J)I
   #573 = Methodref          #2.#574          // jdk/internal/misc/ScopedMemoryAccess.putIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #574 = NameAndType        #575:#576        // putIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #575 = Utf8               putIntInternal
   #576 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #577 = Methodref          #37.#578         // jdk/internal/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
   #578 = NameAndType        #579:#580        // putInt:(Ljava/lang/Object;JI)V
   #579 = Utf8               putInt
   #580 = Utf8               (Ljava/lang/Object;JI)V
   #581 = Methodref          #2.#582          // jdk/internal/misc/ScopedMemoryAccess.getIntUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)I
   #582 = NameAndType        #583:#584        // getIntUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)I
   #583 = Utf8               getIntUnalignedInternal
   #584 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)I
   #585 = Methodref          #37.#586         // jdk/internal/misc/Unsafe.getIntUnaligned:(Ljava/lang/Object;JZ)I
   #586 = NameAndType        #587:#588        // getIntUnaligned:(Ljava/lang/Object;JZ)I
   #587 = Utf8               getIntUnaligned
   #588 = Utf8               (Ljava/lang/Object;JZ)I
   #589 = Methodref          #2.#590          // jdk/internal/misc/ScopedMemoryAccess.putIntUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JIZ)V
   #590 = NameAndType        #591:#592        // putIntUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JIZ)V
   #591 = Utf8               putIntUnalignedInternal
   #592 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JIZ)V
   #593 = Methodref          #37.#594         // jdk/internal/misc/Unsafe.putIntUnaligned:(Ljava/lang/Object;JIZ)V
   #594 = NameAndType        #595:#596        // putIntUnaligned:(Ljava/lang/Object;JIZ)V
   #595 = Utf8               putIntUnaligned
   #596 = Utf8               (Ljava/lang/Object;JIZ)V
   #597 = Methodref          #2.#598          // jdk/internal/misc/ScopedMemoryAccess.getIntVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #598 = NameAndType        #599:#568        // getIntVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #599 = Utf8               getIntVolatileInternal
   #600 = Methodref          #37.#601         // jdk/internal/misc/Unsafe.getIntVolatile:(Ljava/lang/Object;J)I
   #601 = NameAndType        #602:#572        // getIntVolatile:(Ljava/lang/Object;J)I
   #602 = Utf8               getIntVolatile
   #603 = Methodref          #2.#604          // jdk/internal/misc/ScopedMemoryAccess.putIntVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #604 = NameAndType        #605:#576        // putIntVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #605 = Utf8               putIntVolatileInternal
   #606 = Methodref          #37.#607         // jdk/internal/misc/Unsafe.putIntVolatile:(Ljava/lang/Object;JI)V
   #607 = NameAndType        #608:#580        // putIntVolatile:(Ljava/lang/Object;JI)V
   #608 = Utf8               putIntVolatile
   #609 = Methodref          #2.#610          // jdk/internal/misc/ScopedMemoryAccess.getIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #610 = NameAndType        #611:#568        // getIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #611 = Utf8               getIntAcquireInternal
   #612 = Methodref          #37.#613         // jdk/internal/misc/Unsafe.getIntAcquire:(Ljava/lang/Object;J)I
   #613 = NameAndType        #614:#572        // getIntAcquire:(Ljava/lang/Object;J)I
   #614 = Utf8               getIntAcquire
   #615 = Methodref          #2.#616          // jdk/internal/misc/ScopedMemoryAccess.putIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #616 = NameAndType        #617:#576        // putIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #617 = Utf8               putIntReleaseInternal
   #618 = Methodref          #37.#619         // jdk/internal/misc/Unsafe.putIntRelease:(Ljava/lang/Object;JI)V
   #619 = NameAndType        #620:#580        // putIntRelease:(Ljava/lang/Object;JI)V
   #620 = Utf8               putIntRelease
   #621 = Methodref          #2.#622          // jdk/internal/misc/ScopedMemoryAccess.getIntOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #622 = NameAndType        #623:#568        // getIntOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
   #623 = Utf8               getIntOpaqueInternal
   #624 = Methodref          #37.#625         // jdk/internal/misc/Unsafe.getIntOpaque:(Ljava/lang/Object;J)I
   #625 = NameAndType        #626:#572        // getIntOpaque:(Ljava/lang/Object;J)I
   #626 = Utf8               getIntOpaque
   #627 = Methodref          #2.#628          // jdk/internal/misc/ScopedMemoryAccess.putIntOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #628 = NameAndType        #629:#576        // putIntOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
   #629 = Utf8               putIntOpaqueInternal
   #630 = Methodref          #37.#631         // jdk/internal/misc/Unsafe.putIntOpaque:(Ljava/lang/Object;JI)V
   #631 = NameAndType        #632:#580        // putIntOpaque:(Ljava/lang/Object;JI)V
   #632 = Utf8               putIntOpaque
   #633 = Methodref          #2.#634          // jdk/internal/misc/ScopedMemoryAccess.compareAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #634 = NameAndType        #635:#636        // compareAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #635 = Utf8               compareAndSetIntInternal
   #636 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #637 = Methodref          #37.#638         // jdk/internal/misc/Unsafe.compareAndSetInt:(Ljava/lang/Object;JII)Z
   #638 = NameAndType        #639:#640        // compareAndSetInt:(Ljava/lang/Object;JII)Z
   #639 = Utf8               compareAndSetInt
   #640 = Utf8               (Ljava/lang/Object;JII)Z
   #641 = Methodref          #2.#642          // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #642 = NameAndType        #643:#644        // compareAndExchangeIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #643 = Utf8               compareAndExchangeIntInternal
   #644 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #645 = Methodref          #37.#646         // jdk/internal/misc/Unsafe.compareAndExchangeInt:(Ljava/lang/Object;JII)I
   #646 = NameAndType        #647:#648        // compareAndExchangeInt:(Ljava/lang/Object;JII)I
   #647 = Utf8               compareAndExchangeInt
   #648 = Utf8               (Ljava/lang/Object;JII)I
   #649 = Methodref          #2.#650          // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #650 = NameAndType        #651:#644        // compareAndExchangeIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #651 = Utf8               compareAndExchangeIntAcquireInternal
   #652 = Methodref          #37.#653         // jdk/internal/misc/Unsafe.compareAndExchangeIntAcquire:(Ljava/lang/Object;JII)I
   #653 = NameAndType        #654:#648        // compareAndExchangeIntAcquire:(Ljava/lang/Object;JII)I
   #654 = Utf8               compareAndExchangeIntAcquire
   #655 = Methodref          #2.#656          // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #656 = NameAndType        #657:#644        // compareAndExchangeIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
   #657 = Utf8               compareAndExchangeIntReleaseInternal
   #658 = Methodref          #37.#659         // jdk/internal/misc/Unsafe.compareAndExchangeIntRelease:(Ljava/lang/Object;JII)I
   #659 = NameAndType        #660:#648        // compareAndExchangeIntRelease:(Ljava/lang/Object;JII)I
   #660 = Utf8               compareAndExchangeIntRelease
   #661 = Methodref          #2.#662          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetIntPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #662 = NameAndType        #663:#636        // weakCompareAndSetIntPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #663 = Utf8               weakCompareAndSetIntPlainInternal
   #664 = Methodref          #37.#665         // jdk/internal/misc/Unsafe.weakCompareAndSetIntPlain:(Ljava/lang/Object;JII)Z
   #665 = NameAndType        #666:#640        // weakCompareAndSetIntPlain:(Ljava/lang/Object;JII)Z
   #666 = Utf8               weakCompareAndSetIntPlain
   #667 = Methodref          #2.#668          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #668 = NameAndType        #669:#636        // weakCompareAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #669 = Utf8               weakCompareAndSetIntInternal
   #670 = Methodref          #37.#671         // jdk/internal/misc/Unsafe.weakCompareAndSetInt:(Ljava/lang/Object;JII)Z
   #671 = NameAndType        #672:#640        // weakCompareAndSetInt:(Ljava/lang/Object;JII)Z
   #672 = Utf8               weakCompareAndSetInt
   #673 = Methodref          #2.#674          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #674 = NameAndType        #675:#636        // weakCompareAndSetIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #675 = Utf8               weakCompareAndSetIntAcquireInternal
   #676 = Methodref          #37.#677         // jdk/internal/misc/Unsafe.weakCompareAndSetIntAcquire:(Ljava/lang/Object;JII)Z
   #677 = NameAndType        #678:#640        // weakCompareAndSetIntAcquire:(Ljava/lang/Object;JII)Z
   #678 = Utf8               weakCompareAndSetIntAcquire
   #679 = Methodref          #2.#680          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #680 = NameAndType        #681:#636        // weakCompareAndSetIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
   #681 = Utf8               weakCompareAndSetIntReleaseInternal
   #682 = Methodref          #37.#683         // jdk/internal/misc/Unsafe.weakCompareAndSetIntRelease:(Ljava/lang/Object;JII)Z
   #683 = NameAndType        #684:#640        // weakCompareAndSetIntRelease:(Ljava/lang/Object;JII)Z
   #684 = Utf8               weakCompareAndSetIntRelease
   #685 = Methodref          #2.#686          // jdk/internal/misc/ScopedMemoryAccess.getAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #686 = NameAndType        #687:#688        // getAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #687 = Utf8               getAndSetIntInternal
   #688 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #689 = Methodref          #37.#690         // jdk/internal/misc/Unsafe.getAndSetInt:(Ljava/lang/Object;JI)I
   #690 = NameAndType        #691:#692        // getAndSetInt:(Ljava/lang/Object;JI)I
   #691 = Utf8               getAndSetInt
   #692 = Utf8               (Ljava/lang/Object;JI)I
   #693 = Methodref          #2.#694          // jdk/internal/misc/ScopedMemoryAccess.getAndSetIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #694 = NameAndType        #695:#688        // getAndSetIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #695 = Utf8               getAndSetIntAcquireInternal
   #696 = Methodref          #37.#697         // jdk/internal/misc/Unsafe.getAndSetIntAcquire:(Ljava/lang/Object;JI)I
   #697 = NameAndType        #698:#692        // getAndSetIntAcquire:(Ljava/lang/Object;JI)I
   #698 = Utf8               getAndSetIntAcquire
   #699 = Methodref          #2.#700          // jdk/internal/misc/ScopedMemoryAccess.getAndSetIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #700 = NameAndType        #701:#688        // getAndSetIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #701 = Utf8               getAndSetIntReleaseInternal
   #702 = Methodref          #37.#703         // jdk/internal/misc/Unsafe.getAndSetIntRelease:(Ljava/lang/Object;JI)I
   #703 = NameAndType        #704:#692        // getAndSetIntRelease:(Ljava/lang/Object;JI)I
   #704 = Utf8               getAndSetIntRelease
   #705 = Methodref          #2.#706          // jdk/internal/misc/ScopedMemoryAccess.getAndAddIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #706 = NameAndType        #707:#688        // getAndAddIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #707 = Utf8               getAndAddIntInternal
   #708 = Methodref          #37.#709         // jdk/internal/misc/Unsafe.getAndAddInt:(Ljava/lang/Object;JI)I
   #709 = NameAndType        #710:#692        // getAndAddInt:(Ljava/lang/Object;JI)I
   #710 = Utf8               getAndAddInt
   #711 = Methodref          #2.#712          // jdk/internal/misc/ScopedMemoryAccess.getAndAddIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #712 = NameAndType        #713:#688        // getAndAddIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #713 = Utf8               getAndAddIntAcquireInternal
   #714 = Methodref          #37.#715         // jdk/internal/misc/Unsafe.getAndAddIntAcquire:(Ljava/lang/Object;JI)I
   #715 = NameAndType        #716:#692        // getAndAddIntAcquire:(Ljava/lang/Object;JI)I
   #716 = Utf8               getAndAddIntAcquire
   #717 = Methodref          #2.#718          // jdk/internal/misc/ScopedMemoryAccess.getAndAddIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #718 = NameAndType        #719:#688        // getAndAddIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #719 = Utf8               getAndAddIntReleaseInternal
   #720 = Methodref          #37.#721         // jdk/internal/misc/Unsafe.getAndAddIntRelease:(Ljava/lang/Object;JI)I
   #721 = NameAndType        #722:#692        // getAndAddIntRelease:(Ljava/lang/Object;JI)I
   #722 = Utf8               getAndAddIntRelease
   #723 = Methodref          #2.#724          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #724 = NameAndType        #725:#688        // getAndBitwiseOrIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #725 = Utf8               getAndBitwiseOrIntInternal
   #726 = Methodref          #37.#727         // jdk/internal/misc/Unsafe.getAndBitwiseOrInt:(Ljava/lang/Object;JI)I
   #727 = NameAndType        #728:#692        // getAndBitwiseOrInt:(Ljava/lang/Object;JI)I
   #728 = Utf8               getAndBitwiseOrInt
   #729 = Methodref          #2.#730          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #730 = NameAndType        #731:#688        // getAndBitwiseOrIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #731 = Utf8               getAndBitwiseOrIntAcquireInternal
   #732 = Methodref          #37.#733         // jdk/internal/misc/Unsafe.getAndBitwiseOrIntAcquire:(Ljava/lang/Object;JI)I
   #733 = NameAndType        #734:#692        // getAndBitwiseOrIntAcquire:(Ljava/lang/Object;JI)I
   #734 = Utf8               getAndBitwiseOrIntAcquire
   #735 = Methodref          #2.#736          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #736 = NameAndType        #737:#688        // getAndBitwiseOrIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #737 = Utf8               getAndBitwiseOrIntReleaseInternal
   #738 = Methodref          #37.#739         // jdk/internal/misc/Unsafe.getAndBitwiseOrIntRelease:(Ljava/lang/Object;JI)I
   #739 = NameAndType        #740:#692        // getAndBitwiseOrIntRelease:(Ljava/lang/Object;JI)I
   #740 = Utf8               getAndBitwiseOrIntRelease
   #741 = Methodref          #2.#742          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #742 = NameAndType        #743:#688        // getAndBitwiseAndIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #743 = Utf8               getAndBitwiseAndIntInternal
   #744 = Methodref          #37.#745         // jdk/internal/misc/Unsafe.getAndBitwiseAndInt:(Ljava/lang/Object;JI)I
   #745 = NameAndType        #746:#692        // getAndBitwiseAndInt:(Ljava/lang/Object;JI)I
   #746 = Utf8               getAndBitwiseAndInt
   #747 = Methodref          #2.#748          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #748 = NameAndType        #749:#688        // getAndBitwiseAndIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #749 = Utf8               getAndBitwiseAndIntAcquireInternal
   #750 = Methodref          #37.#751         // jdk/internal/misc/Unsafe.getAndBitwiseAndIntAcquire:(Ljava/lang/Object;JI)I
   #751 = NameAndType        #752:#692        // getAndBitwiseAndIntAcquire:(Ljava/lang/Object;JI)I
   #752 = Utf8               getAndBitwiseAndIntAcquire
   #753 = Methodref          #2.#754          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #754 = NameAndType        #755:#688        // getAndBitwiseAndIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #755 = Utf8               getAndBitwiseAndIntReleaseInternal
   #756 = Methodref          #37.#757         // jdk/internal/misc/Unsafe.getAndBitwiseAndIntRelease:(Ljava/lang/Object;JI)I
   #757 = NameAndType        #758:#692        // getAndBitwiseAndIntRelease:(Ljava/lang/Object;JI)I
   #758 = Utf8               getAndBitwiseAndIntRelease
   #759 = Methodref          #2.#760          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #760 = NameAndType        #761:#688        // getAndBitwiseXorIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #761 = Utf8               getAndBitwiseXorIntInternal
   #762 = Methodref          #37.#763         // jdk/internal/misc/Unsafe.getAndBitwiseXorInt:(Ljava/lang/Object;JI)I
   #763 = NameAndType        #764:#692        // getAndBitwiseXorInt:(Ljava/lang/Object;JI)I
   #764 = Utf8               getAndBitwiseXorInt
   #765 = Methodref          #2.#766          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #766 = NameAndType        #767:#688        // getAndBitwiseXorIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #767 = Utf8               getAndBitwiseXorIntAcquireInternal
   #768 = Methodref          #37.#769         // jdk/internal/misc/Unsafe.getAndBitwiseXorIntAcquire:(Ljava/lang/Object;JI)I
   #769 = NameAndType        #770:#692        // getAndBitwiseXorIntAcquire:(Ljava/lang/Object;JI)I
   #770 = Utf8               getAndBitwiseXorIntAcquire
   #771 = Methodref          #2.#772          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #772 = NameAndType        #773:#688        // getAndBitwiseXorIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
   #773 = Utf8               getAndBitwiseXorIntReleaseInternal
   #774 = Methodref          #37.#775         // jdk/internal/misc/Unsafe.getAndBitwiseXorIntRelease:(Ljava/lang/Object;JI)I
   #775 = NameAndType        #776:#692        // getAndBitwiseXorIntRelease:(Ljava/lang/Object;JI)I
   #776 = Utf8               getAndBitwiseXorIntRelease
   #777 = Methodref          #2.#778          // jdk/internal/misc/ScopedMemoryAccess.getLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #778 = NameAndType        #779:#780        // getLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #779 = Utf8               getLongInternal
   #780 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #781 = Methodref          #37.#782         // jdk/internal/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
   #782 = NameAndType        #783:#784        // getLong:(Ljava/lang/Object;J)J
   #783 = Utf8               getLong
   #784 = Utf8               (Ljava/lang/Object;J)J
   #785 = Methodref          #2.#786          // jdk/internal/misc/ScopedMemoryAccess.putLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #786 = NameAndType        #787:#788        // putLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #787 = Utf8               putLongInternal
   #788 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #789 = Methodref          #37.#790         // jdk/internal/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
   #790 = NameAndType        #791:#792        // putLong:(Ljava/lang/Object;JJ)V
   #791 = Utf8               putLong
   #792 = Utf8               (Ljava/lang/Object;JJ)V
   #793 = Methodref          #2.#794          // jdk/internal/misc/ScopedMemoryAccess.getLongUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)J
   #794 = NameAndType        #795:#796        // getLongUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)J
   #795 = Utf8               getLongUnalignedInternal
   #796 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)J
   #797 = Methodref          #37.#798         // jdk/internal/misc/Unsafe.getLongUnaligned:(Ljava/lang/Object;JZ)J
   #798 = NameAndType        #799:#800        // getLongUnaligned:(Ljava/lang/Object;JZ)J
   #799 = Utf8               getLongUnaligned
   #800 = Utf8               (Ljava/lang/Object;JZ)J
   #801 = Methodref          #2.#802          // jdk/internal/misc/ScopedMemoryAccess.putLongUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJZ)V
   #802 = NameAndType        #803:#804        // putLongUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJZ)V
   #803 = Utf8               putLongUnalignedInternal
   #804 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJZ)V
   #805 = Methodref          #37.#806         // jdk/internal/misc/Unsafe.putLongUnaligned:(Ljava/lang/Object;JJZ)V
   #806 = NameAndType        #807:#808        // putLongUnaligned:(Ljava/lang/Object;JJZ)V
   #807 = Utf8               putLongUnaligned
   #808 = Utf8               (Ljava/lang/Object;JJZ)V
   #809 = Methodref          #2.#810          // jdk/internal/misc/ScopedMemoryAccess.getLongVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #810 = NameAndType        #811:#780        // getLongVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #811 = Utf8               getLongVolatileInternal
   #812 = Methodref          #37.#813         // jdk/internal/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
   #813 = NameAndType        #814:#784        // getLongVolatile:(Ljava/lang/Object;J)J
   #814 = Utf8               getLongVolatile
   #815 = Methodref          #2.#816          // jdk/internal/misc/ScopedMemoryAccess.putLongVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #816 = NameAndType        #817:#788        // putLongVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #817 = Utf8               putLongVolatileInternal
   #818 = Methodref          #37.#819         // jdk/internal/misc/Unsafe.putLongVolatile:(Ljava/lang/Object;JJ)V
   #819 = NameAndType        #820:#792        // putLongVolatile:(Ljava/lang/Object;JJ)V
   #820 = Utf8               putLongVolatile
   #821 = Methodref          #2.#822          // jdk/internal/misc/ScopedMemoryAccess.getLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #822 = NameAndType        #823:#780        // getLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #823 = Utf8               getLongAcquireInternal
   #824 = Methodref          #37.#825         // jdk/internal/misc/Unsafe.getLongAcquire:(Ljava/lang/Object;J)J
   #825 = NameAndType        #826:#784        // getLongAcquire:(Ljava/lang/Object;J)J
   #826 = Utf8               getLongAcquire
   #827 = Methodref          #2.#828          // jdk/internal/misc/ScopedMemoryAccess.putLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #828 = NameAndType        #829:#788        // putLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #829 = Utf8               putLongReleaseInternal
   #830 = Methodref          #37.#831         // jdk/internal/misc/Unsafe.putLongRelease:(Ljava/lang/Object;JJ)V
   #831 = NameAndType        #832:#792        // putLongRelease:(Ljava/lang/Object;JJ)V
   #832 = Utf8               putLongRelease
   #833 = Methodref          #2.#834          // jdk/internal/misc/ScopedMemoryAccess.getLongOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #834 = NameAndType        #835:#780        // getLongOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
   #835 = Utf8               getLongOpaqueInternal
   #836 = Methodref          #37.#837         // jdk/internal/misc/Unsafe.getLongOpaque:(Ljava/lang/Object;J)J
   #837 = NameAndType        #838:#784        // getLongOpaque:(Ljava/lang/Object;J)J
   #838 = Utf8               getLongOpaque
   #839 = Methodref          #2.#840          // jdk/internal/misc/ScopedMemoryAccess.putLongOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #840 = NameAndType        #841:#788        // putLongOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
   #841 = Utf8               putLongOpaqueInternal
   #842 = Methodref          #37.#843         // jdk/internal/misc/Unsafe.putLongOpaque:(Ljava/lang/Object;JJ)V
   #843 = NameAndType        #844:#792        // putLongOpaque:(Ljava/lang/Object;JJ)V
   #844 = Utf8               putLongOpaque
   #845 = Methodref          #2.#846          // jdk/internal/misc/ScopedMemoryAccess.compareAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #846 = NameAndType        #847:#848        // compareAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #847 = Utf8               compareAndSetLongInternal
   #848 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #849 = Methodref          #37.#850         // jdk/internal/misc/Unsafe.compareAndSetLong:(Ljava/lang/Object;JJJ)Z
   #850 = NameAndType        #851:#852        // compareAndSetLong:(Ljava/lang/Object;JJJ)Z
   #851 = Utf8               compareAndSetLong
   #852 = Utf8               (Ljava/lang/Object;JJJ)Z
   #853 = Methodref          #2.#854          // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #854 = NameAndType        #855:#856        // compareAndExchangeLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #855 = Utf8               compareAndExchangeLongInternal
   #856 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #857 = Methodref          #37.#858         // jdk/internal/misc/Unsafe.compareAndExchangeLong:(Ljava/lang/Object;JJJ)J
   #858 = NameAndType        #859:#860        // compareAndExchangeLong:(Ljava/lang/Object;JJJ)J
   #859 = Utf8               compareAndExchangeLong
   #860 = Utf8               (Ljava/lang/Object;JJJ)J
   #861 = Methodref          #2.#862          // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #862 = NameAndType        #863:#856        // compareAndExchangeLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #863 = Utf8               compareAndExchangeLongAcquireInternal
   #864 = Methodref          #37.#865         // jdk/internal/misc/Unsafe.compareAndExchangeLongAcquire:(Ljava/lang/Object;JJJ)J
   #865 = NameAndType        #866:#860        // compareAndExchangeLongAcquire:(Ljava/lang/Object;JJJ)J
   #866 = Utf8               compareAndExchangeLongAcquire
   #867 = Methodref          #2.#868          // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #868 = NameAndType        #869:#856        // compareAndExchangeLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
   #869 = Utf8               compareAndExchangeLongReleaseInternal
   #870 = Methodref          #37.#871         // jdk/internal/misc/Unsafe.compareAndExchangeLongRelease:(Ljava/lang/Object;JJJ)J
   #871 = NameAndType        #872:#860        // compareAndExchangeLongRelease:(Ljava/lang/Object;JJJ)J
   #872 = Utf8               compareAndExchangeLongRelease
   #873 = Methodref          #2.#874          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetLongPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #874 = NameAndType        #875:#848        // weakCompareAndSetLongPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #875 = Utf8               weakCompareAndSetLongPlainInternal
   #876 = Methodref          #37.#877         // jdk/internal/misc/Unsafe.weakCompareAndSetLongPlain:(Ljava/lang/Object;JJJ)Z
   #877 = NameAndType        #878:#852        // weakCompareAndSetLongPlain:(Ljava/lang/Object;JJJ)Z
   #878 = Utf8               weakCompareAndSetLongPlain
   #879 = Methodref          #2.#880          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #880 = NameAndType        #881:#848        // weakCompareAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #881 = Utf8               weakCompareAndSetLongInternal
   #882 = Methodref          #37.#883         // jdk/internal/misc/Unsafe.weakCompareAndSetLong:(Ljava/lang/Object;JJJ)Z
   #883 = NameAndType        #884:#852        // weakCompareAndSetLong:(Ljava/lang/Object;JJJ)Z
   #884 = Utf8               weakCompareAndSetLong
   #885 = Methodref          #2.#886          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #886 = NameAndType        #887:#848        // weakCompareAndSetLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #887 = Utf8               weakCompareAndSetLongAcquireInternal
   #888 = Methodref          #37.#889         // jdk/internal/misc/Unsafe.weakCompareAndSetLongAcquire:(Ljava/lang/Object;JJJ)Z
   #889 = NameAndType        #890:#852        // weakCompareAndSetLongAcquire:(Ljava/lang/Object;JJJ)Z
   #890 = Utf8               weakCompareAndSetLongAcquire
   #891 = Methodref          #2.#892          // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #892 = NameAndType        #893:#848        // weakCompareAndSetLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
   #893 = Utf8               weakCompareAndSetLongReleaseInternal
   #894 = Methodref          #37.#895         // jdk/internal/misc/Unsafe.weakCompareAndSetLongRelease:(Ljava/lang/Object;JJJ)Z
   #895 = NameAndType        #896:#852        // weakCompareAndSetLongRelease:(Ljava/lang/Object;JJJ)Z
   #896 = Utf8               weakCompareAndSetLongRelease
   #897 = Methodref          #2.#898          // jdk/internal/misc/ScopedMemoryAccess.getAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #898 = NameAndType        #899:#900        // getAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #899 = Utf8               getAndSetLongInternal
   #900 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #901 = Methodref          #37.#902         // jdk/internal/misc/Unsafe.getAndSetLong:(Ljava/lang/Object;JJ)J
   #902 = NameAndType        #903:#904        // getAndSetLong:(Ljava/lang/Object;JJ)J
   #903 = Utf8               getAndSetLong
   #904 = Utf8               (Ljava/lang/Object;JJ)J
   #905 = Methodref          #2.#906          // jdk/internal/misc/ScopedMemoryAccess.getAndSetLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #906 = NameAndType        #907:#900        // getAndSetLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #907 = Utf8               getAndSetLongAcquireInternal
   #908 = Methodref          #37.#909         // jdk/internal/misc/Unsafe.getAndSetLongAcquire:(Ljava/lang/Object;JJ)J
   #909 = NameAndType        #910:#904        // getAndSetLongAcquire:(Ljava/lang/Object;JJ)J
   #910 = Utf8               getAndSetLongAcquire
   #911 = Methodref          #2.#912          // jdk/internal/misc/ScopedMemoryAccess.getAndSetLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #912 = NameAndType        #913:#900        // getAndSetLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #913 = Utf8               getAndSetLongReleaseInternal
   #914 = Methodref          #37.#915         // jdk/internal/misc/Unsafe.getAndSetLongRelease:(Ljava/lang/Object;JJ)J
   #915 = NameAndType        #916:#904        // getAndSetLongRelease:(Ljava/lang/Object;JJ)J
   #916 = Utf8               getAndSetLongRelease
   #917 = Methodref          #2.#918          // jdk/internal/misc/ScopedMemoryAccess.getAndAddLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #918 = NameAndType        #919:#900        // getAndAddLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #919 = Utf8               getAndAddLongInternal
   #920 = Methodref          #37.#921         // jdk/internal/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
   #921 = NameAndType        #922:#904        // getAndAddLong:(Ljava/lang/Object;JJ)J
   #922 = Utf8               getAndAddLong
   #923 = Methodref          #2.#924          // jdk/internal/misc/ScopedMemoryAccess.getAndAddLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #924 = NameAndType        #925:#900        // getAndAddLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #925 = Utf8               getAndAddLongAcquireInternal
   #926 = Methodref          #37.#927         // jdk/internal/misc/Unsafe.getAndAddLongAcquire:(Ljava/lang/Object;JJ)J
   #927 = NameAndType        #928:#904        // getAndAddLongAcquire:(Ljava/lang/Object;JJ)J
   #928 = Utf8               getAndAddLongAcquire
   #929 = Methodref          #2.#930          // jdk/internal/misc/ScopedMemoryAccess.getAndAddLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #930 = NameAndType        #931:#900        // getAndAddLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #931 = Utf8               getAndAddLongReleaseInternal
   #932 = Methodref          #37.#933         // jdk/internal/misc/Unsafe.getAndAddLongRelease:(Ljava/lang/Object;JJ)J
   #933 = NameAndType        #934:#904        // getAndAddLongRelease:(Ljava/lang/Object;JJ)J
   #934 = Utf8               getAndAddLongRelease
   #935 = Methodref          #2.#936          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #936 = NameAndType        #937:#900        // getAndBitwiseOrLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #937 = Utf8               getAndBitwiseOrLongInternal
   #938 = Methodref          #37.#939         // jdk/internal/misc/Unsafe.getAndBitwiseOrLong:(Ljava/lang/Object;JJ)J
   #939 = NameAndType        #940:#904        // getAndBitwiseOrLong:(Ljava/lang/Object;JJ)J
   #940 = Utf8               getAndBitwiseOrLong
   #941 = Methodref          #2.#942          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #942 = NameAndType        #943:#900        // getAndBitwiseOrLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #943 = Utf8               getAndBitwiseOrLongAcquireInternal
   #944 = Methodref          #37.#945         // jdk/internal/misc/Unsafe.getAndBitwiseOrLongAcquire:(Ljava/lang/Object;JJ)J
   #945 = NameAndType        #946:#904        // getAndBitwiseOrLongAcquire:(Ljava/lang/Object;JJ)J
   #946 = Utf8               getAndBitwiseOrLongAcquire
   #947 = Methodref          #2.#948          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseOrLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #948 = NameAndType        #949:#900        // getAndBitwiseOrLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #949 = Utf8               getAndBitwiseOrLongReleaseInternal
   #950 = Methodref          #37.#951         // jdk/internal/misc/Unsafe.getAndBitwiseOrLongRelease:(Ljava/lang/Object;JJ)J
   #951 = NameAndType        #952:#904        // getAndBitwiseOrLongRelease:(Ljava/lang/Object;JJ)J
   #952 = Utf8               getAndBitwiseOrLongRelease
   #953 = Methodref          #2.#954          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #954 = NameAndType        #955:#900        // getAndBitwiseAndLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #955 = Utf8               getAndBitwiseAndLongInternal
   #956 = Methodref          #37.#957         // jdk/internal/misc/Unsafe.getAndBitwiseAndLong:(Ljava/lang/Object;JJ)J
   #957 = NameAndType        #958:#904        // getAndBitwiseAndLong:(Ljava/lang/Object;JJ)J
   #958 = Utf8               getAndBitwiseAndLong
   #959 = Methodref          #2.#960          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #960 = NameAndType        #961:#900        // getAndBitwiseAndLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #961 = Utf8               getAndBitwiseAndLongAcquireInternal
   #962 = Methodref          #37.#963         // jdk/internal/misc/Unsafe.getAndBitwiseAndLongAcquire:(Ljava/lang/Object;JJ)J
   #963 = NameAndType        #964:#904        // getAndBitwiseAndLongAcquire:(Ljava/lang/Object;JJ)J
   #964 = Utf8               getAndBitwiseAndLongAcquire
   #965 = Methodref          #2.#966          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseAndLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #966 = NameAndType        #967:#900        // getAndBitwiseAndLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #967 = Utf8               getAndBitwiseAndLongReleaseInternal
   #968 = Methodref          #37.#969         // jdk/internal/misc/Unsafe.getAndBitwiseAndLongRelease:(Ljava/lang/Object;JJ)J
   #969 = NameAndType        #970:#904        // getAndBitwiseAndLongRelease:(Ljava/lang/Object;JJ)J
   #970 = Utf8               getAndBitwiseAndLongRelease
   #971 = Methodref          #2.#972          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #972 = NameAndType        #973:#900        // getAndBitwiseXorLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #973 = Utf8               getAndBitwiseXorLongInternal
   #974 = Methodref          #37.#975         // jdk/internal/misc/Unsafe.getAndBitwiseXorLong:(Ljava/lang/Object;JJ)J
   #975 = NameAndType        #976:#904        // getAndBitwiseXorLong:(Ljava/lang/Object;JJ)J
   #976 = Utf8               getAndBitwiseXorLong
   #977 = Methodref          #2.#978          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #978 = NameAndType        #979:#900        // getAndBitwiseXorLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #979 = Utf8               getAndBitwiseXorLongAcquireInternal
   #980 = Methodref          #37.#981         // jdk/internal/misc/Unsafe.getAndBitwiseXorLongAcquire:(Ljava/lang/Object;JJ)J
   #981 = NameAndType        #982:#904        // getAndBitwiseXorLongAcquire:(Ljava/lang/Object;JJ)J
   #982 = Utf8               getAndBitwiseXorLongAcquire
   #983 = Methodref          #2.#984          // jdk/internal/misc/ScopedMemoryAccess.getAndBitwiseXorLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #984 = NameAndType        #985:#900        // getAndBitwiseXorLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
   #985 = Utf8               getAndBitwiseXorLongReleaseInternal
   #986 = Methodref          #37.#987         // jdk/internal/misc/Unsafe.getAndBitwiseXorLongRelease:(Ljava/lang/Object;JJ)J
   #987 = NameAndType        #988:#904        // getAndBitwiseXorLongRelease:(Ljava/lang/Object;JJ)J
   #988 = Utf8               getAndBitwiseXorLongRelease
   #989 = Methodref          #2.#990          // jdk/internal/misc/ScopedMemoryAccess.getFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
   #990 = NameAndType        #991:#992        // getFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
   #991 = Utf8               getFloatInternal
   #992 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
   #993 = Methodref          #37.#994         // jdk/internal/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
   #994 = NameAndType        #995:#996        // getFloat:(Ljava/lang/Object;J)F
   #995 = Utf8               getFloat
   #996 = Utf8               (Ljava/lang/Object;J)F
   #997 = Methodref          #2.#998          // jdk/internal/misc/ScopedMemoryAccess.putFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
   #998 = NameAndType        #999:#1000       // putFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
   #999 = Utf8               putFloatInternal
  #1000 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1001 = Methodref          #37.#1002        // jdk/internal/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
  #1002 = NameAndType        #1003:#1004      // putFloat:(Ljava/lang/Object;JF)V
  #1003 = Utf8               putFloat
  #1004 = Utf8               (Ljava/lang/Object;JF)V
  #1005 = Methodref          #2.#1006         // jdk/internal/misc/ScopedMemoryAccess.getFloatVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
  #1006 = NameAndType        #1007:#992       // getFloatVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
  #1007 = Utf8               getFloatVolatileInternal
  #1008 = Methodref          #37.#1009        // jdk/internal/misc/Unsafe.getFloatVolatile:(Ljava/lang/Object;J)F
  #1009 = NameAndType        #1010:#996       // getFloatVolatile:(Ljava/lang/Object;J)F
  #1010 = Utf8               getFloatVolatile
  #1011 = Methodref          #2.#1012         // jdk/internal/misc/ScopedMemoryAccess.putFloatVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1012 = NameAndType        #1013:#1000      // putFloatVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1013 = Utf8               putFloatVolatileInternal
  #1014 = Methodref          #37.#1015        // jdk/internal/misc/Unsafe.putFloatVolatile:(Ljava/lang/Object;JF)V
  #1015 = NameAndType        #1016:#1004      // putFloatVolatile:(Ljava/lang/Object;JF)V
  #1016 = Utf8               putFloatVolatile
  #1017 = Methodref          #2.#1018         // jdk/internal/misc/ScopedMemoryAccess.getFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
  #1018 = NameAndType        #1019:#992       // getFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
  #1019 = Utf8               getFloatAcquireInternal
  #1020 = Methodref          #37.#1021        // jdk/internal/misc/Unsafe.getFloatAcquire:(Ljava/lang/Object;J)F
  #1021 = NameAndType        #1022:#996       // getFloatAcquire:(Ljava/lang/Object;J)F
  #1022 = Utf8               getFloatAcquire
  #1023 = Methodref          #2.#1024         // jdk/internal/misc/ScopedMemoryAccess.putFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1024 = NameAndType        #1025:#1000      // putFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1025 = Utf8               putFloatReleaseInternal
  #1026 = Methodref          #37.#1027        // jdk/internal/misc/Unsafe.putFloatRelease:(Ljava/lang/Object;JF)V
  #1027 = NameAndType        #1028:#1004      // putFloatRelease:(Ljava/lang/Object;JF)V
  #1028 = Utf8               putFloatRelease
  #1029 = Methodref          #2.#1030         // jdk/internal/misc/ScopedMemoryAccess.getFloatOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
  #1030 = NameAndType        #1031:#992       // getFloatOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
  #1031 = Utf8               getFloatOpaqueInternal
  #1032 = Methodref          #37.#1033        // jdk/internal/misc/Unsafe.getFloatOpaque:(Ljava/lang/Object;J)F
  #1033 = NameAndType        #1034:#996       // getFloatOpaque:(Ljava/lang/Object;J)F
  #1034 = Utf8               getFloatOpaque
  #1035 = Methodref          #2.#1036         // jdk/internal/misc/ScopedMemoryAccess.putFloatOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1036 = NameAndType        #1037:#1000      // putFloatOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
  #1037 = Utf8               putFloatOpaqueInternal
  #1038 = Methodref          #37.#1039        // jdk/internal/misc/Unsafe.putFloatOpaque:(Ljava/lang/Object;JF)V
  #1039 = NameAndType        #1040:#1004      // putFloatOpaque:(Ljava/lang/Object;JF)V
  #1040 = Utf8               putFloatOpaque
  #1041 = Methodref          #2.#1042         // jdk/internal/misc/ScopedMemoryAccess.compareAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1042 = NameAndType        #1043:#1044      // compareAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1043 = Utf8               compareAndSetFloatInternal
  #1044 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1045 = Methodref          #37.#1046        // jdk/internal/misc/Unsafe.compareAndSetFloat:(Ljava/lang/Object;JFF)Z
  #1046 = NameAndType        #1047:#1048      // compareAndSetFloat:(Ljava/lang/Object;JFF)Z
  #1047 = Utf8               compareAndSetFloat
  #1048 = Utf8               (Ljava/lang/Object;JFF)Z
  #1049 = Methodref          #2.#1050         // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1050 = NameAndType        #1051:#1052      // compareAndExchangeFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1051 = Utf8               compareAndExchangeFloatInternal
  #1052 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1053 = Methodref          #37.#1054        // jdk/internal/misc/Unsafe.compareAndExchangeFloat:(Ljava/lang/Object;JFF)F
  #1054 = NameAndType        #1055:#1056      // compareAndExchangeFloat:(Ljava/lang/Object;JFF)F
  #1055 = Utf8               compareAndExchangeFloat
  #1056 = Utf8               (Ljava/lang/Object;JFF)F
  #1057 = Methodref          #2.#1058         // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1058 = NameAndType        #1059:#1052      // compareAndExchangeFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1059 = Utf8               compareAndExchangeFloatAcquireInternal
  #1060 = Methodref          #37.#1061        // jdk/internal/misc/Unsafe.compareAndExchangeFloatAcquire:(Ljava/lang/Object;JFF)F
  #1061 = NameAndType        #1062:#1056      // compareAndExchangeFloatAcquire:(Ljava/lang/Object;JFF)F
  #1062 = Utf8               compareAndExchangeFloatAcquire
  #1063 = Methodref          #2.#1064         // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1064 = NameAndType        #1065:#1052      // compareAndExchangeFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
  #1065 = Utf8               compareAndExchangeFloatReleaseInternal
  #1066 = Methodref          #37.#1067        // jdk/internal/misc/Unsafe.compareAndExchangeFloatRelease:(Ljava/lang/Object;JFF)F
  #1067 = NameAndType        #1068:#1056      // compareAndExchangeFloatRelease:(Ljava/lang/Object;JFF)F
  #1068 = Utf8               compareAndExchangeFloatRelease
  #1069 = Methodref          #2.#1070         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetFloatPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1070 = NameAndType        #1071:#1044      // weakCompareAndSetFloatPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1071 = Utf8               weakCompareAndSetFloatPlainInternal
  #1072 = Methodref          #37.#1073        // jdk/internal/misc/Unsafe.weakCompareAndSetFloatPlain:(Ljava/lang/Object;JFF)Z
  #1073 = NameAndType        #1074:#1048      // weakCompareAndSetFloatPlain:(Ljava/lang/Object;JFF)Z
  #1074 = Utf8               weakCompareAndSetFloatPlain
  #1075 = Methodref          #2.#1076         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1076 = NameAndType        #1077:#1044      // weakCompareAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1077 = Utf8               weakCompareAndSetFloatInternal
  #1078 = Methodref          #37.#1079        // jdk/internal/misc/Unsafe.weakCompareAndSetFloat:(Ljava/lang/Object;JFF)Z
  #1079 = NameAndType        #1080:#1048      // weakCompareAndSetFloat:(Ljava/lang/Object;JFF)Z
  #1080 = Utf8               weakCompareAndSetFloat
  #1081 = Methodref          #2.#1082         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1082 = NameAndType        #1083:#1044      // weakCompareAndSetFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1083 = Utf8               weakCompareAndSetFloatAcquireInternal
  #1084 = Methodref          #37.#1085        // jdk/internal/misc/Unsafe.weakCompareAndSetFloatAcquire:(Ljava/lang/Object;JFF)Z
  #1085 = NameAndType        #1086:#1048      // weakCompareAndSetFloatAcquire:(Ljava/lang/Object;JFF)Z
  #1086 = Utf8               weakCompareAndSetFloatAcquire
  #1087 = Methodref          #2.#1088         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1088 = NameAndType        #1089:#1044      // weakCompareAndSetFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
  #1089 = Utf8               weakCompareAndSetFloatReleaseInternal
  #1090 = Methodref          #37.#1091        // jdk/internal/misc/Unsafe.weakCompareAndSetFloatRelease:(Ljava/lang/Object;JFF)Z
  #1091 = NameAndType        #1092:#1048      // weakCompareAndSetFloatRelease:(Ljava/lang/Object;JFF)Z
  #1092 = Utf8               weakCompareAndSetFloatRelease
  #1093 = Methodref          #2.#1094         // jdk/internal/misc/ScopedMemoryAccess.getAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1094 = NameAndType        #1095:#1096      // getAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1095 = Utf8               getAndSetFloatInternal
  #1096 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1097 = Methodref          #37.#1098        // jdk/internal/misc/Unsafe.getAndSetFloat:(Ljava/lang/Object;JF)F
  #1098 = NameAndType        #1099:#1100      // getAndSetFloat:(Ljava/lang/Object;JF)F
  #1099 = Utf8               getAndSetFloat
  #1100 = Utf8               (Ljava/lang/Object;JF)F
  #1101 = Methodref          #2.#1102         // jdk/internal/misc/ScopedMemoryAccess.getAndSetFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1102 = NameAndType        #1103:#1096      // getAndSetFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1103 = Utf8               getAndSetFloatAcquireInternal
  #1104 = Methodref          #37.#1105        // jdk/internal/misc/Unsafe.getAndSetFloatAcquire:(Ljava/lang/Object;JF)F
  #1105 = NameAndType        #1106:#1100      // getAndSetFloatAcquire:(Ljava/lang/Object;JF)F
  #1106 = Utf8               getAndSetFloatAcquire
  #1107 = Methodref          #2.#1108         // jdk/internal/misc/ScopedMemoryAccess.getAndSetFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1108 = NameAndType        #1109:#1096      // getAndSetFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1109 = Utf8               getAndSetFloatReleaseInternal
  #1110 = Methodref          #37.#1111        // jdk/internal/misc/Unsafe.getAndSetFloatRelease:(Ljava/lang/Object;JF)F
  #1111 = NameAndType        #1112:#1100      // getAndSetFloatRelease:(Ljava/lang/Object;JF)F
  #1112 = Utf8               getAndSetFloatRelease
  #1113 = Methodref          #2.#1114         // jdk/internal/misc/ScopedMemoryAccess.getAndAddFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1114 = NameAndType        #1115:#1096      // getAndAddFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1115 = Utf8               getAndAddFloatInternal
  #1116 = Methodref          #37.#1117        // jdk/internal/misc/Unsafe.getAndAddFloat:(Ljava/lang/Object;JF)F
  #1117 = NameAndType        #1118:#1100      // getAndAddFloat:(Ljava/lang/Object;JF)F
  #1118 = Utf8               getAndAddFloat
  #1119 = Methodref          #2.#1120         // jdk/internal/misc/ScopedMemoryAccess.getAndAddFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1120 = NameAndType        #1121:#1096      // getAndAddFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1121 = Utf8               getAndAddFloatAcquireInternal
  #1122 = Methodref          #37.#1123        // jdk/internal/misc/Unsafe.getAndAddFloatAcquire:(Ljava/lang/Object;JF)F
  #1123 = NameAndType        #1124:#1100      // getAndAddFloatAcquire:(Ljava/lang/Object;JF)F
  #1124 = Utf8               getAndAddFloatAcquire
  #1125 = Methodref          #2.#1126         // jdk/internal/misc/ScopedMemoryAccess.getAndAddFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1126 = NameAndType        #1127:#1096      // getAndAddFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
  #1127 = Utf8               getAndAddFloatReleaseInternal
  #1128 = Methodref          #37.#1129        // jdk/internal/misc/Unsafe.getAndAddFloatRelease:(Ljava/lang/Object;JF)F
  #1129 = NameAndType        #1130:#1100      // getAndAddFloatRelease:(Ljava/lang/Object;JF)F
  #1130 = Utf8               getAndAddFloatRelease
  #1131 = Methodref          #2.#1132         // jdk/internal/misc/ScopedMemoryAccess.getDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1132 = NameAndType        #1133:#1134      // getDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1133 = Utf8               getDoubleInternal
  #1134 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1135 = Methodref          #37.#1136        // jdk/internal/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
  #1136 = NameAndType        #1137:#1138      // getDouble:(Ljava/lang/Object;J)D
  #1137 = Utf8               getDouble
  #1138 = Utf8               (Ljava/lang/Object;J)D
  #1139 = Methodref          #2.#1140         // jdk/internal/misc/ScopedMemoryAccess.putDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1140 = NameAndType        #1141:#1142      // putDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1141 = Utf8               putDoubleInternal
  #1142 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1143 = Methodref          #37.#1144        // jdk/internal/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
  #1144 = NameAndType        #1145:#1146      // putDouble:(Ljava/lang/Object;JD)V
  #1145 = Utf8               putDouble
  #1146 = Utf8               (Ljava/lang/Object;JD)V
  #1147 = Methodref          #2.#1148         // jdk/internal/misc/ScopedMemoryAccess.getDoubleVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1148 = NameAndType        #1149:#1134      // getDoubleVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1149 = Utf8               getDoubleVolatileInternal
  #1150 = Methodref          #37.#1151        // jdk/internal/misc/Unsafe.getDoubleVolatile:(Ljava/lang/Object;J)D
  #1151 = NameAndType        #1152:#1138      // getDoubleVolatile:(Ljava/lang/Object;J)D
  #1152 = Utf8               getDoubleVolatile
  #1153 = Methodref          #2.#1154         // jdk/internal/misc/ScopedMemoryAccess.putDoubleVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1154 = NameAndType        #1155:#1142      // putDoubleVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1155 = Utf8               putDoubleVolatileInternal
  #1156 = Methodref          #37.#1157        // jdk/internal/misc/Unsafe.putDoubleVolatile:(Ljava/lang/Object;JD)V
  #1157 = NameAndType        #1158:#1146      // putDoubleVolatile:(Ljava/lang/Object;JD)V
  #1158 = Utf8               putDoubleVolatile
  #1159 = Methodref          #2.#1160         // jdk/internal/misc/ScopedMemoryAccess.getDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1160 = NameAndType        #1161:#1134      // getDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1161 = Utf8               getDoubleAcquireInternal
  #1162 = Methodref          #37.#1163        // jdk/internal/misc/Unsafe.getDoubleAcquire:(Ljava/lang/Object;J)D
  #1163 = NameAndType        #1164:#1138      // getDoubleAcquire:(Ljava/lang/Object;J)D
  #1164 = Utf8               getDoubleAcquire
  #1165 = Methodref          #2.#1166         // jdk/internal/misc/ScopedMemoryAccess.putDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1166 = NameAndType        #1167:#1142      // putDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1167 = Utf8               putDoubleReleaseInternal
  #1168 = Methodref          #37.#1169        // jdk/internal/misc/Unsafe.putDoubleRelease:(Ljava/lang/Object;JD)V
  #1169 = NameAndType        #1170:#1146      // putDoubleRelease:(Ljava/lang/Object;JD)V
  #1170 = Utf8               putDoubleRelease
  #1171 = Methodref          #2.#1172         // jdk/internal/misc/ScopedMemoryAccess.getDoubleOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1172 = NameAndType        #1173:#1134      // getDoubleOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
  #1173 = Utf8               getDoubleOpaqueInternal
  #1174 = Methodref          #37.#1175        // jdk/internal/misc/Unsafe.getDoubleOpaque:(Ljava/lang/Object;J)D
  #1175 = NameAndType        #1176:#1138      // getDoubleOpaque:(Ljava/lang/Object;J)D
  #1176 = Utf8               getDoubleOpaque
  #1177 = Methodref          #2.#1178         // jdk/internal/misc/ScopedMemoryAccess.putDoubleOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1178 = NameAndType        #1179:#1142      // putDoubleOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
  #1179 = Utf8               putDoubleOpaqueInternal
  #1180 = Methodref          #37.#1181        // jdk/internal/misc/Unsafe.putDoubleOpaque:(Ljava/lang/Object;JD)V
  #1181 = NameAndType        #1182:#1146      // putDoubleOpaque:(Ljava/lang/Object;JD)V
  #1182 = Utf8               putDoubleOpaque
  #1183 = Methodref          #2.#1184         // jdk/internal/misc/ScopedMemoryAccess.compareAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1184 = NameAndType        #1185:#1186      // compareAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1185 = Utf8               compareAndSetDoubleInternal
  #1186 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1187 = Methodref          #37.#1188        // jdk/internal/misc/Unsafe.compareAndSetDouble:(Ljava/lang/Object;JDD)Z
  #1188 = NameAndType        #1189:#1190      // compareAndSetDouble:(Ljava/lang/Object;JDD)Z
  #1189 = Utf8               compareAndSetDouble
  #1190 = Utf8               (Ljava/lang/Object;JDD)Z
  #1191 = Methodref          #2.#1192         // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1192 = NameAndType        #1193:#1194      // compareAndExchangeDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1193 = Utf8               compareAndExchangeDoubleInternal
  #1194 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1195 = Methodref          #37.#1196        // jdk/internal/misc/Unsafe.compareAndExchangeDouble:(Ljava/lang/Object;JDD)D
  #1196 = NameAndType        #1197:#1198      // compareAndExchangeDouble:(Ljava/lang/Object;JDD)D
  #1197 = Utf8               compareAndExchangeDouble
  #1198 = Utf8               (Ljava/lang/Object;JDD)D
  #1199 = Methodref          #2.#1200         // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1200 = NameAndType        #1201:#1194      // compareAndExchangeDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1201 = Utf8               compareAndExchangeDoubleAcquireInternal
  #1202 = Methodref          #37.#1203        // jdk/internal/misc/Unsafe.compareAndExchangeDoubleAcquire:(Ljava/lang/Object;JDD)D
  #1203 = NameAndType        #1204:#1198      // compareAndExchangeDoubleAcquire:(Ljava/lang/Object;JDD)D
  #1204 = Utf8               compareAndExchangeDoubleAcquire
  #1205 = Methodref          #2.#1206         // jdk/internal/misc/ScopedMemoryAccess.compareAndExchangeDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1206 = NameAndType        #1207:#1194      // compareAndExchangeDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
  #1207 = Utf8               compareAndExchangeDoubleReleaseInternal
  #1208 = Methodref          #37.#1209        // jdk/internal/misc/Unsafe.compareAndExchangeDoubleRelease:(Ljava/lang/Object;JDD)D
  #1209 = NameAndType        #1210:#1198      // compareAndExchangeDoubleRelease:(Ljava/lang/Object;JDD)D
  #1210 = Utf8               compareAndExchangeDoubleRelease
  #1211 = Methodref          #2.#1212         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetDoublePlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1212 = NameAndType        #1213:#1186      // weakCompareAndSetDoublePlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1213 = Utf8               weakCompareAndSetDoublePlainInternal
  #1214 = Methodref          #37.#1215        // jdk/internal/misc/Unsafe.weakCompareAndSetDoublePlain:(Ljava/lang/Object;JDD)Z
  #1215 = NameAndType        #1216:#1190      // weakCompareAndSetDoublePlain:(Ljava/lang/Object;JDD)Z
  #1216 = Utf8               weakCompareAndSetDoublePlain
  #1217 = Methodref          #2.#1218         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1218 = NameAndType        #1219:#1186      // weakCompareAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1219 = Utf8               weakCompareAndSetDoubleInternal
  #1220 = Methodref          #37.#1221        // jdk/internal/misc/Unsafe.weakCompareAndSetDouble:(Ljava/lang/Object;JDD)Z
  #1221 = NameAndType        #1222:#1190      // weakCompareAndSetDouble:(Ljava/lang/Object;JDD)Z
  #1222 = Utf8               weakCompareAndSetDouble
  #1223 = Methodref          #2.#1224         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1224 = NameAndType        #1225:#1186      // weakCompareAndSetDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1225 = Utf8               weakCompareAndSetDoubleAcquireInternal
  #1226 = Methodref          #37.#1227        // jdk/internal/misc/Unsafe.weakCompareAndSetDoubleAcquire:(Ljava/lang/Object;JDD)Z
  #1227 = NameAndType        #1228:#1190      // weakCompareAndSetDoubleAcquire:(Ljava/lang/Object;JDD)Z
  #1228 = Utf8               weakCompareAndSetDoubleAcquire
  #1229 = Methodref          #2.#1230         // jdk/internal/misc/ScopedMemoryAccess.weakCompareAndSetDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1230 = NameAndType        #1231:#1186      // weakCompareAndSetDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
  #1231 = Utf8               weakCompareAndSetDoubleReleaseInternal
  #1232 = Methodref          #37.#1233        // jdk/internal/misc/Unsafe.weakCompareAndSetDoubleRelease:(Ljava/lang/Object;JDD)Z
  #1233 = NameAndType        #1234:#1190      // weakCompareAndSetDoubleRelease:(Ljava/lang/Object;JDD)Z
  #1234 = Utf8               weakCompareAndSetDoubleRelease
  #1235 = Methodref          #2.#1236         // jdk/internal/misc/ScopedMemoryAccess.getAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1236 = NameAndType        #1237:#1238      // getAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1237 = Utf8               getAndSetDoubleInternal
  #1238 = Utf8               (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1239 = Methodref          #37.#1240        // jdk/internal/misc/Unsafe.getAndSetDouble:(Ljava/lang/Object;JD)D
  #1240 = NameAndType        #1241:#1242      // getAndSetDouble:(Ljava/lang/Object;JD)D
  #1241 = Utf8               getAndSetDouble
  #1242 = Utf8               (Ljava/lang/Object;JD)D
  #1243 = Methodref          #2.#1244         // jdk/internal/misc/ScopedMemoryAccess.getAndSetDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1244 = NameAndType        #1245:#1238      // getAndSetDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1245 = Utf8               getAndSetDoubleAcquireInternal
  #1246 = Methodref          #37.#1247        // jdk/internal/misc/Unsafe.getAndSetDoubleAcquire:(Ljava/lang/Object;JD)D
  #1247 = NameAndType        #1248:#1242      // getAndSetDoubleAcquire:(Ljava/lang/Object;JD)D
  #1248 = Utf8               getAndSetDoubleAcquire
  #1249 = Methodref          #2.#1250         // jdk/internal/misc/ScopedMemoryAccess.getAndSetDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1250 = NameAndType        #1251:#1238      // getAndSetDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1251 = Utf8               getAndSetDoubleReleaseInternal
  #1252 = Methodref          #37.#1253        // jdk/internal/misc/Unsafe.getAndSetDoubleRelease:(Ljava/lang/Object;JD)D
  #1253 = NameAndType        #1254:#1242      // getAndSetDoubleRelease:(Ljava/lang/Object;JD)D
  #1254 = Utf8               getAndSetDoubleRelease
  #1255 = Methodref          #2.#1256         // jdk/internal/misc/ScopedMemoryAccess.getAndAddDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1256 = NameAndType        #1257:#1238      // getAndAddDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1257 = Utf8               getAndAddDoubleInternal
  #1258 = Methodref          #37.#1259        // jdk/internal/misc/Unsafe.getAndAddDouble:(Ljava/lang/Object;JD)D
  #1259 = NameAndType        #1260:#1242      // getAndAddDouble:(Ljava/lang/Object;JD)D
  #1260 = Utf8               getAndAddDouble
  #1261 = Methodref          #2.#1262         // jdk/internal/misc/ScopedMemoryAccess.getAndAddDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1262 = NameAndType        #1263:#1238      // getAndAddDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1263 = Utf8               getAndAddDoubleAcquireInternal
  #1264 = Methodref          #37.#1265        // jdk/internal/misc/Unsafe.getAndAddDoubleAcquire:(Ljava/lang/Object;JD)D
  #1265 = NameAndType        #1266:#1242      // getAndAddDoubleAcquire:(Ljava/lang/Object;JD)D
  #1266 = Utf8               getAndAddDoubleAcquire
  #1267 = Methodref          #2.#1268         // jdk/internal/misc/ScopedMemoryAccess.getAndAddDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1268 = NameAndType        #1269:#1238      // getAndAddDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
  #1269 = Utf8               getAndAddDoubleReleaseInternal
  #1270 = Methodref          #37.#1271        // jdk/internal/misc/Unsafe.getAndAddDoubleRelease:(Ljava/lang/Object;JD)D
  #1271 = NameAndType        #1272:#1242      // getAndAddDoubleRelease:(Ljava/lang/Object;JD)D
  #1272 = Utf8               getAndAddDoubleRelease
  #1273 = Methodref          #37.#1274        // jdk/internal/misc/Unsafe.getUnsafe:()Ljdk/internal/misc/Unsafe;
  #1274 = NameAndType        #1275:#1276      // getUnsafe:()Ljdk/internal/misc/Unsafe;
  #1275 = Utf8               getUnsafe
  #1276 = Utf8               ()Ljdk/internal/misc/Unsafe;
  #1277 = Methodref          #2.#1278         // jdk/internal/misc/ScopedMemoryAccess.registerNatives:()V
  #1278 = NameAndType        #1279:#12        // registerNatives:()V
  #1279 = Utf8               registerNatives
  #1280 = Methodref          #2.#9            // jdk/internal/misc/ScopedMemoryAccess."<init>":()V
  #1281 = Utf8               closeScope
  #1282 = Utf8               Code
  #1283 = Utf8               LineNumberTable
  #1284 = Utf8               LocalVariableTable
  #1285 = Utf8               this
  #1286 = Utf8               session
  #1287 = Utf8               Ljdk/internal/foreign/MemorySessionImpl;
  #1288 = Utf8               error
  #1289 = Utf8               Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
  #1290 = Utf8               getScopedMemoryAccess
  #1291 = Utf8               ()Ljdk/internal/misc/ScopedMemoryAccess;
  #1292 = Utf8               ex
  #1293 = Utf8               srcSession
  #1294 = Utf8               dstSession
  #1295 = Utf8               srcBase
  #1296 = Utf8               Ljava/lang/Object;
  #1297 = Utf8               srcOffset
  #1298 = Utf8               J
  #1299 = Utf8               destBase
  #1300 = Utf8               destOffset
  #1301 = Utf8               bytes
  #1302 = Utf8               StackMapTable
  #1303 = Utf8               RuntimeVisibleAnnotations
  #1304 = Utf8               Ljdk/internal/vm/annotation/ForceInline;
  #1305 = Class              #1306            // java/lang/Throwable
  #1306 = Utf8               java/lang/Throwable
  #1307 = Utf8               Ljdk/internal/misc/ScopedMemoryAccess$Scoped;
  #1308 = Utf8               elemSize
  #1309 = Utf8               o
  #1310 = Utf8               offset
  #1311 = Utf8               value
  #1312 = Utf8               B
  #1313 = Utf8               aSession
  #1314 = Utf8               bSession
  #1315 = Utf8               a
  #1316 = Utf8               aOffset
  #1317 = Utf8               b
  #1318 = Utf8               bOffset
  #1319 = Utf8               length
  #1320 = Utf8               I
  #1321 = Utf8               log2ArrayIndexScale
  #1322 = Utf8               mappedUtils
  #1323 = Utf8               Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
  #1324 = Utf8               address
  #1325 = Utf8               isSync
  #1326 = Utf8               Z
  #1327 = Utf8               size
  #1328 = Utf8               fd
  #1329 = Utf8               Ljava/io/FileDescriptor;
  #1330 = Utf8               index
  #1331 = Utf8               loadFromMemorySegment
  #1332 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
  #1333 = Utf8               vmClass
  #1334 = Utf8               Ljava/lang/Class;
  #1335 = Utf8               e
  #1336 = Utf8               msp
  #1337 = Utf8               Ljdk/internal/foreign/AbstractMemorySegmentImpl;
  #1338 = Utf8               s
  #1339 = Utf8               Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;
  #1340 = Utf8               defaultImpl
  #1341 = Utf8               Ljdk/internal/vm/vector/VectorSupport$LoadOperation;
  #1342 = Utf8               LocalVariableTypeTable
  #1343 = Utf8               Ljava/lang/Class<+TV;>;
  #1344 = Utf8               Ljava/lang/Class<TE;>;
  #1345 = Utf8               TS;
  #1346 = Utf8               Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;
  #1347 = Utf8               Signature
  #1348 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTS;Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;)TV;
  #1349 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTS;Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;)TV;
  #1350 = Utf8               loadFromMemorySegmentMasked
  #1351 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
  #1352 = Utf8               maskClass
  #1353 = Utf8               m
  #1354 = Utf8               Ljdk/internal/vm/vector/VectorSupport$VectorMask;
  #1355 = Utf8               offsetInRange
  #1356 = Utf8               Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;
  #1357 = Utf8               Ljava/lang/Class<TM;>;
  #1358 = Utf8               TM;
  #1359 = Utf8               Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;
  #1360 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTM;TS;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;)TV;
  #1361 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTM;TS;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;)TV;
  #1362 = Utf8               storeIntoMemorySegment
  #1363 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
  #1364 = Utf8               v
  #1365 = Utf8               Ljdk/internal/vm/vector/VectorSupport$Vector;
  #1366 = Utf8               Ljdk/internal/vm/vector/VectorSupport$StoreVectorOperation;
  #1367 = Utf8               TV;
  #1368 = Utf8               Ljdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;
  #1369 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ITV;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;)V
  #1370 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ITV;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;)V
  #1371 = Utf8               storeIntoMemorySegmentMasked
  #1372 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
  #1373 = Utf8               Ljdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;
  #1374 = Utf8               Ljdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;
  #1375 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ITV;TM;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;)V
  #1376 = Utf8               <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ITV;TM;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;)V
  #1377 = Utf8               base
  #1378 = Utf8               delta
  #1379 = Utf8               S
  #1380 = Utf8               be
  #1381 = Utf8               C
  #1382 = Utf8               expected
  #1383 = Utf8               F
  #1384 = Utf8               D
  #1385 = Utf8               <clinit>
  #1386 = Utf8               SourceFile
  #1387 = Utf8               ScopedMemoryAccess.java
  #1388 = Utf8               NestMembers
  #1389 = Class              #1390            // jdk/internal/misc/ScopedMemoryAccess$Scoped
  #1390 = Utf8               jdk/internal/misc/ScopedMemoryAccess$Scoped
  #1391 = Utf8               InnerClasses
  #1392 = Utf8               ScopedAccessError
  #1393 = Class              #1394            // jdk/internal/vm/vector/VectorSupport$VectorSpecies
  #1394 = Utf8               jdk/internal/vm/vector/VectorSupport$VectorSpecies
  #1395 = Utf8               VectorSpecies
  #1396 = Class              #1397            // jdk/internal/vm/vector/VectorSupport$LoadOperation
  #1397 = Utf8               jdk/internal/vm/vector/VectorSupport$LoadOperation
  #1398 = Utf8               LoadOperation
  #1399 = Utf8               Vector
  #1400 = Class              #1401            // jdk/internal/vm/vector/VectorSupport$VectorPayload
  #1401 = Utf8               jdk/internal/vm/vector/VectorSupport$VectorPayload
  #1402 = Utf8               VectorPayload
  #1403 = Class              #1404            // jdk/internal/vm/vector/VectorSupport$VectorMask
  #1404 = Utf8               jdk/internal/vm/vector/VectorSupport$VectorMask
  #1405 = Utf8               VectorMask
  #1406 = Class              #1407            // jdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation
  #1407 = Utf8               jdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation
  #1408 = Utf8               LoadVectorMaskedOperation
  #1409 = Class              #1410            // jdk/internal/vm/vector/VectorSupport$StoreVectorOperation
  #1410 = Utf8               jdk/internal/vm/vector/VectorSupport$StoreVectorOperation
  #1411 = Utf8               StoreVectorOperation
  #1412 = Class              #1413            // jdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation
  #1413 = Utf8               jdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation
  #1414 = Utf8               StoreVectorMaskedOperation
  #1415 = Utf8               Scoped
{
  private static final jdk.internal.misc.Unsafe UNSAFE;
    descriptor: Ljdk/internal/misc/Unsafe;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final jdk.internal.misc.ScopedMemoryAccess theScopedMemoryAccess;
    descriptor: Ljdk/internal/misc/ScopedMemoryAccess;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static native void registerNatives();
    descriptor: ()V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  public void closeScope(jdk.internal.foreign.MemorySessionImpl, jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=3, args_size=3
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: invokevirtual #1                  // Method closeScope0:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;)V
         6: return                  
      LineNumberTable:
        line 88: 0
        line 89: 6
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        7     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0        7     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0        7     2  error  Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
  
  native void closeScope0(jdk.internal.foreign.MemorySessionImpl, jdk.internal.misc.ScopedMemoryAccess$ScopedAccessError);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;)V
    flags: (0x0100) ACC_NATIVE
  
  private jdk.internal.misc.ScopedMemoryAccess();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #7                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
  
  public static jdk.internal.misc.ScopedMemoryAccess getScopedMemoryAccess();
    descriptor: ()Ljdk/internal/misc/ScopedMemoryAccess;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #13                 // Field theScopedMemoryAccess:Ljdk/internal/misc/ScopedMemoryAccess;
         3: areturn                 
      LineNumberTable:
        line 98: 0
  
  public void copyMemory(jdk.internal.foreign.MemorySessionImpl, jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=11, locals=12, args_size=8
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: aload_3                 
         4: lload         4                 
         6: aload         6                 
         8: lload         7                 
        10: lload         9                 
        12: invokevirtual #17                 // Method copyMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
        15: goto          26                
        18: astore        11                
        20: aload         11                
        22: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        25: athrow                  
        26: return                  
      Exception table:
          from       to target type
             0       15    18  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 130: 0
        line 133: 15
        line 131: 18
        line 132: 20
        line 134: 26
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          20        6    11  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       27     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       27     1  srcSession Ljdk/internal/foreign/MemorySessionImpl;
           0       27     2  dstSession Ljdk/internal/foreign/MemorySessionImpl;
           0       27     3  srcBase Ljava/lang/Object;
           0       27     4  srcOffset J
           0       27     6  destBase Ljava/lang/Object;
           0       27     7  destOffset J
           0       27     9  bytes  J
      StackMapTable: number_of_entries = 2
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void copyMemoryInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=9, locals=12, args_size=8
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: ifnull        16                
        12: aload_2                 
        13: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
        16: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        19: aload_3                 
        20: lload         4                 
        22: aload         6                 
        24: lload         7                 
        26: lload         9                 
        28: invokevirtual #36                 // Method jdk/internal/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload_2                 
        36: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        39: goto          55                
        42: astore        11                
        44: aload_1                 
        45: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        48: aload_2                 
        49: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        52: aload         11                
        54: athrow                  
        55: return                  
      Exception table:
          from       to target type
             0       31    42  any
            42       44    42  any
      LineNumberTable:
        line 142: 0
        line 143: 4
        line 145: 8
        line 146: 12
        line 148: 16
        line 150: 31
        line 151: 35
        line 152: 39
        line 150: 42
        line 151: 48
        line 152: 52
        line 153: 55
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       56     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       56     1  srcSession Ljdk/internal/foreign/MemorySessionImpl;
           0       56     2  dstSession Ljdk/internal/foreign/MemorySessionImpl;
           0       56     3  srcBase Ljava/lang/Object;
           0       56     4  srcOffset J
           0       56     6  destBase Ljava/lang/Object;
           0       56     7  destOffset J
           0       56     9  bytes  J
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 7 /* same */
        frame_type = 89 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 12 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void copySwapMemory(jdk.internal.foreign.MemorySessionImpl, jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=13, locals=14, args_size=9
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: aload_3                 
         4: lload         4                 
         6: aload         6                 
         8: lload         7                 
        10: lload         9                 
        12: lload         11                
        14: invokevirtual #48                 // Method copySwapMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
        17: goto          28                
        20: astore        13                
        22: aload         13                
        24: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        27: athrow                  
        28: return                  
      Exception table:
          from       to target type
             0       17    20  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 161: 0
        line 164: 17
        line 162: 20
        line 163: 22
        line 165: 28
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          22        6    13  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       29     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       29     1  srcSession Ljdk/internal/foreign/MemorySessionImpl;
           0       29     2  dstSession Ljdk/internal/foreign/MemorySessionImpl;
           0       29     3  srcBase Ljava/lang/Object;
           0       29     4  srcOffset J
           0       29     6  destBase Ljava/lang/Object;
           0       29     7  destOffset J
           0       29     9  bytes  J
           0       29    11  elemSize J
      StackMapTable: number_of_entries = 2
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void copySwapMemoryInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JJJ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=11, locals=14, args_size=9
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: ifnull        16                
        12: aload_2                 
        13: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
        16: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        19: aload_3                 
        20: lload         4                 
        22: aload         6                 
        24: lload         7                 
        26: lload         9                 
        28: lload         11                
        30: invokevirtual #52                 // Method jdk/internal/misc/Unsafe.copySwapMemory:(Ljava/lang/Object;JLjava/lang/Object;JJJ)V
        33: aload_1                 
        34: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        37: aload_2                 
        38: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        41: goto          57                
        44: astore        13                
        46: aload_1                 
        47: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        50: aload_2                 
        51: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        54: aload         13                
        56: athrow                  
        57: return                  
      Exception table:
          from       to target type
             0       33    44  any
            44       46    44  any
      LineNumberTable:
        line 173: 0
        line 174: 4
        line 176: 8
        line 177: 12
        line 179: 16
        line 181: 33
        line 182: 37
        line 183: 41
        line 181: 44
        line 182: 50
        line 183: 54
        line 184: 57
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       58     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       58     1  srcSession Ljdk/internal/foreign/MemorySessionImpl;
           0       58     2  dstSession Ljdk/internal/foreign/MemorySessionImpl;
           0       58     3  srcBase Ljava/lang/Object;
           0       58     4  srcOffset J
           0       58     6  destBase Ljava/lang/Object;
           0       58     7  destOffset J
           0       58     9  bytes  J
           0       58    11  elemSize J
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 7 /* same */
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 12 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void setMemory(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJB)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=8, locals=9, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: iload         7                 
         8: invokevirtual #56                 // Method setMemoryInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJB)V
        11: goto          22                
        14: astore        8                 
        16: aload         8                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 189: 0
        line 192: 11
        line 190: 14
        line 191: 16
        line 193: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  o      Ljava/lang/Object;
           0       23     3  offset J
           0       23     5  bytes  J
           0       23     7  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void setMemoryInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJB)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=7, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: iload         7                 
        17: invokevirtual #60                 // Method jdk/internal/misc/Unsafe.setMemory:(Ljava/lang/Object;JJB)V
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: goto          36                
        27: astore        8                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         8                 
        35: athrow                  
        36: return                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 198: 0
        line 199: 4
        line 201: 8
        line 203: 20
        line 204: 24
        line 203: 27
        line 204: 33
        line 205: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       37     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       37     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       37     2  o      Ljava/lang/Object;
           0       37     3  offset J
           0       37     5  bytes  J
           0       37     7  value  B
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int vectorizedMismatch(jdk.internal.foreign.MemorySessionImpl, jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JII)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=11, locals=12, args_size=9
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: aload_3                 
         4: lload         4                 
         6: aload         6                 
         8: lload         7                 
        10: iload         9                 
        12: iload         10                
        14: invokevirtual #64                 // Method vectorizedMismatchInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JII)I
        17: ireturn                 
        18: astore        11                
        20: aload         11                
        22: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        25: athrow                  
      Exception table:
          from       to target type
             0       17    18  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 214: 0
        line 215: 18
        line 216: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          20        6    11  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       26     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       26     1  aSession Ljdk/internal/foreign/MemorySessionImpl;
           0       26     2  bSession Ljdk/internal/foreign/MemorySessionImpl;
           0       26     3  a      Ljava/lang/Object;
           0       26     4  aOffset J
           0       26     6  b      Ljava/lang/Object;
           0       26     7  bOffset J
           0       26     9  length I
           0       26    10  log2ArrayIndexScale I
      StackMapTable: number_of_entries = 1
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int vectorizedMismatchInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JLjava/lang/Object;JII)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=13, args_size=9
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: ifnull        16                
        12: aload_2                 
        13: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
        16: aload_3                 
        17: lload         4                 
        19: aload         6                 
        21: lload         7                 
        23: iload         9                 
        25: iload         10                
        27: invokestatic  #68                 // Method jdk/internal/util/ArraysSupport.vectorizedMismatch:(Ljava/lang/Object;JLjava/lang/Object;JII)I
        30: istore        11                
        32: aload_1                 
        33: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        36: aload_2                 
        37: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        40: iload         11                
        42: ireturn                 
        43: astore        12                
        45: aload_1                 
        46: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        49: aload_2                 
        50: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        53: aload         12                
        55: athrow                  
      Exception table:
          from       to target type
             0       32    43  any
            43       45    43  any
      LineNumberTable:
        line 227: 0
        line 228: 4
        line 230: 8
        line 231: 12
        line 233: 16
        line 235: 32
        line 236: 36
        line 233: 40
        line 235: 43
        line 236: 49
        line 237: 53
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       56     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       56     1  aSession Ljdk/internal/foreign/MemorySessionImpl;
           0       56     2  bSession Ljdk/internal/foreign/MemorySessionImpl;
           0       56     3  a      Ljava/lang/Object;
           0       56     4  aOffset J
           0       56     6  b      Ljava/lang/Object;
           0       56     7  bOffset J
           0       56     9  length I
           0       56    10  log2ArrayIndexScale I
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 7 /* same */
        frame_type = 90 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean isLoaded(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, long, boolean, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=8, locals=9, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: lload         6                 
         8: invokevirtual #74                 // Method isLoadedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)Z
        11: ireturn                 
        12: astore        8                 
        14: aload         8                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 243: 0
        line 244: 12
        line 245: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       20     3  address J
           0       20     5  isSync Z
           0       20     6  size   J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public boolean isLoadedInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, long, boolean, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=10, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: lload_3                 
        10: iload         5                 
        12: lload         6                 
        14: invokeinterface #78, 6              // InterfaceMethod jdk/internal/access/foreign/MappedMemoryUtilsProxy.isLoaded:(JZJ)Z
        19: istore        8                 
        21: aload_1                 
        22: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        25: iload         8                 
        27: ireturn                 
        28: astore        9                 
        30: aload_1                 
        31: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        34: aload         9                 
        36: athrow                  
      Exception table:
          from       to target type
             0       21    28  any
            28       30    28  any
      LineNumberTable:
        line 252: 0
        line 253: 4
        line 255: 8
        line 257: 21
        line 255: 25
        line 257: 28
        line 258: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       37     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       37     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       37     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       37     3  address J
           0       37     5  isSync Z
           0       37     6  size   J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void load(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, long, boolean, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=8, locals=9, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: lload         6                 
         8: invokevirtual #84                 // Method loadInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
        11: goto          22                
        14: astore        8                 
        16: aload         8                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 264: 0
        line 267: 11
        line 265: 14
        line 266: 16
        line 268: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       23     3  address J
           0       23     5  isSync Z
           0       23     6  size   J
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public void loadInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, long, boolean, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: lload_3                 
        10: iload         5                 
        12: lload         6                 
        14: invokeinterface #88, 6              // InterfaceMethod jdk/internal/access/foreign/MappedMemoryUtilsProxy.load:(JZJ)V
        19: aload_1                 
        20: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        23: goto          35                
        26: astore        8                 
        28: aload_1                 
        29: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        32: aload         8                 
        34: athrow                  
        35: return                  
      Exception table:
          from       to target type
             0       19    26  any
            26       28    26  any
      LineNumberTable:
        line 273: 0
        line 274: 4
        line 276: 8
        line 278: 19
        line 279: 23
        line 278: 26
        line 279: 32
        line 280: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       36     3  address J
           0       36     5  isSync Z
           0       36     6  size   J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void unload(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, long, boolean, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=8, locals=9, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: lload         6                 
         8: invokevirtual #92                 // Method unloadInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
        11: goto          22                
        14: astore        8                 
        16: aload         8                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 285: 0
        line 288: 11
        line 286: 14
        line 287: 16
        line 289: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       23     3  address J
           0       23     5  isSync Z
           0       23     6  size   J
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public void unloadInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, long, boolean, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;JZJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: lload_3                 
        10: iload         5                 
        12: lload         6                 
        14: invokeinterface #95, 6              // InterfaceMethod jdk/internal/access/foreign/MappedMemoryUtilsProxy.unload:(JZJ)V
        19: aload_1                 
        20: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        23: goto          35                
        26: astore        8                 
        28: aload_1                 
        29: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        32: aload         8                 
        34: athrow                  
        35: return                  
      Exception table:
          from       to target type
             0       19    26  any
            26       28    26  any
      LineNumberTable:
        line 294: 0
        line 295: 4
        line 297: 8
        line 299: 19
        line 300: 23
        line 299: 26
        line 300: 32
        line 301: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       36     3  address J
           0       36     5  isSync Z
           0       36     6  size   J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void force(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, java.io.FileDescriptor, long, boolean, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;Ljava/io/FileDescriptor;JZJJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=11, locals=12, args_size=8
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: aload_3                 
         4: lload         4                 
         6: iload         6                 
         8: lload         7                 
        10: lload         9                 
        12: invokevirtual #98                 // Method forceInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;Ljava/io/FileDescriptor;JZJJ)V
        15: goto          26                
        18: astore        11                
        20: aload         11                
        22: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        25: athrow                  
        26: return                  
      Exception table:
          from       to target type
             0       15    18  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 306: 0
        line 309: 15
        line 307: 18
        line 308: 20
        line 310: 26
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          20        6    11  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       27     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       27     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       27     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       27     3  fd     Ljava/io/FileDescriptor;
           0       27     4  address J
           0       27     6  isSync Z
           0       27     7  index  J
           0       27     9  length J
      StackMapTable: number_of_entries = 2
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public void forceInternal(jdk.internal.foreign.MemorySessionImpl, jdk.internal.access.foreign.MappedMemoryUtilsProxy, java.io.FileDescriptor, long, boolean, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;Ljava/io/FileDescriptor;JZJJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=12, args_size=8
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: aload_2                 
         9: aload_3                 
        10: lload         4                 
        12: iload         6                 
        14: lload         7                 
        16: lload         9                 
        18: invokeinterface #102, 9             // InterfaceMethod jdk/internal/access/foreign/MappedMemoryUtilsProxy.force:(Ljava/io/FileDescriptor;JZJJ)V
        23: aload_1                 
        24: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        27: goto          39                
        30: astore        11                
        32: aload_1                 
        33: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        36: aload         11                
        38: athrow                  
        39: return                  
      Exception table:
          from       to target type
             0       23    30  any
            30       32    30  any
      LineNumberTable:
        line 315: 0
        line 316: 4
        line 318: 8
        line 320: 23
        line 321: 27
        line 320: 30
        line 321: 36
        line 322: 39
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       40     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       40     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       40     2  mappedUtils Ljdk/internal/access/foreign/MappedMemoryUtilsProxy;
           0       40     3  fd     Ljava/io/FileDescriptor;
           0       40     4  address J
           0       40     6  isSync Z
           0       40     7  index  J
           0       40     9  length J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object, S extends jdk.internal.vm.vector.VectorSupport$VectorSpecies<E>> V loadFromMemorySegment(java.lang.Class<? extends V>, java.lang.Class<E>, int, jdk.internal.foreign.AbstractMemorySegmentImpl, long, S, jdk.internal.vm.vector.VectorSupport$LoadOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V, S>);
    descriptor: (Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=9, locals=9, args_size=7
         0: aload_3                 
         1: invokevirtual #106                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.sessionImpl:()Ljdk/internal/foreign/MemorySessionImpl;
         4: aload_0                 
         5: aload_1                 
         6: iload_2                 
         7: aload_3                 
         8: lload         4                 
        10: aload         6                 
        12: aload         7                 
        14: invokestatic  #112                // Method loadFromMemorySegmentScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
        17: areturn                 
        18: astore        8                 
        20: aload         8                 
        22: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        25: athrow                  
      Exception table:
          from       to target type
             0       17    18  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 335: 0
        line 336: 1
        line 335: 14
        line 341: 18
        line 342: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          20        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       26     0  vmClass Ljava/lang/Class;
           0       26     1  e      Ljava/lang/Class;
           0       26     2  length I
           0       26     3  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       26     4  offset J
           0       26     6  s      Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;
           0       26     7  defaultImpl Ljdk/internal/vm/vector/VectorSupport$LoadOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       26     0  vmClass   Ljava/lang/Class<+TV;>;
             0       26     1  e      Ljava/lang/Class<TE;>;
             0       26     6  s      TS;
             0       26     7  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;
      StackMapTable: number_of_entries = 1
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    Signature: #1348                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTS;Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;)TV;
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object, S extends jdk.internal.vm.vector.VectorSupport$VectorSpecies<E>> V loadFromMemorySegmentScopedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Class<? extends V>, java.lang.Class<E>, int, jdk.internal.foreign.AbstractMemorySegmentImpl, long, S, jdk.internal.vm.vector.VectorSupport$LoadOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V, S>);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=12, locals=11, args_size=8
         0: aload_0                 
         1: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         4: aload_1                 
         5: aload_2                 
         6: iload_3                 
         7: aload         4                 
         9: invokevirtual #116                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetBase:()Ljava/lang/Object;
        12: aload         4                 
        14: invokevirtual #120                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetOffset:()J
        17: lload         5                 
        19: ladd                    
        20: iconst_1                
        21: aload         4                 
        23: lload         5                 
        25: aload         7                 
        27: aload         8                 
        29: invokestatic  #124                // Method jdk/internal/vm/vector/VectorSupport.load:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadOperation;)Ljdk/internal/vm/vector/VectorSupport$VectorPayload;
        32: checkcast     #129                // class jdk/internal/vm/vector/VectorSupport$Vector
        35: astore        9                 
        37: aload_0                 
        38: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        41: aload         9                 
        43: areturn                 
        44: astore        10                
        46: aload_0                 
        47: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        50: aload         10                
        52: athrow                  
      Exception table:
          from       to target type
             0       37    44  any
            44       46    44  any
      LineNumberTable:
        line 356: 0
        line 358: 4
        line 359: 9
        line 358: 29
        line 363: 37
        line 358: 41
        line 363: 44
        line 364: 50
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       53     0  session Ljdk/internal/foreign/MemorySessionImpl;
           0       53     1  vmClass Ljava/lang/Class;
           0       53     2  e      Ljava/lang/Class;
           0       53     3  length I
           0       53     4  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       53     5  offset J
           0       53     7  s      Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;
           0       53     8  defaultImpl Ljdk/internal/vm/vector/VectorSupport$LoadOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       53     1  vmClass   Ljava/lang/Class<+TV;>;
             0       53     2  e      Ljava/lang/Class<TE;>;
             0       53     7  s      TS;
             0       53     8  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;
      StackMapTable: number_of_entries = 1
        frame_type = 108 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    Signature: #1349                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTS;Ljdk/internal/vm/vector/VectorSupport$LoadOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;>;)TV;
    RuntimeVisibleAnnotations:
      0: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
      1: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object, S extends jdk.internal.vm.vector.VectorSupport$VectorSpecies<E>, M extends jdk.internal.vm.vector.VectorSupport$VectorMask<E>> V loadFromMemorySegmentMasked(java.lang.Class<? extends V>, java.lang.Class<M>, java.lang.Class<E>, int, jdk.internal.foreign.AbstractMemorySegmentImpl, long, M, S, int, jdk.internal.vm.vector.VectorSupport$LoadVectorMaskedOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V, S, M>);
    descriptor: (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=12, locals=12, args_size=10
         0: aload         4                 
         2: invokevirtual #106                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.sessionImpl:()Ljdk/internal/foreign/MemorySessionImpl;
         5: aload_0                 
         6: aload_1                 
         7: aload_2                 
         8: iload_3                 
         9: aload         4                 
        11: lload         5                 
        13: aload         7                 
        15: aload         8                 
        17: iload         9                 
        19: aload         10                
        21: invokestatic  #131                // Method loadFromMemorySegmentMaskedScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
        24: areturn                 
        25: astore        11                
        27: aload         11                
        29: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        32: athrow                  
      Exception table:
          from       to target type
             0       24    25  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 376: 0
        line 377: 2
        line 376: 21
        line 382: 25
        line 383: 27
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          27        6    11  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       33     0  vmClass Ljava/lang/Class;
           0       33     1  maskClass Ljava/lang/Class;
           0       33     2  e      Ljava/lang/Class;
           0       33     3  length I
           0       33     4  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       33     5  offset J
           0       33     7  m      Ljdk/internal/vm/vector/VectorSupport$VectorMask;
           0       33     8  s      Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;
           0       33     9  offsetInRange I
           0       33    10  defaultImpl Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       33     0  vmClass   Ljava/lang/Class<+TV;>;
             0       33     1  maskClass   Ljava/lang/Class<TM;>;
             0       33     2  e      Ljava/lang/Class<TE;>;
             0       33     7  m      TM;
             0       33     8  s      TS;
             0       33    10  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;
      StackMapTable: number_of_entries = 1
        frame_type = 89 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    Signature: #1360                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTM;TS;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;)TV;
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object, S extends jdk.internal.vm.vector.VectorSupport$VectorSpecies<E>, M extends jdk.internal.vm.vector.VectorSupport$VectorMask<E>> V loadFromMemorySegmentMaskedScopedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Class<? extends V>, java.lang.Class<M>, java.lang.Class<E>, int, jdk.internal.foreign.AbstractMemorySegmentImpl, long, M, S, int, jdk.internal.vm.vector.VectorSupport$LoadVectorMaskedOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V, S, M>);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=15, locals=14, args_size=11
         0: aload_0                 
         1: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         4: aload_1                 
         5: aload_2                 
         6: aload_3                 
         7: iload         4                 
         9: aload         5                 
        11: invokevirtual #116                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetBase:()Ljava/lang/Object;
        14: aload         5                 
        16: invokevirtual #120                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetOffset:()J
        19: lload         6                 
        21: ladd                    
        22: iconst_1                
        23: aload         8                 
        25: iload         10                
        27: aload         5                 
        29: lload         6                 
        31: aload         9                 
        33: aload         11                
        35: invokestatic  #135                // Method jdk/internal/vm/vector/VectorSupport.loadMasked:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorMask;ILjava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$VectorSpecies;Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;)Ljdk/internal/vm/vector/VectorSupport$Vector;
        38: astore        12                
        40: aload_0                 
        41: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        44: aload         12                
        46: areturn                 
        47: astore        13                
        49: aload_0                 
        50: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        53: aload         13                
        55: athrow                  
      Exception table:
          from       to target type
             0       40    47  any
            47       49    47  any
      LineNumberTable:
        line 398: 0
        line 400: 4
        line 401: 11
        line 400: 35
        line 405: 40
        line 400: 44
        line 405: 47
        line 406: 53
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       56     0  session Ljdk/internal/foreign/MemorySessionImpl;
           0       56     1  vmClass Ljava/lang/Class;
           0       56     2  maskClass Ljava/lang/Class;
           0       56     3  e      Ljava/lang/Class;
           0       56     4  length I
           0       56     5  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       56     6  offset J
           0       56     8  m      Ljdk/internal/vm/vector/VectorSupport$VectorMask;
           0       56     9  s      Ljdk/internal/vm/vector/VectorSupport$VectorSpecies;
           0       56    10  offsetInRange I
           0       56    11  defaultImpl Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       56     1  vmClass   Ljava/lang/Class<+TV;>;
             0       56     2  maskClass   Ljava/lang/Class<TM;>;
             0       56     3  e      Ljava/lang/Class<TE;>;
             0       56     8  m      TM;
             0       56     9  s      TS;
             0       56    11  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;
      StackMapTable: number_of_entries = 1
        frame_type = 111 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    Signature: #1361                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;S:Ljdk/internal/vm/vector/VectorSupport$VectorSpecies<TE;>;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ILjdk/internal/foreign/AbstractMemorySegmentImpl;JTM;TS;ILjdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TS;TM;>;)TV;
    RuntimeVisibleAnnotations:
      0: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
      1: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object> void storeIntoMemorySegment(java.lang.Class<? extends V>, java.lang.Class<E>, int, V, jdk.internal.foreign.AbstractMemorySegmentImpl, long, jdk.internal.vm.vector.VectorSupport$StoreVectorOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V>);
    descriptor: (Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=9, locals=9, args_size=7
         0: aload         4                 
         2: invokevirtual #106                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.sessionImpl:()Ljdk/internal/foreign/MemorySessionImpl;
         5: aload_0                 
         6: aload_1                 
         7: iload_2                 
         8: aload_3                 
         9: aload         4                 
        11: lload         5                 
        13: aload         7                 
        15: invokestatic  #139                // Method storeIntoMemorySegmentScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
        18: goto          29                
        21: astore        8                 
        23: aload         8                 
        25: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        28: athrow                  
        29: return                  
      Exception table:
          from       to target type
             0       18    21  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 418: 0
        line 419: 2
        line 418: 15
        line 426: 18
        line 424: 21
        line 425: 23
        line 427: 29
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          23        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       30     0  vmClass Ljava/lang/Class;
           0       30     1  e      Ljava/lang/Class;
           0       30     2  length I
           0       30     3  v      Ljdk/internal/vm/vector/VectorSupport$Vector;
           0       30     4  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       30     5  offset J
           0       30     7  defaultImpl Ljdk/internal/vm/vector/VectorSupport$StoreVectorOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       30     0  vmClass   Ljava/lang/Class<+TV;>;
             0       30     1  e      Ljava/lang/Class<TE;>;
             0       30     3  v      TV;
             0       30     7  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;
      StackMapTable: number_of_entries = 2
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    Signature: #1369                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ITV;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;)V
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object> void storeIntoMemorySegmentScopedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Class<? extends V>, java.lang.Class<E>, int, V, jdk.internal.foreign.AbstractMemorySegmentImpl, long, jdk.internal.vm.vector.VectorSupport$StoreVectorOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V>);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=12, locals=10, args_size=8
         0: aload_0                 
         1: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         4: aload_1                 
         5: aload_2                 
         6: iload_3                 
         7: aload         5                 
         9: invokevirtual #116                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetBase:()Ljava/lang/Object;
        12: aload         5                 
        14: invokevirtual #120                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetOffset:()J
        17: lload         6                 
        19: ladd                    
        20: iconst_1                
        21: aload         4                 
        23: aload         5                 
        25: lload         6                 
        27: aload         8                 
        29: invokestatic  #143                // Method jdk/internal/vm/vector/VectorSupport.store:(Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$VectorPayload;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation;)V
        32: aload_0                 
        33: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        36: goto          48                
        39: astore        9                 
        41: aload_0                 
        42: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        45: aload         9                 
        47: athrow                  
        48: return                  
      Exception table:
          from       to target type
             0       32    39  any
            39       41    39  any
      LineNumberTable:
        line 439: 0
        line 441: 4
        line 442: 9
        line 441: 29
        line 447: 32
        line 448: 36
        line 447: 39
        line 448: 45
        line 449: 48
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       49     0  session Ljdk/internal/foreign/MemorySessionImpl;
           0       49     1  vmClass Ljava/lang/Class;
           0       49     2  e      Ljava/lang/Class;
           0       49     3  length I
           0       49     4  v      Ljdk/internal/vm/vector/VectorSupport$Vector;
           0       49     5  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       49     6  offset J
           0       49     8  defaultImpl Ljdk/internal/vm/vector/VectorSupport$StoreVectorOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       49     1  vmClass   Ljava/lang/Class<+TV;>;
             0       49     2  e      Ljava/lang/Class<TE;>;
             0       49     4  v      TV;
             0       49     8  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;
      StackMapTable: number_of_entries = 2
        frame_type = 103 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    Signature: #1370                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TE;>;ITV;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;>;)V
    RuntimeVisibleAnnotations:
      0: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
      1: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object, M extends jdk.internal.vm.vector.VectorSupport$VectorMask<E>> void storeIntoMemorySegmentMasked(java.lang.Class<? extends V>, java.lang.Class<M>, java.lang.Class<E>, int, V, M, jdk.internal.foreign.AbstractMemorySegmentImpl, long, jdk.internal.vm.vector.VectorSupport$StoreVectorMaskedOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V, M>);
    descriptor: (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=11, locals=11, args_size=9
         0: aload         6                 
         2: invokevirtual #106                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.sessionImpl:()Ljdk/internal/foreign/MemorySessionImpl;
         5: aload_0                 
         6: aload_1                 
         7: aload_2                 
         8: iload_3                 
         9: aload         4                 
        11: aload         5                 
        13: aload         6                 
        15: lload         7                 
        17: aload         9                 
        19: invokestatic  #147                // Method storeIntoMemorySegmentMaskedScopedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
        22: goto          33                
        25: astore        10                
        27: aload         10                
        29: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        32: athrow                  
        33: return                  
      Exception table:
          from       to target type
             0       22    25  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 460: 0
        line 461: 2
        line 460: 19
        line 468: 22
        line 466: 25
        line 467: 27
        line 469: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          27        6    10  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       34     0  vmClass Ljava/lang/Class;
           0       34     1  maskClass Ljava/lang/Class;
           0       34     2  e      Ljava/lang/Class;
           0       34     3  length I
           0       34     4  v      Ljdk/internal/vm/vector/VectorSupport$Vector;
           0       34     5  m      Ljdk/internal/vm/vector/VectorSupport$VectorMask;
           0       34     6  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       34     7  offset J
           0       34     9  defaultImpl Ljdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       34     0  vmClass   Ljava/lang/Class<+TV;>;
             0       34     1  maskClass   Ljava/lang/Class<TM;>;
             0       34     2  e      Ljava/lang/Class<TE;>;
             0       34     4  v      TV;
             0       34     5  m      TM;
             0       34     9  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;
      StackMapTable: number_of_entries = 2
        frame_type = 89 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    Signature: #1375                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ITV;TM;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;)V
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private static <V extends jdk.internal.vm.vector.VectorSupport$Vector<E>, E extends java.lang.Object, M extends jdk.internal.vm.vector.VectorSupport$VectorMask<E>> void storeIntoMemorySegmentMaskedScopedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Class<? extends V>, java.lang.Class<M>, java.lang.Class<E>, int, V, M, jdk.internal.foreign.AbstractMemorySegmentImpl, long, jdk.internal.vm.vector.VectorSupport$StoreVectorMaskedOperation<jdk.internal.foreign.AbstractMemorySegmentImpl, V, M>);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=14, locals=12, args_size=10
         0: aload_0                 
         1: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         4: aload_1                 
         5: aload_2                 
         6: aload_3                 
         7: iload         4                 
         9: aload         7                 
        11: invokevirtual #116                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetBase:()Ljava/lang/Object;
        14: aload         7                 
        16: invokevirtual #120                // Method jdk/internal/foreign/AbstractMemorySegmentImpl.unsafeGetOffset:()J
        19: lload         8                 
        21: ladd                    
        22: iconst_1                
        23: aload         5                 
        25: aload         6                 
        27: aload         7                 
        29: lload         8                 
        31: aload         10                
        33: invokestatic  #151                // Method jdk/internal/vm/vector/VectorSupport.storeMasked:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;ILjava/lang/Object;JZLjdk/internal/vm/vector/VectorSupport$Vector;Ljdk/internal/vm/vector/VectorSupport$VectorMask;Ljava/lang/Object;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;)V
        36: aload_0                 
        37: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        40: goto          52                
        43: astore        11                
        45: aload_0                 
        46: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        49: aload         11                
        51: athrow                  
        52: return                  
      Exception table:
          from       to target type
             0       36    43  any
            43       45    43  any
      LineNumberTable:
        line 481: 0
        line 483: 4
        line 484: 11
        line 483: 33
        line 489: 36
        line 490: 40
        line 489: 43
        line 490: 49
        line 491: 52
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       53     0  session Ljdk/internal/foreign/MemorySessionImpl;
           0       53     1  vmClass Ljava/lang/Class;
           0       53     2  maskClass Ljava/lang/Class;
           0       53     3  e      Ljava/lang/Class;
           0       53     4  length I
           0       53     5  v      Ljdk/internal/vm/vector/VectorSupport$Vector;
           0       53     6  m      Ljdk/internal/vm/vector/VectorSupport$VectorMask;
           0       53     7  msp    Ljdk/internal/foreign/AbstractMemorySegmentImpl;
           0       53     8  offset J
           0       53    10  defaultImpl Ljdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0       53     1  vmClass   Ljava/lang/Class<+TV;>;
             0       53     2  maskClass   Ljava/lang/Class<TM;>;
             0       53     3  e      Ljava/lang/Class<TE;>;
             0       53     5  v      TV;
             0       53     6  m      TM;
             0       53    10  defaultImpl   Ljdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;
      StackMapTable: number_of_entries = 2
        frame_type = 107 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    Signature: #1376                       // <V:Ljdk/internal/vm/vector/VectorSupport$Vector<TE;>;E:Ljava/lang/Object;M:Ljdk/internal/vm/vector/VectorSupport$VectorMask<TE;>;>(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Class<+TV;>;Ljava/lang/Class<TM;>;Ljava/lang/Class<TE;>;ITV;TM;Ljdk/internal/foreign/AbstractMemorySegmentImpl;JLjdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation<Ljdk/internal/foreign/AbstractMemorySegmentImpl;TV;TM;>;)V
    RuntimeVisibleAnnotations:
      0: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
      1: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  public byte getByte(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #155                // Method getByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 501: 0
        line 502: 8
        line 503: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getByteInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #159                // Method jdk/internal/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 510: 0
        line 511: 4
        line 513: 8
        line 515: 18
        line 513: 22
        line 515: 25
        line 516: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putByte(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #163                // Method putByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 522: 0
        line 525: 9
        line 523: 12
        line 524: 14
        line 526: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putByteInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #167                // Method jdk/internal/misc/Unsafe.putByte:(Ljava/lang/Object;JB)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 531: 0
        line 532: 4
        line 534: 8
        line 536: 18
        line 537: 22
        line 536: 25
        line 537: 31
        line 538: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  B
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getByteVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #171                // Method getByteVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 544: 0
        line 545: 8
        line 546: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getByteVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #174                // Method jdk/internal/misc/Unsafe.getByteVolatile:(Ljava/lang/Object;J)B
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 553: 0
        line 554: 4
        line 556: 8
        line 558: 18
        line 556: 22
        line 558: 25
        line 559: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putByteVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #177                // Method putByteVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 565: 0
        line 568: 9
        line 566: 12
        line 567: 14
        line 569: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putByteVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #180                // Method jdk/internal/misc/Unsafe.putByteVolatile:(Ljava/lang/Object;JB)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 574: 0
        line 575: 4
        line 577: 8
        line 579: 18
        line 580: 22
        line 579: 25
        line 580: 31
        line 581: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  B
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getByteAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #183                // Method getByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 586: 0
        line 587: 8
        line 588: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getByteAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #186                // Method jdk/internal/misc/Unsafe.getByteAcquire:(Ljava/lang/Object;J)B
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 595: 0
        line 596: 4
        line 598: 8
        line 600: 18
        line 598: 22
        line 600: 25
        line 601: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putByteRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #189                // Method putByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 607: 0
        line 610: 9
        line 608: 12
        line 609: 14
        line 611: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putByteReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #192                // Method jdk/internal/misc/Unsafe.putByteRelease:(Ljava/lang/Object;JB)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 616: 0
        line 617: 4
        line 619: 8
        line 621: 18
        line 622: 22
        line 621: 25
        line 622: 31
        line 623: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  B
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getByteOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #195                // Method getByteOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 628: 0
        line 629: 8
        line 630: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getByteOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #198                // Method jdk/internal/misc/Unsafe.getByteOpaque:(Ljava/lang/Object;J)B
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 637: 0
        line 638: 4
        line 640: 8
        line 642: 18
        line 640: 22
        line 642: 25
        line 643: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putByteOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #201                // Method putByteOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 648: 0
        line 651: 9
        line 649: 12
        line 650: 14
        line 652: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putByteOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #204                // Method jdk/internal/misc/Unsafe.putByteOpaque:(Ljava/lang/Object;JB)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 657: 0
        line 658: 4
        line 660: 8
        line 662: 18
        line 663: 22
        line 662: 25
        line 663: 31
        line 664: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  B
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndAddByte(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #207                // Method getAndAddByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 669: 0
        line 670: 10
        line 671: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndAddByteInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #211                // Method jdk/internal/misc/Unsafe.getAndAddByte:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 678: 0
        line 679: 4
        line 681: 8
        line 683: 20
        line 681: 24
        line 683: 27
        line 684: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndAddByteAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #215                // Method getAndAddByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 690: 0
        line 691: 10
        line 692: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndAddByteAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #218                // Method jdk/internal/misc/Unsafe.getAndAddByteAcquire:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 699: 0
        line 700: 4
        line 702: 8
        line 704: 20
        line 702: 24
        line 704: 27
        line 705: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndAddByteRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #221                // Method getAndAddByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 711: 0
        line 712: 10
        line 713: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndAddByteReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #224                // Method jdk/internal/misc/Unsafe.getAndAddByteRelease:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 720: 0
        line 721: 4
        line 723: 8
        line 725: 20
        line 723: 24
        line 725: 27
        line 726: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseOrByte(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #227                // Method getAndBitwiseOrByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 732: 0
        line 733: 10
        line 734: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseOrByteInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #230                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrByte:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 741: 0
        line 742: 4
        line 744: 8
        line 746: 20
        line 744: 24
        line 746: 27
        line 747: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseOrByteAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #233                // Method getAndBitwiseOrByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 753: 0
        line 754: 10
        line 755: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseOrByteAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #236                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrByteAcquire:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 762: 0
        line 763: 4
        line 765: 8
        line 767: 20
        line 765: 24
        line 767: 27
        line 768: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseOrByteRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #239                // Method getAndBitwiseOrByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 774: 0
        line 775: 10
        line 776: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseOrByteReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #242                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrByteRelease:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 783: 0
        line 784: 4
        line 786: 8
        line 788: 20
        line 786: 24
        line 788: 27
        line 789: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseAndByte(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #245                // Method getAndBitwiseAndByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 795: 0
        line 796: 10
        line 797: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseAndByteInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #248                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndByte:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 804: 0
        line 805: 4
        line 807: 8
        line 809: 20
        line 807: 24
        line 809: 27
        line 810: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseAndByteAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #251                // Method getAndBitwiseAndByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 816: 0
        line 817: 10
        line 818: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseAndByteAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #254                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndByteAcquire:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 825: 0
        line 826: 4
        line 828: 8
        line 830: 20
        line 828: 24
        line 830: 27
        line 831: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseAndByteRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #257                // Method getAndBitwiseAndByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 837: 0
        line 838: 10
        line 839: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseAndByteReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #260                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndByteRelease:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 846: 0
        line 847: 4
        line 849: 8
        line 851: 20
        line 849: 24
        line 851: 27
        line 852: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseXorByte(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #263                // Method getAndBitwiseXorByteInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 858: 0
        line 859: 10
        line 860: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseXorByteInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #266                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorByte:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 867: 0
        line 868: 4
        line 870: 8
        line 872: 20
        line 870: 24
        line 872: 27
        line 873: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseXorByteAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #269                // Method getAndBitwiseXorByteAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 879: 0
        line 880: 10
        line 881: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseXorByteAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #272                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorByteAcquire:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 888: 0
        line 889: 4
        line 891: 8
        line 893: 20
        line 891: 24
        line 893: 27
        line 894: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public byte getAndBitwiseXorByteRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #275                // Method getAndBitwiseXorByteReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 900: 0
        line 901: 10
        line 902: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  B
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private byte getAndBitwiseXorByteReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JB)B
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #278                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorByteRelease:(Ljava/lang/Object;JB)B
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 909: 0
        line 910: 4
        line 912: 8
        line 914: 20
        line 912: 24
        line 914: 27
        line 915: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  B
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getShort(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #281                // Method getShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 920: 0
        line 921: 8
        line 922: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getShortInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #285                // Method jdk/internal/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 929: 0
        line 930: 4
        line 932: 8
        line 934: 18
        line 932: 22
        line 934: 25
        line 935: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putShort(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #289                // Method putShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 941: 0
        line 944: 9
        line 942: 12
        line 943: 14
        line 945: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putShortInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #293                // Method jdk/internal/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 950: 0
        line 951: 4
        line 953: 8
        line 955: 18
        line 956: 22
        line 955: 25
        line 956: 31
        line 957: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  S
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getShortUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #297                // Method getShortUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 962: 0
        line 963: 10
        line 964: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  be     Z
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getShortUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #301                // Method jdk/internal/misc/Unsafe.getShortUnaligned:(Ljava/lang/Object;JZ)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 971: 0
        line 972: 4
        line 974: 8
        line 976: 20
        line 974: 24
        line 976: 27
        line 977: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putShortUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JSZ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #305                // Method putShortUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JSZ)V
        11: goto          22                
        14: astore        7                 
        16: aload         7                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 983: 0
        line 986: 11
        line 984: 14
        line 985: 16
        line 987: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  base   Ljava/lang/Object;
           0       23     3  offset J
           0       23     5  value  S
           0       23     6  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putShortUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JSZ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #309                // Method jdk/internal/misc/Unsafe.putShortUnaligned:(Ljava/lang/Object;JSZ)V
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: goto          36                
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
        36: return                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 992: 0
        line 993: 4
        line 995: 8
        line 997: 20
        line 998: 24
        line 997: 27
        line 998: 33
        line 999: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       37     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       37     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       37     2  base   Ljava/lang/Object;
           0       37     3  offset J
           0       37     5  value  S
           0       37     6  be     Z
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getShortVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #313                // Method getShortVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1004: 0
        line 1005: 8
        line 1006: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getShortVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #316                // Method jdk/internal/misc/Unsafe.getShortVolatile:(Ljava/lang/Object;J)S
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1013: 0
        line 1014: 4
        line 1016: 8
        line 1018: 18
        line 1016: 22
        line 1018: 25
        line 1019: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putShortVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #319                // Method putShortVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1025: 0
        line 1028: 9
        line 1026: 12
        line 1027: 14
        line 1029: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putShortVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #322                // Method jdk/internal/misc/Unsafe.putShortVolatile:(Ljava/lang/Object;JS)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1034: 0
        line 1035: 4
        line 1037: 8
        line 1039: 18
        line 1040: 22
        line 1039: 25
        line 1040: 31
        line 1041: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  S
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getShortAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #325                // Method getShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1046: 0
        line 1047: 8
        line 1048: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getShortAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #328                // Method jdk/internal/misc/Unsafe.getShortAcquire:(Ljava/lang/Object;J)S
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1055: 0
        line 1056: 4
        line 1058: 8
        line 1060: 18
        line 1058: 22
        line 1060: 25
        line 1061: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putShortRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #331                // Method putShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1067: 0
        line 1070: 9
        line 1068: 12
        line 1069: 14
        line 1071: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putShortReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #334                // Method jdk/internal/misc/Unsafe.putShortRelease:(Ljava/lang/Object;JS)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1076: 0
        line 1077: 4
        line 1079: 8
        line 1081: 18
        line 1082: 22
        line 1081: 25
        line 1082: 31
        line 1083: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  S
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getShortOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #337                // Method getShortOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1088: 0
        line 1089: 8
        line 1090: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getShortOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #340                // Method jdk/internal/misc/Unsafe.getShortOpaque:(Ljava/lang/Object;J)S
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1097: 0
        line 1098: 4
        line 1100: 8
        line 1102: 18
        line 1100: 22
        line 1102: 25
        line 1103: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putShortOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #343                // Method putShortOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1108: 0
        line 1111: 9
        line 1109: 12
        line 1110: 14
        line 1112: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putShortOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #346                // Method jdk/internal/misc/Unsafe.putShortOpaque:(Ljava/lang/Object;JS)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1117: 0
        line 1118: 4
        line 1120: 8
        line 1122: 18
        line 1123: 22
        line 1122: 25
        line 1123: 31
        line 1124: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  S
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndAddShort(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #349                // Method getAndAddShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1129: 0
        line 1130: 10
        line 1131: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndAddShortInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #353                // Method jdk/internal/misc/Unsafe.getAndAddShort:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1138: 0
        line 1139: 4
        line 1141: 8
        line 1143: 20
        line 1141: 24
        line 1143: 27
        line 1144: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndAddShortAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #357                // Method getAndAddShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1150: 0
        line 1151: 10
        line 1152: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndAddShortAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #360                // Method jdk/internal/misc/Unsafe.getAndAddShortAcquire:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1159: 0
        line 1160: 4
        line 1162: 8
        line 1164: 20
        line 1162: 24
        line 1164: 27
        line 1165: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndAddShortRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #363                // Method getAndAddShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1171: 0
        line 1172: 10
        line 1173: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndAddShortReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #366                // Method jdk/internal/misc/Unsafe.getAndAddShortRelease:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1180: 0
        line 1181: 4
        line 1183: 8
        line 1185: 20
        line 1183: 24
        line 1185: 27
        line 1186: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseOrShort(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #369                // Method getAndBitwiseOrShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1192: 0
        line 1193: 10
        line 1194: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseOrShortInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #372                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrShort:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1201: 0
        line 1202: 4
        line 1204: 8
        line 1206: 20
        line 1204: 24
        line 1206: 27
        line 1207: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseOrShortAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #375                // Method getAndBitwiseOrShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1213: 0
        line 1214: 10
        line 1215: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseOrShortAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #378                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrShortAcquire:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1222: 0
        line 1223: 4
        line 1225: 8
        line 1227: 20
        line 1225: 24
        line 1227: 27
        line 1228: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseOrShortRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #381                // Method getAndBitwiseOrShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1234: 0
        line 1235: 10
        line 1236: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseOrShortReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #384                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrShortRelease:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1243: 0
        line 1244: 4
        line 1246: 8
        line 1248: 20
        line 1246: 24
        line 1248: 27
        line 1249: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseAndShort(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #387                // Method getAndBitwiseAndShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1255: 0
        line 1256: 10
        line 1257: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseAndShortInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #390                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndShort:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1264: 0
        line 1265: 4
        line 1267: 8
        line 1269: 20
        line 1267: 24
        line 1269: 27
        line 1270: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseAndShortAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #393                // Method getAndBitwiseAndShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1276: 0
        line 1277: 10
        line 1278: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseAndShortAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #396                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndShortAcquire:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1285: 0
        line 1286: 4
        line 1288: 8
        line 1290: 20
        line 1288: 24
        line 1290: 27
        line 1291: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseAndShortRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #399                // Method getAndBitwiseAndShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1297: 0
        line 1298: 10
        line 1299: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseAndShortReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #402                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndShortRelease:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1306: 0
        line 1307: 4
        line 1309: 8
        line 1311: 20
        line 1309: 24
        line 1311: 27
        line 1312: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseXorShort(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #405                // Method getAndBitwiseXorShortInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1318: 0
        line 1319: 10
        line 1320: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseXorShortInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #408                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorShort:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1327: 0
        line 1328: 4
        line 1330: 8
        line 1332: 20
        line 1330: 24
        line 1332: 27
        line 1333: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseXorShortAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #411                // Method getAndBitwiseXorShortAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1339: 0
        line 1340: 10
        line 1341: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseXorShortAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #414                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorShortAcquire:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1348: 0
        line 1349: 4
        line 1351: 8
        line 1353: 20
        line 1351: 24
        line 1353: 27
        line 1354: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public short getAndBitwiseXorShortRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #417                // Method getAndBitwiseXorShortReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1360: 0
        line 1361: 10
        line 1362: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  S
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private short getAndBitwiseXorShortReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, short);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JS)S
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #420                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorShortRelease:(Ljava/lang/Object;JS)S
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1369: 0
        line 1370: 4
        line 1372: 8
        line 1374: 20
        line 1372: 24
        line 1374: 27
        line 1375: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  S
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getChar(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #423                // Method getCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1380: 0
        line 1381: 8
        line 1382: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getCharInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #427                // Method jdk/internal/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1389: 0
        line 1390: 4
        line 1392: 8
        line 1394: 18
        line 1392: 22
        line 1394: 25
        line 1395: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putChar(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #431                // Method putCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1401: 0
        line 1404: 9
        line 1402: 12
        line 1403: 14
        line 1405: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putCharInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #435                // Method jdk/internal/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1410: 0
        line 1411: 4
        line 1413: 8
        line 1415: 18
        line 1416: 22
        line 1415: 25
        line 1416: 31
        line 1417: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  C
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getCharUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #439                // Method getCharUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1422: 0
        line 1423: 10
        line 1424: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  be     Z
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getCharUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #443                // Method jdk/internal/misc/Unsafe.getCharUnaligned:(Ljava/lang/Object;JZ)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1431: 0
        line 1432: 4
        line 1434: 8
        line 1436: 20
        line 1434: 24
        line 1436: 27
        line 1437: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putCharUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JCZ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #447                // Method putCharUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JCZ)V
        11: goto          22                
        14: astore        7                 
        16: aload         7                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1443: 0
        line 1446: 11
        line 1444: 14
        line 1445: 16
        line 1447: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  base   Ljava/lang/Object;
           0       23     3  offset J
           0       23     5  value  C
           0       23     6  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putCharUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JCZ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #451                // Method jdk/internal/misc/Unsafe.putCharUnaligned:(Ljava/lang/Object;JCZ)V
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: goto          36                
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
        36: return                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1452: 0
        line 1453: 4
        line 1455: 8
        line 1457: 20
        line 1458: 24
        line 1457: 27
        line 1458: 33
        line 1459: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       37     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       37     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       37     2  base   Ljava/lang/Object;
           0       37     3  offset J
           0       37     5  value  C
           0       37     6  be     Z
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getCharVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #455                // Method getCharVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1464: 0
        line 1465: 8
        line 1466: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getCharVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #458                // Method jdk/internal/misc/Unsafe.getCharVolatile:(Ljava/lang/Object;J)C
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1473: 0
        line 1474: 4
        line 1476: 8
        line 1478: 18
        line 1476: 22
        line 1478: 25
        line 1479: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putCharVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #461                // Method putCharVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1485: 0
        line 1488: 9
        line 1486: 12
        line 1487: 14
        line 1489: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putCharVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #464                // Method jdk/internal/misc/Unsafe.putCharVolatile:(Ljava/lang/Object;JC)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1494: 0
        line 1495: 4
        line 1497: 8
        line 1499: 18
        line 1500: 22
        line 1499: 25
        line 1500: 31
        line 1501: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  C
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getCharAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #467                // Method getCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1506: 0
        line 1507: 8
        line 1508: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getCharAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #470                // Method jdk/internal/misc/Unsafe.getCharAcquire:(Ljava/lang/Object;J)C
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1515: 0
        line 1516: 4
        line 1518: 8
        line 1520: 18
        line 1518: 22
        line 1520: 25
        line 1521: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putCharRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #473                // Method putCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1527: 0
        line 1530: 9
        line 1528: 12
        line 1529: 14
        line 1531: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putCharReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #476                // Method jdk/internal/misc/Unsafe.putCharRelease:(Ljava/lang/Object;JC)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1536: 0
        line 1537: 4
        line 1539: 8
        line 1541: 18
        line 1542: 22
        line 1541: 25
        line 1542: 31
        line 1543: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  C
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getCharOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #479                // Method getCharOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1548: 0
        line 1549: 8
        line 1550: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getCharOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #482                // Method jdk/internal/misc/Unsafe.getCharOpaque:(Ljava/lang/Object;J)C
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1557: 0
        line 1558: 4
        line 1560: 8
        line 1562: 18
        line 1560: 22
        line 1562: 25
        line 1563: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putCharOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #485                // Method putCharOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1568: 0
        line 1571: 9
        line 1569: 12
        line 1570: 14
        line 1572: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putCharOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #488                // Method jdk/internal/misc/Unsafe.putCharOpaque:(Ljava/lang/Object;JC)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1577: 0
        line 1578: 4
        line 1580: 8
        line 1582: 18
        line 1583: 22
        line 1582: 25
        line 1583: 31
        line 1584: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  C
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndAddChar(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #491                // Method getAndAddCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1589: 0
        line 1590: 10
        line 1591: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndAddCharInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #495                // Method jdk/internal/misc/Unsafe.getAndAddChar:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1598: 0
        line 1599: 4
        line 1601: 8
        line 1603: 20
        line 1601: 24
        line 1603: 27
        line 1604: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndAddCharAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #499                // Method getAndAddCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1610: 0
        line 1611: 10
        line 1612: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndAddCharAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #502                // Method jdk/internal/misc/Unsafe.getAndAddCharAcquire:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1619: 0
        line 1620: 4
        line 1622: 8
        line 1624: 20
        line 1622: 24
        line 1624: 27
        line 1625: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndAddCharRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #505                // Method getAndAddCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1631: 0
        line 1632: 10
        line 1633: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndAddCharReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #508                // Method jdk/internal/misc/Unsafe.getAndAddCharRelease:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1640: 0
        line 1641: 4
        line 1643: 8
        line 1645: 20
        line 1643: 24
        line 1645: 27
        line 1646: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseOrChar(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #511                // Method getAndBitwiseOrCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1652: 0
        line 1653: 10
        line 1654: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseOrCharInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #514                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrChar:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1661: 0
        line 1662: 4
        line 1664: 8
        line 1666: 20
        line 1664: 24
        line 1666: 27
        line 1667: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseOrCharAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #517                // Method getAndBitwiseOrCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1673: 0
        line 1674: 10
        line 1675: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseOrCharAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #520                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrCharAcquire:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1682: 0
        line 1683: 4
        line 1685: 8
        line 1687: 20
        line 1685: 24
        line 1687: 27
        line 1688: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseOrCharRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #523                // Method getAndBitwiseOrCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1694: 0
        line 1695: 10
        line 1696: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseOrCharReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #526                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrCharRelease:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1703: 0
        line 1704: 4
        line 1706: 8
        line 1708: 20
        line 1706: 24
        line 1708: 27
        line 1709: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseAndChar(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #529                // Method getAndBitwiseAndCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1715: 0
        line 1716: 10
        line 1717: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseAndCharInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #532                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndChar:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1724: 0
        line 1725: 4
        line 1727: 8
        line 1729: 20
        line 1727: 24
        line 1729: 27
        line 1730: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseAndCharAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #535                // Method getAndBitwiseAndCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1736: 0
        line 1737: 10
        line 1738: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseAndCharAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #538                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndCharAcquire:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1745: 0
        line 1746: 4
        line 1748: 8
        line 1750: 20
        line 1748: 24
        line 1750: 27
        line 1751: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseAndCharRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #541                // Method getAndBitwiseAndCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1757: 0
        line 1758: 10
        line 1759: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseAndCharReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #544                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndCharRelease:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1766: 0
        line 1767: 4
        line 1769: 8
        line 1771: 20
        line 1769: 24
        line 1771: 27
        line 1772: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseXorChar(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #547                // Method getAndBitwiseXorCharInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1778: 0
        line 1779: 10
        line 1780: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseXorCharInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #550                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorChar:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1787: 0
        line 1788: 4
        line 1790: 8
        line 1792: 20
        line 1790: 24
        line 1792: 27
        line 1793: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseXorCharAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #553                // Method getAndBitwiseXorCharAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1799: 0
        line 1800: 10
        line 1801: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseXorCharAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #556                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorCharAcquire:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1808: 0
        line 1809: 4
        line 1811: 8
        line 1813: 20
        line 1811: 24
        line 1813: 27
        line 1814: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public char getAndBitwiseXorCharRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #559                // Method getAndBitwiseXorCharReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1820: 0
        line 1821: 10
        line 1822: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  C
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private char getAndBitwiseXorCharReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, char);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JC)C
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #562                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorCharRelease:(Ljava/lang/Object;JC)C
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1829: 0
        line 1830: 4
        line 1832: 8
        line 1834: 20
        line 1832: 24
        line 1834: 27
        line 1835: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  C
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #565                // Method getIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1840: 0
        line 1841: 8
        line 1842: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #569                // Method jdk/internal/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1849: 0
        line 1850: 4
        line 1852: 8
        line 1854: 18
        line 1852: 22
        line 1854: 25
        line 1855: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #573                // Method putIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1861: 0
        line 1864: 9
        line 1862: 12
        line 1863: 14
        line 1865: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #577                // Method jdk/internal/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1870: 0
        line 1871: 4
        line 1873: 8
        line 1875: 18
        line 1876: 22
        line 1875: 25
        line 1876: 31
        line 1877: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  I
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getIntUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #581                // Method getIntUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1882: 0
        line 1883: 10
        line 1884: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  be     Z
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getIntUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #585                // Method jdk/internal/misc/Unsafe.getIntUnaligned:(Ljava/lang/Object;JZ)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1891: 0
        line 1892: 4
        line 1894: 8
        line 1896: 20
        line 1894: 24
        line 1896: 27
        line 1897: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putIntUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JIZ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #589                // Method putIntUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JIZ)V
        11: goto          22                
        14: astore        7                 
        16: aload         7                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1903: 0
        line 1906: 11
        line 1904: 14
        line 1905: 16
        line 1907: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  base   Ljava/lang/Object;
           0       23     3  offset J
           0       23     5  value  I
           0       23     6  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putIntUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JIZ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #593                // Method jdk/internal/misc/Unsafe.putIntUnaligned:(Ljava/lang/Object;JIZ)V
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: goto          36                
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
        36: return                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 1912: 0
        line 1913: 4
        line 1915: 8
        line 1917: 20
        line 1918: 24
        line 1917: 27
        line 1918: 33
        line 1919: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       37     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       37     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       37     2  base   Ljava/lang/Object;
           0       37     3  offset J
           0       37     5  value  I
           0       37     6  be     Z
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getIntVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #597                // Method getIntVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1924: 0
        line 1925: 8
        line 1926: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getIntVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #600                // Method jdk/internal/misc/Unsafe.getIntVolatile:(Ljava/lang/Object;J)I
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1933: 0
        line 1934: 4
        line 1936: 8
        line 1938: 18
        line 1936: 22
        line 1938: 25
        line 1939: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putIntVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #603                // Method putIntVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1945: 0
        line 1948: 9
        line 1946: 12
        line 1947: 14
        line 1949: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putIntVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #606                // Method jdk/internal/misc/Unsafe.putIntVolatile:(Ljava/lang/Object;JI)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1954: 0
        line 1955: 4
        line 1957: 8
        line 1959: 18
        line 1960: 22
        line 1959: 25
        line 1960: 31
        line 1961: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  I
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #609                // Method getIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1966: 0
        line 1967: 8
        line 1968: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #612                // Method jdk/internal/misc/Unsafe.getIntAcquire:(Ljava/lang/Object;J)I
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1975: 0
        line 1976: 4
        line 1978: 8
        line 1980: 18
        line 1978: 22
        line 1980: 25
        line 1981: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #615                // Method putIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 1987: 0
        line 1990: 9
        line 1988: 12
        line 1989: 14
        line 1991: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #618                // Method jdk/internal/misc/Unsafe.putIntRelease:(Ljava/lang/Object;JI)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 1996: 0
        line 1997: 4
        line 1999: 8
        line 2001: 18
        line 2002: 22
        line 2001: 25
        line 2002: 31
        line 2003: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  I
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getIntOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #621                // Method getIntOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
         7: ireturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2008: 0
        line 2009: 8
        line 2010: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getIntOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #624                // Method jdk/internal/misc/Unsafe.getIntOpaque:(Ljava/lang/Object;J)I
        16: istore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: iload         5                 
        24: ireturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2017: 0
        line 2018: 4
        line 2020: 8
        line 2022: 18
        line 2020: 22
        line 2022: 25
        line 2023: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putIntOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #627                // Method putIntOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2028: 0
        line 2031: 9
        line 2029: 12
        line 2030: 14
        line 2032: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putIntOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #630                // Method jdk/internal/misc/Unsafe.putIntOpaque:(Ljava/lang/Object;JI)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2037: 0
        line 2038: 4
        line 2040: 8
        line 2042: 18
        line 2043: 22
        line 2042: 25
        line 2043: 31
        line 2044: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  I
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean compareAndSetInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #633                // Method compareAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2048: 0
        line 2049: 12
        line 2050: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean compareAndSetIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #637                // Method jdk/internal/misc/Unsafe.compareAndSetInt:(Ljava/lang/Object;JII)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2057: 0
        line 2058: 4
        line 2060: 8
        line 2062: 22
        line 2060: 26
        line 2062: 29
        line 2063: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int compareAndExchangeInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #641                // Method compareAndExchangeIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2069: 0
        line 2070: 12
        line 2071: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int compareAndExchangeIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #645                // Method jdk/internal/misc/Unsafe.compareAndExchangeInt:(Ljava/lang/Object;JII)I
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2078: 0
        line 2079: 4
        line 2081: 8
        line 2083: 22
        line 2081: 26
        line 2083: 29
        line 2084: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int compareAndExchangeIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #649                // Method compareAndExchangeIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2090: 0
        line 2091: 12
        line 2092: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int compareAndExchangeIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #652                // Method jdk/internal/misc/Unsafe.compareAndExchangeIntAcquire:(Ljava/lang/Object;JII)I
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2099: 0
        line 2100: 4
        line 2102: 8
        line 2104: 22
        line 2102: 26
        line 2104: 29
        line 2105: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int compareAndExchangeIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #655                // Method compareAndExchangeIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2111: 0
        line 2112: 12
        line 2113: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int compareAndExchangeIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #658                // Method jdk/internal/misc/Unsafe.compareAndExchangeIntRelease:(Ljava/lang/Object;JII)I
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2120: 0
        line 2121: 4
        line 2123: 8
        line 2125: 22
        line 2123: 26
        line 2125: 29
        line 2126: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetIntPlain(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #661                // Method weakCompareAndSetIntPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2132: 0
        line 2133: 12
        line 2134: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetIntPlainInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #664                // Method jdk/internal/misc/Unsafe.weakCompareAndSetIntPlain:(Ljava/lang/Object;JII)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2141: 0
        line 2142: 4
        line 2144: 8
        line 2146: 22
        line 2144: 26
        line 2146: 29
        line 2147: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #667                // Method weakCompareAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2153: 0
        line 2154: 12
        line 2155: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #670                // Method jdk/internal/misc/Unsafe.weakCompareAndSetInt:(Ljava/lang/Object;JII)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2162: 0
        line 2163: 4
        line 2165: 8
        line 2167: 22
        line 2165: 26
        line 2167: 29
        line 2168: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #673                // Method weakCompareAndSetIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2174: 0
        line 2175: 12
        line 2176: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #676                // Method jdk/internal/misc/Unsafe.weakCompareAndSetIntAcquire:(Ljava/lang/Object;JII)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2183: 0
        line 2184: 4
        line 2186: 8
        line 2188: 22
        line 2186: 26
        line 2188: 29
        line 2189: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: iload         6                 
         8: invokevirtual #679                // Method weakCompareAndSetIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2195: 0
        line 2196: 12
        line 2197: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected I
           0       20     6  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JII)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: iload         6                 
        17: invokevirtual #682                // Method jdk/internal/misc/Unsafe.weakCompareAndSetIntRelease:(Ljava/lang/Object;JII)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2204: 0
        line 2205: 4
        line 2207: 8
        line 2209: 22
        line 2207: 26
        line 2209: 29
        line 2210: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected I
           0       38     6  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndSetInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #685                // Method getAndSetIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2216: 0
        line 2217: 10
        line 2218: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndSetIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #689                // Method jdk/internal/misc/Unsafe.getAndSetInt:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2225: 0
        line 2226: 4
        line 2228: 8
        line 2230: 20
        line 2228: 24
        line 2230: 27
        line 2231: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndSetIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #693                // Method getAndSetIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2237: 0
        line 2238: 10
        line 2239: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndSetIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #696                // Method jdk/internal/misc/Unsafe.getAndSetIntAcquire:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2246: 0
        line 2247: 4
        line 2249: 8
        line 2251: 20
        line 2249: 24
        line 2251: 27
        line 2252: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndSetIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #699                // Method getAndSetIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2258: 0
        line 2259: 10
        line 2260: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndSetIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #702                // Method jdk/internal/misc/Unsafe.getAndSetIntRelease:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2267: 0
        line 2268: 4
        line 2270: 8
        line 2272: 20
        line 2270: 24
        line 2272: 27
        line 2273: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndAddInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #705                // Method getAndAddIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2279: 0
        line 2280: 10
        line 2281: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndAddIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #708                // Method jdk/internal/misc/Unsafe.getAndAddInt:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2288: 0
        line 2289: 4
        line 2291: 8
        line 2293: 20
        line 2291: 24
        line 2293: 27
        line 2294: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndAddIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #711                // Method getAndAddIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2300: 0
        line 2301: 10
        line 2302: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndAddIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #714                // Method jdk/internal/misc/Unsafe.getAndAddIntAcquire:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2309: 0
        line 2310: 4
        line 2312: 8
        line 2314: 20
        line 2312: 24
        line 2314: 27
        line 2315: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndAddIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #717                // Method getAndAddIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2321: 0
        line 2322: 10
        line 2323: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndAddIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #720                // Method jdk/internal/misc/Unsafe.getAndAddIntRelease:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2330: 0
        line 2331: 4
        line 2333: 8
        line 2335: 20
        line 2333: 24
        line 2335: 27
        line 2336: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseOrInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #723                // Method getAndBitwiseOrIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2342: 0
        line 2343: 10
        line 2344: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseOrIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #726                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrInt:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2351: 0
        line 2352: 4
        line 2354: 8
        line 2356: 20
        line 2354: 24
        line 2356: 27
        line 2357: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseOrIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #729                // Method getAndBitwiseOrIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2363: 0
        line 2364: 10
        line 2365: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseOrIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #732                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrIntAcquire:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2372: 0
        line 2373: 4
        line 2375: 8
        line 2377: 20
        line 2375: 24
        line 2377: 27
        line 2378: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseOrIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #735                // Method getAndBitwiseOrIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2384: 0
        line 2385: 10
        line 2386: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseOrIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #738                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrIntRelease:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2393: 0
        line 2394: 4
        line 2396: 8
        line 2398: 20
        line 2396: 24
        line 2398: 27
        line 2399: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseAndInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #741                // Method getAndBitwiseAndIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2405: 0
        line 2406: 10
        line 2407: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseAndIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #744                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndInt:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2414: 0
        line 2415: 4
        line 2417: 8
        line 2419: 20
        line 2417: 24
        line 2419: 27
        line 2420: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseAndIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #747                // Method getAndBitwiseAndIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2426: 0
        line 2427: 10
        line 2428: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseAndIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #750                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndIntAcquire:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2435: 0
        line 2436: 4
        line 2438: 8
        line 2440: 20
        line 2438: 24
        line 2440: 27
        line 2441: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseAndIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #753                // Method getAndBitwiseAndIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2447: 0
        line 2448: 10
        line 2449: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseAndIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #756                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndIntRelease:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2456: 0
        line 2457: 4
        line 2459: 8
        line 2461: 20
        line 2459: 24
        line 2461: 27
        line 2462: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseXorInt(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #759                // Method getAndBitwiseXorIntInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2468: 0
        line 2469: 10
        line 2470: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseXorIntInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #762                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorInt:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2477: 0
        line 2478: 4
        line 2480: 8
        line 2482: 20
        line 2480: 24
        line 2482: 27
        line 2483: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseXorIntAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #765                // Method getAndBitwiseXorIntAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2489: 0
        line 2490: 10
        line 2491: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseXorIntAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #768                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorIntAcquire:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2498: 0
        line 2499: 4
        line 2501: 8
        line 2503: 20
        line 2501: 24
        line 2503: 27
        line 2504: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public int getAndBitwiseXorIntRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #771                // Method getAndBitwiseXorIntReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
         9: ireturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2510: 0
        line 2511: 10
        line 2512: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  I
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private int getAndBitwiseXorIntReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, int);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JI)I
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #774                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorIntRelease:(Ljava/lang/Object;JI)I
        18: istore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: iload         6                 
        26: ireturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2519: 0
        line 2520: 4
        line 2522: 8
        line 2524: 20
        line 2522: 24
        line 2524: 27
        line 2525: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #777                // Method getLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
         7: lreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2530: 0
        line 2531: 8
        line 2532: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #781                // Method jdk/internal/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
        16: lstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: lload         5                 
        24: lreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2539: 0
        line 2540: 4
        line 2542: 8
        line 2544: 18
        line 2542: 22
        line 2544: 25
        line 2545: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #785                // Method putLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2551: 0
        line 2554: 9
        line 2552: 12
        line 2553: 14
        line 2555: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #789                // Method jdk/internal/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2560: 0
        line 2561: 4
        line 2563: 8
        line 2565: 18
        line 2566: 22
        line 2565: 25
        line 2566: 31
        line 2567: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getLongUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: iload         5                 
         6: invokevirtual #793                // Method getLongUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)J
         9: lreturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2572: 0
        line 2573: 10
        line 2574: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  be     Z
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getLongUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JZ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=9, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: iload         5                 
        15: invokevirtual #797                // Method jdk/internal/misc/Unsafe.getLongUnaligned:(Ljava/lang/Object;JZ)J
        18: lstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         6                 
        26: lreturn                 
        27: astore        8                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         8                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2581: 0
        line 2582: 4
        line 2584: 8
        line 2586: 20
        line 2584: 24
        line 2586: 27
        line 2587: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putLongUnaligned(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJZ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=8, locals=9, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: iload         7                 
         8: invokevirtual #801                // Method putLongUnalignedInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJZ)V
        11: goto          22                
        14: astore        8                 
        16: aload         8                 
        18: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        21: athrow                  
        22: return                  
      Exception table:
          from       to target type
             0       11    14  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2593: 0
        line 2596: 11
        line 2594: 14
        line 2595: 16
        line 2597: 22
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          16        6     8  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       23     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       23     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       23     2  base   Ljava/lang/Object;
           0       23     3  offset J
           0       23     5  value  J
           0       23     7  be     Z
      StackMapTable: number_of_entries = 2
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putLongUnalignedInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, boolean);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJZ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=7, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: iload         7                 
        17: invokevirtual #805                // Method jdk/internal/misc/Unsafe.putLongUnaligned:(Ljava/lang/Object;JJZ)V
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: goto          36                
        27: astore        8                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         8                 
        35: athrow                  
        36: return                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2602: 0
        line 2603: 4
        line 2605: 8
        line 2607: 20
        line 2608: 24
        line 2607: 27
        line 2608: 33
        line 2609: 36
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       37     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       37     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       37     2  base   Ljava/lang/Object;
           0       37     3  offset J
           0       37     5  value  J
           0       37     7  be     Z
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getLongVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #809                // Method getLongVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
         7: lreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2614: 0
        line 2615: 8
        line 2616: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getLongVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #812                // Method jdk/internal/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
        16: lstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: lload         5                 
        24: lreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2623: 0
        line 2624: 4
        line 2626: 8
        line 2628: 18
        line 2626: 22
        line 2628: 25
        line 2629: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putLongVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #815                // Method putLongVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2635: 0
        line 2638: 9
        line 2636: 12
        line 2637: 14
        line 2639: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putLongVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #818                // Method jdk/internal/misc/Unsafe.putLongVolatile:(Ljava/lang/Object;JJ)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2644: 0
        line 2645: 4
        line 2647: 8
        line 2649: 18
        line 2650: 22
        line 2649: 25
        line 2650: 31
        line 2651: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #821                // Method getLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
         7: lreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2656: 0
        line 2657: 8
        line 2658: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #824                // Method jdk/internal/misc/Unsafe.getLongAcquire:(Ljava/lang/Object;J)J
        16: lstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: lload         5                 
        24: lreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2665: 0
        line 2666: 4
        line 2668: 8
        line 2670: 18
        line 2668: 22
        line 2670: 25
        line 2671: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #827                // Method putLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2677: 0
        line 2680: 9
        line 2678: 12
        line 2679: 14
        line 2681: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #830                // Method jdk/internal/misc/Unsafe.putLongRelease:(Ljava/lang/Object;JJ)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2686: 0
        line 2687: 4
        line 2689: 8
        line 2691: 18
        line 2692: 22
        line 2691: 25
        line 2692: 31
        line 2693: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getLongOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #833                // Method getLongOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
         7: lreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2698: 0
        line 2699: 8
        line 2700: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getLongOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #836                // Method jdk/internal/misc/Unsafe.getLongOpaque:(Ljava/lang/Object;J)J
        16: lstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: lload         5                 
        24: lreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2707: 0
        line 2708: 4
        line 2710: 8
        line 2712: 18
        line 2710: 22
        line 2712: 25
        line 2713: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putLongOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #839                // Method putLongOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2718: 0
        line 2721: 9
        line 2719: 12
        line 2720: 14
        line 2722: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putLongOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #842                // Method jdk/internal/misc/Unsafe.putLongOpaque:(Ljava/lang/Object;JJ)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 2727: 0
        line 2728: 4
        line 2730: 8
        line 2732: 18
        line 2733: 22
        line 2732: 25
        line 2733: 31
        line 2734: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean compareAndSetLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #845                // Method compareAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2738: 0
        line 2739: 12
        line 2740: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean compareAndSetLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #849                // Method jdk/internal/misc/Unsafe.compareAndSetLong:(Ljava/lang/Object;JJJ)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2747: 0
        line 2748: 4
        line 2750: 8
        line 2752: 22
        line 2750: 26
        line 2752: 29
        line 2753: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long compareAndExchangeLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #853                // Method compareAndExchangeLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
        11: lreturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2759: 0
        line 2760: 12
        line 2761: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long compareAndExchangeLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #857                // Method jdk/internal/misc/Unsafe.compareAndExchangeLong:(Ljava/lang/Object;JJJ)J
        20: lstore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: lload         9                 
        28: lreturn                 
        29: astore        11                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         11                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2768: 0
        line 2769: 4
        line 2771: 8
        line 2773: 22
        line 2771: 26
        line 2773: 29
        line 2774: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long compareAndExchangeLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #861                // Method compareAndExchangeLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
        11: lreturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2780: 0
        line 2781: 12
        line 2782: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long compareAndExchangeLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #864                // Method jdk/internal/misc/Unsafe.compareAndExchangeLongAcquire:(Ljava/lang/Object;JJJ)J
        20: lstore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: lload         9                 
        28: lreturn                 
        29: astore        11                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         11                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2789: 0
        line 2790: 4
        line 2792: 8
        line 2794: 22
        line 2792: 26
        line 2794: 29
        line 2795: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long compareAndExchangeLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #867                // Method compareAndExchangeLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
        11: lreturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2801: 0
        line 2802: 12
        line 2803: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long compareAndExchangeLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #870                // Method jdk/internal/misc/Unsafe.compareAndExchangeLongRelease:(Ljava/lang/Object;JJJ)J
        20: lstore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: lload         9                 
        28: lreturn                 
        29: astore        11                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         11                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2810: 0
        line 2811: 4
        line 2813: 8
        line 2815: 22
        line 2813: 26
        line 2815: 29
        line 2816: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetLongPlain(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #873                // Method weakCompareAndSetLongPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2822: 0
        line 2823: 12
        line 2824: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetLongPlainInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #876                // Method jdk/internal/misc/Unsafe.weakCompareAndSetLongPlain:(Ljava/lang/Object;JJJ)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2831: 0
        line 2832: 4
        line 2834: 8
        line 2836: 22
        line 2834: 26
        line 2836: 29
        line 2837: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #879                // Method weakCompareAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2843: 0
        line 2844: 12
        line 2845: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #882                // Method jdk/internal/misc/Unsafe.weakCompareAndSetLong:(Ljava/lang/Object;JJJ)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2852: 0
        line 2853: 4
        line 2855: 8
        line 2857: 22
        line 2855: 26
        line 2857: 29
        line 2858: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #885                // Method weakCompareAndSetLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2864: 0
        line 2865: 12
        line 2866: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #888                // Method jdk/internal/misc/Unsafe.weakCompareAndSetLongAcquire:(Ljava/lang/Object;JJJ)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2873: 0
        line 2874: 4
        line 2876: 8
        line 2878: 22
        line 2876: 26
        line 2878: 29
        line 2879: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: lload         7                 
         8: invokevirtual #891                // Method weakCompareAndSetLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2885: 0
        line 2886: 12
        line 2887: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected J
           0       20     7  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJJ)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: lload         7                 
        17: invokevirtual #894                // Method jdk/internal/misc/Unsafe.weakCompareAndSetLongRelease:(Ljava/lang/Object;JJJ)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 2894: 0
        line 2895: 4
        line 2897: 8
        line 2899: 22
        line 2897: 26
        line 2899: 29
        line 2900: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected J
           0       38     7  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndSetLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #897                // Method getAndSetLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2906: 0
        line 2907: 10
        line 2908: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndSetLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #901                // Method jdk/internal/misc/Unsafe.getAndSetLong:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2915: 0
        line 2916: 4
        line 2918: 8
        line 2920: 20
        line 2918: 24
        line 2920: 27
        line 2921: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndSetLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #905                // Method getAndSetLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2927: 0
        line 2928: 10
        line 2929: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndSetLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #908                // Method jdk/internal/misc/Unsafe.getAndSetLongAcquire:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2936: 0
        line 2937: 4
        line 2939: 8
        line 2941: 20
        line 2939: 24
        line 2941: 27
        line 2942: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndSetLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #911                // Method getAndSetLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2948: 0
        line 2949: 10
        line 2950: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndSetLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #914                // Method jdk/internal/misc/Unsafe.getAndSetLongRelease:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2957: 0
        line 2958: 4
        line 2960: 8
        line 2962: 20
        line 2960: 24
        line 2962: 27
        line 2963: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndAddLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #917                // Method getAndAddLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2969: 0
        line 2970: 10
        line 2971: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndAddLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #920                // Method jdk/internal/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2978: 0
        line 2979: 4
        line 2981: 8
        line 2983: 20
        line 2981: 24
        line 2983: 27
        line 2984: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndAddLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #923                // Method getAndAddLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 2990: 0
        line 2991: 10
        line 2992: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndAddLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #926                // Method jdk/internal/misc/Unsafe.getAndAddLongAcquire:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 2999: 0
        line 3000: 4
        line 3002: 8
        line 3004: 20
        line 3002: 24
        line 3004: 27
        line 3005: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndAddLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #929                // Method getAndAddLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3011: 0
        line 3012: 10
        line 3013: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndAddLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #932                // Method jdk/internal/misc/Unsafe.getAndAddLongRelease:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3020: 0
        line 3021: 4
        line 3023: 8
        line 3025: 20
        line 3023: 24
        line 3025: 27
        line 3026: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseOrLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #935                // Method getAndBitwiseOrLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3032: 0
        line 3033: 10
        line 3034: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseOrLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #938                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrLong:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3041: 0
        line 3042: 4
        line 3044: 8
        line 3046: 20
        line 3044: 24
        line 3046: 27
        line 3047: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseOrLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #941                // Method getAndBitwiseOrLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3053: 0
        line 3054: 10
        line 3055: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseOrLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #944                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrLongAcquire:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3062: 0
        line 3063: 4
        line 3065: 8
        line 3067: 20
        line 3065: 24
        line 3067: 27
        line 3068: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseOrLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #947                // Method getAndBitwiseOrLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3074: 0
        line 3075: 10
        line 3076: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseOrLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #950                // Method jdk/internal/misc/Unsafe.getAndBitwiseOrLongRelease:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3083: 0
        line 3084: 4
        line 3086: 8
        line 3088: 20
        line 3086: 24
        line 3088: 27
        line 3089: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseAndLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #953                // Method getAndBitwiseAndLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3095: 0
        line 3096: 10
        line 3097: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseAndLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #956                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndLong:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3104: 0
        line 3105: 4
        line 3107: 8
        line 3109: 20
        line 3107: 24
        line 3109: 27
        line 3110: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseAndLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #959                // Method getAndBitwiseAndLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3116: 0
        line 3117: 10
        line 3118: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseAndLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #962                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndLongAcquire:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3125: 0
        line 3126: 4
        line 3128: 8
        line 3130: 20
        line 3128: 24
        line 3130: 27
        line 3131: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseAndLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #965                // Method getAndBitwiseAndLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3137: 0
        line 3138: 10
        line 3139: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseAndLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #968                // Method jdk/internal/misc/Unsafe.getAndBitwiseAndLongRelease:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3146: 0
        line 3147: 4
        line 3149: 8
        line 3151: 20
        line 3149: 24
        line 3151: 27
        line 3152: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseXorLong(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #971                // Method getAndBitwiseXorLongInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3158: 0
        line 3159: 10
        line 3160: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseXorLongInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #974                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorLong:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3167: 0
        line 3168: 4
        line 3170: 8
        line 3172: 20
        line 3170: 24
        line 3172: 27
        line 3173: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseXorLongAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #977                // Method getAndBitwiseXorLongAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3179: 0
        line 3180: 10
        line 3181: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseXorLongAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #980                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorLongAcquire:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3188: 0
        line 3189: 4
        line 3191: 8
        line 3193: 20
        line 3191: 24
        line 3193: 27
        line 3194: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public long getAndBitwiseXorLongRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: lload         5                 
         6: invokevirtual #983                // Method getAndBitwiseXorLongReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
         9: lreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3200: 0
        line 3201: 10
        line 3202: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  J
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private long getAndBitwiseXorLongReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JJ)J
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: lload         5                 
        15: invokevirtual #986                // Method jdk/internal/misc/Unsafe.getAndBitwiseXorLongRelease:(Ljava/lang/Object;JJ)J
        18: lstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: lload         7                 
        26: lreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3209: 0
        line 3210: 4
        line 3212: 8
        line 3214: 20
        line 3212: 24
        line 3214: 27
        line 3215: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #989                // Method getFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
         7: freturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3220: 0
        line 3221: 8
        line 3222: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #993                // Method jdk/internal/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
        16: fstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: fload         5                 
        24: freturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3229: 0
        line 3230: 4
        line 3232: 8
        line 3234: 18
        line 3232: 22
        line 3234: 25
        line 3235: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #997                // Method putFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3241: 0
        line 3244: 9
        line 3242: 12
        line 3243: 14
        line 3245: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1001               // Method jdk/internal/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3250: 0
        line 3251: 4
        line 3253: 8
        line 3255: 18
        line 3256: 22
        line 3255: 25
        line 3256: 31
        line 3257: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  F
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getFloatVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1005               // Method getFloatVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
         7: freturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3263: 0
        line 3264: 8
        line 3265: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getFloatVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1008               // Method jdk/internal/misc/Unsafe.getFloatVolatile:(Ljava/lang/Object;J)F
        16: fstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: fload         5                 
        24: freturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3272: 0
        line 3273: 4
        line 3275: 8
        line 3277: 18
        line 3275: 22
        line 3277: 25
        line 3278: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putFloatVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1011               // Method putFloatVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3284: 0
        line 3287: 9
        line 3285: 12
        line 3286: 14
        line 3288: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putFloatVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1014               // Method jdk/internal/misc/Unsafe.putFloatVolatile:(Ljava/lang/Object;JF)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3293: 0
        line 3294: 4
        line 3296: 8
        line 3298: 18
        line 3299: 22
        line 3298: 25
        line 3299: 31
        line 3300: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  F
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getFloatAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1017               // Method getFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
         7: freturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3305: 0
        line 3306: 8
        line 3307: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getFloatAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1020               // Method jdk/internal/misc/Unsafe.getFloatAcquire:(Ljava/lang/Object;J)F
        16: fstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: fload         5                 
        24: freturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3314: 0
        line 3315: 4
        line 3317: 8
        line 3319: 18
        line 3317: 22
        line 3319: 25
        line 3320: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putFloatRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1023               // Method putFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3326: 0
        line 3329: 9
        line 3327: 12
        line 3328: 14
        line 3330: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putFloatReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1026               // Method jdk/internal/misc/Unsafe.putFloatRelease:(Ljava/lang/Object;JF)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3335: 0
        line 3336: 4
        line 3338: 8
        line 3340: 18
        line 3341: 22
        line 3340: 25
        line 3341: 31
        line 3342: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  F
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getFloatOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1029               // Method getFloatOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
         7: freturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3347: 0
        line 3348: 8
        line 3349: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getFloatOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=7, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1032               // Method jdk/internal/misc/Unsafe.getFloatOpaque:(Ljava/lang/Object;J)F
        16: fstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: fload         5                 
        24: freturn                 
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3356: 0
        line 3357: 4
        line 3359: 8
        line 3361: 18
        line 3359: 22
        line 3361: 25
        line 3362: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putFloatOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1035               // Method putFloatOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
         9: goto          20                
        12: astore        6                 
        14: aload         6                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3367: 0
        line 3370: 9
        line 3368: 12
        line 3369: 14
        line 3371: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putFloatOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=7, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1038               // Method jdk/internal/misc/Unsafe.putFloatOpaque:(Ljava/lang/Object;JF)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        6                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         6                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3376: 0
        line 3377: 4
        line 3379: 8
        line 3381: 18
        line 3382: 22
        line 3381: 25
        line 3382: 31
        line 3383: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  F
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean compareAndSetFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1041               // Method compareAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3387: 0
        line 3388: 12
        line 3389: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean compareAndSetFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1045               // Method jdk/internal/misc/Unsafe.compareAndSetFloat:(Ljava/lang/Object;JFF)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3396: 0
        line 3397: 4
        line 3399: 8
        line 3401: 22
        line 3399: 26
        line 3401: 29
        line 3402: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float compareAndExchangeFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1049               // Method compareAndExchangeFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
        11: freturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3408: 0
        line 3409: 12
        line 3410: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float compareAndExchangeFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1053               // Method jdk/internal/misc/Unsafe.compareAndExchangeFloat:(Ljava/lang/Object;JFF)F
        20: fstore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: fload         7                 
        28: freturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3417: 0
        line 3418: 4
        line 3420: 8
        line 3422: 22
        line 3420: 26
        line 3422: 29
        line 3423: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float compareAndExchangeFloatAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1057               // Method compareAndExchangeFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
        11: freturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3429: 0
        line 3430: 12
        line 3431: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float compareAndExchangeFloatAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1060               // Method jdk/internal/misc/Unsafe.compareAndExchangeFloatAcquire:(Ljava/lang/Object;JFF)F
        20: fstore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: fload         7                 
        28: freturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3438: 0
        line 3439: 4
        line 3441: 8
        line 3443: 22
        line 3441: 26
        line 3443: 29
        line 3444: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float compareAndExchangeFloatRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1063               // Method compareAndExchangeFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
        11: freturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3450: 0
        line 3451: 12
        line 3452: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float compareAndExchangeFloatReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1066               // Method jdk/internal/misc/Unsafe.compareAndExchangeFloatRelease:(Ljava/lang/Object;JFF)F
        20: fstore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: fload         7                 
        28: freturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3459: 0
        line 3460: 4
        line 3462: 8
        line 3464: 22
        line 3462: 26
        line 3464: 29
        line 3465: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetFloatPlain(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1069               // Method weakCompareAndSetFloatPlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3471: 0
        line 3472: 12
        line 3473: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetFloatPlainInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1072               // Method jdk/internal/misc/Unsafe.weakCompareAndSetFloatPlain:(Ljava/lang/Object;JFF)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3480: 0
        line 3481: 4
        line 3483: 8
        line 3485: 22
        line 3483: 26
        line 3485: 29
        line 3486: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1075               // Method weakCompareAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3492: 0
        line 3493: 12
        line 3494: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1078               // Method jdk/internal/misc/Unsafe.weakCompareAndSetFloat:(Ljava/lang/Object;JFF)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3501: 0
        line 3502: 4
        line 3504: 8
        line 3506: 22
        line 3504: 26
        line 3506: 29
        line 3507: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetFloatAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1081               // Method weakCompareAndSetFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3513: 0
        line 3514: 12
        line 3515: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetFloatAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1084               // Method jdk/internal/misc/Unsafe.weakCompareAndSetFloatAcquire:(Ljava/lang/Object;JFF)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3522: 0
        line 3523: 4
        line 3525: 8
        line 3527: 22
        line 3525: 26
        line 3527: 29
        line 3528: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetFloatRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: fload         6                 
         8: invokevirtual #1087               // Method weakCompareAndSetFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
        11: ireturn                 
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3534: 0
        line 3535: 12
        line 3536: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected F
           0       20     6  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetFloatReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JFF)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=9, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: fload         6                 
        17: invokevirtual #1090               // Method jdk/internal/misc/Unsafe.weakCompareAndSetFloatRelease:(Ljava/lang/Object;JFF)Z
        20: istore        7                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         7                 
        28: ireturn                 
        29: astore        8                 
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         8                 
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3543: 0
        line 3544: 4
        line 3546: 8
        line 3548: 22
        line 3546: 26
        line 3548: 29
        line 3549: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected F
           0       38     6  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getAndSetFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1093               // Method getAndSetFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
         9: freturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3555: 0
        line 3556: 10
        line 3557: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getAndSetFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1097               // Method jdk/internal/misc/Unsafe.getAndSetFloat:(Ljava/lang/Object;JF)F
        18: fstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: fload         6                 
        26: freturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3564: 0
        line 3565: 4
        line 3567: 8
        line 3569: 20
        line 3567: 24
        line 3569: 27
        line 3570: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getAndSetFloatAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1101               // Method getAndSetFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
         9: freturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3576: 0
        line 3577: 10
        line 3578: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getAndSetFloatAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1104               // Method jdk/internal/misc/Unsafe.getAndSetFloatAcquire:(Ljava/lang/Object;JF)F
        18: fstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: fload         6                 
        26: freturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3585: 0
        line 3586: 4
        line 3588: 8
        line 3590: 20
        line 3588: 24
        line 3590: 27
        line 3591: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getAndSetFloatRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1107               // Method getAndSetFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
         9: freturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3597: 0
        line 3598: 10
        line 3599: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  F
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getAndSetFloatReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1110               // Method jdk/internal/misc/Unsafe.getAndSetFloatRelease:(Ljava/lang/Object;JF)F
        18: fstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: fload         6                 
        26: freturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3606: 0
        line 3607: 4
        line 3609: 8
        line 3611: 20
        line 3609: 24
        line 3611: 27
        line 3612: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getAndAddFloat(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1113               // Method getAndAddFloatInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
         9: freturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3618: 0
        line 3619: 10
        line 3620: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  F
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getAndAddFloatInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1116               // Method jdk/internal/misc/Unsafe.getAndAddFloat:(Ljava/lang/Object;JF)F
        18: fstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: fload         6                 
        26: freturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3627: 0
        line 3628: 4
        line 3630: 8
        line 3632: 20
        line 3630: 24
        line 3632: 27
        line 3633: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getAndAddFloatAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1119               // Method getAndAddFloatAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
         9: freturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3639: 0
        line 3640: 10
        line 3641: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  F
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getAndAddFloatAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1122               // Method jdk/internal/misc/Unsafe.getAndAddFloatAcquire:(Ljava/lang/Object;JF)F
        18: fstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: fload         6                 
        26: freturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3648: 0
        line 3649: 4
        line 3651: 8
        line 3653: 20
        line 3651: 24
        line 3653: 27
        line 3654: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public float getAndAddFloatRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=6, locals=7, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: fload         5                 
         6: invokevirtual #1125               // Method getAndAddFloatReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
         9: freturn                 
        10: astore        6                 
        12: aload         6                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3660: 0
        line 3661: 10
        line 3662: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     6  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  F
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private float getAndAddFloatReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, float);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JF)F
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: fload         5                 
        15: invokevirtual #1128               // Method jdk/internal/misc/Unsafe.getAndAddFloatRelease:(Ljava/lang/Object;JF)F
        18: fstore        6                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: fload         6                 
        26: freturn                 
        27: astore        7                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         7                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 3669: 0
        line 3670: 4
        line 3672: 8
        line 3674: 20
        line 3672: 24
        line 3674: 27
        line 3675: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  F
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1131               // Method getDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
         7: dreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3681: 0
        line 3682: 8
        line 3683: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1135               // Method jdk/internal/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
        16: dstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: dload         5                 
        24: dreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3690: 0
        line 3691: 4
        line 3693: 8
        line 3695: 18
        line 3693: 22
        line 3695: 25
        line 3696: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1139               // Method putDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3702: 0
        line 3705: 9
        line 3703: 12
        line 3704: 14
        line 3706: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1143               // Method jdk/internal/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3711: 0
        line 3712: 4
        line 3714: 8
        line 3716: 18
        line 3717: 22
        line 3716: 25
        line 3717: 31
        line 3718: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  D
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getDoubleVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1147               // Method getDoubleVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
         7: dreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3724: 0
        line 3725: 8
        line 3726: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getDoubleVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1150               // Method jdk/internal/misc/Unsafe.getDoubleVolatile:(Ljava/lang/Object;J)D
        16: dstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: dload         5                 
        24: dreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3733: 0
        line 3734: 4
        line 3736: 8
        line 3738: 18
        line 3736: 22
        line 3738: 25
        line 3739: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putDoubleVolatile(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1153               // Method putDoubleVolatileInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3745: 0
        line 3748: 9
        line 3746: 12
        line 3747: 14
        line 3749: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putDoubleVolatileInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1156               // Method jdk/internal/misc/Unsafe.putDoubleVolatile:(Ljava/lang/Object;JD)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3754: 0
        line 3755: 4
        line 3757: 8
        line 3759: 18
        line 3760: 22
        line 3759: 25
        line 3760: 31
        line 3761: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  D
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getDoubleAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1159               // Method getDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
         7: dreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3766: 0
        line 3767: 8
        line 3768: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getDoubleAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1162               // Method jdk/internal/misc/Unsafe.getDoubleAcquire:(Ljava/lang/Object;J)D
        16: dstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: dload         5                 
        24: dreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3775: 0
        line 3776: 4
        line 3778: 8
        line 3780: 18
        line 3778: 22
        line 3780: 25
        line 3781: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putDoubleRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1165               // Method putDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3787: 0
        line 3790: 9
        line 3788: 12
        line 3789: 14
        line 3791: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putDoubleReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1168               // Method jdk/internal/misc/Unsafe.putDoubleRelease:(Ljava/lang/Object;JD)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3796: 0
        line 3797: 4
        line 3799: 8
        line 3801: 18
        line 3802: 22
        line 3801: 25
        line 3802: 31
        line 3803: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  D
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getDoubleOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=5, locals=6, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: invokevirtual #1171               // Method getDoubleOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
         7: dreturn                 
         8: astore        5                 
        10: aload         5                 
        12: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        15: athrow                  
      Exception table:
          from       to target type
             0        7     8  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3808: 0
        line 3809: 8
        line 3810: 10
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          10        6     5  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       16     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       16     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       16     2  base   Ljava/lang/Object;
           0       16     3  offset J
      StackMapTable: number_of_entries = 1
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getDoubleOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;J)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=4, locals=8, args_size=4
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: invokevirtual #1174               // Method jdk/internal/misc/Unsafe.getDoubleOpaque:(Ljava/lang/Object;J)D
        16: dstore        5                 
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: dload         5                 
        24: dreturn                 
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3817: 0
        line 3818: 4
        line 3820: 8
        line 3822: 18
        line 3820: 22
        line 3822: 25
        line 3823: 31
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       34     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       34     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       34     2  base   Ljava/lang/Object;
           0       34     3  offset J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public void putDoubleOpaque(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1177               // Method putDoubleOpaqueInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
         9: goto          20                
        12: astore        7                 
        14: aload         7                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
        20: return                  
      Exception table:
          from       to target type
             0        9    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3828: 0
        line 3831: 9
        line 3829: 12
        line 3830: 14
        line 3832: 20
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       21     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       21     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       21     2  base   Ljava/lang/Object;
           0       21     3  offset J
           0       21     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
        frame_type = 7 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private void putDoubleOpaqueInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=8, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1180               // Method jdk/internal/misc/Unsafe.putDoubleOpaque:(Ljava/lang/Object;JD)V
        18: aload_1                 
        19: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        22: goto          34                
        25: astore        7                 
        27: aload_1                 
        28: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        31: aload         7                 
        33: athrow                  
        34: return                  
      Exception table:
          from       to target type
             0       18    25  any
            25       27    25  any
      LineNumberTable:
        line 3837: 0
        line 3838: 4
        line 3840: 8
        line 3842: 18
        line 3843: 22
        line 3842: 25
        line 3843: 31
        line 3844: 34
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       35     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       35     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       35     2  base   Ljava/lang/Object;
           0       35     3  offset J
           0       35     5  value  D
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean compareAndSetDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1183               // Method compareAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3848: 0
        line 3849: 12
        line 3850: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean compareAndSetDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1187               // Method jdk/internal/misc/Unsafe.compareAndSetDouble:(Ljava/lang/Object;JDD)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3857: 0
        line 3858: 4
        line 3860: 8
        line 3862: 22
        line 3860: 26
        line 3862: 29
        line 3863: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double compareAndExchangeDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1191               // Method compareAndExchangeDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
        11: dreturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3869: 0
        line 3870: 12
        line 3871: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double compareAndExchangeDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1195               // Method jdk/internal/misc/Unsafe.compareAndExchangeDouble:(Ljava/lang/Object;JDD)D
        20: dstore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: dload         9                 
        28: dreturn                 
        29: astore        11                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         11                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3878: 0
        line 3879: 4
        line 3881: 8
        line 3883: 22
        line 3881: 26
        line 3883: 29
        line 3884: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double compareAndExchangeDoubleAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1199               // Method compareAndExchangeDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
        11: dreturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3890: 0
        line 3891: 12
        line 3892: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double compareAndExchangeDoubleAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1202               // Method jdk/internal/misc/Unsafe.compareAndExchangeDoubleAcquire:(Ljava/lang/Object;JDD)D
        20: dstore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: dload         9                 
        28: dreturn                 
        29: astore        11                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         11                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3899: 0
        line 3900: 4
        line 3902: 8
        line 3904: 22
        line 3902: 26
        line 3904: 29
        line 3905: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double compareAndExchangeDoubleRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1205               // Method compareAndExchangeDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
        11: dreturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3911: 0
        line 3912: 12
        line 3913: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double compareAndExchangeDoubleReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=12, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1208               // Method jdk/internal/misc/Unsafe.compareAndExchangeDoubleRelease:(Ljava/lang/Object;JDD)D
        20: dstore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: dload         9                 
        28: dreturn                 
        29: astore        11                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         11                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3920: 0
        line 3921: 4
        line 3923: 8
        line 3925: 22
        line 3923: 26
        line 3925: 29
        line 3926: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetDoublePlain(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1211               // Method weakCompareAndSetDoublePlainInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3932: 0
        line 3933: 12
        line 3934: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetDoublePlainInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1214               // Method jdk/internal/misc/Unsafe.weakCompareAndSetDoublePlain:(Ljava/lang/Object;JDD)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3941: 0
        line 3942: 4
        line 3944: 8
        line 3946: 22
        line 3944: 26
        line 3946: 29
        line 3947: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1217               // Method weakCompareAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3953: 0
        line 3954: 12
        line 3955: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1220               // Method jdk/internal/misc/Unsafe.weakCompareAndSetDouble:(Ljava/lang/Object;JDD)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3962: 0
        line 3963: 4
        line 3965: 8
        line 3967: 22
        line 3965: 26
        line 3967: 29
        line 3968: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetDoubleAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1223               // Method weakCompareAndSetDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3974: 0
        line 3975: 12
        line 3976: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetDoubleAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1226               // Method jdk/internal/misc/Unsafe.weakCompareAndSetDoubleAcquire:(Ljava/lang/Object;JDD)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 3983: 0
        line 3984: 4
        line 3986: 8
        line 3988: 22
        line 3986: 26
        line 3988: 29
        line 3989: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public boolean weakCompareAndSetDoubleRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=9, locals=10, args_size=6
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: dload         7                 
         8: invokevirtual #1229               // Method weakCompareAndSetDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
        11: ireturn                 
        12: astore        9                 
        14: aload         9                 
        16: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        19: athrow                  
      Exception table:
          from       to target type
             0       11    12  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 3995: 0
        line 3996: 12
        line 3997: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14        6     9  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       20     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       20     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       20     2  base   Ljava/lang/Object;
           0       20     3  offset J
           0       20     5  expected D
           0       20     7  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private boolean weakCompareAndSetDoubleReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JDD)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=8, locals=11, args_size=6
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: dload         7                 
        17: invokevirtual #1232               // Method jdk/internal/misc/Unsafe.weakCompareAndSetDoubleRelease:(Ljava/lang/Object;JDD)Z
        20: istore        9                 
        22: aload_1                 
        23: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        26: iload         9                 
        28: ireturn                 
        29: astore        10                
        31: aload_1                 
        32: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        35: aload         10                
        37: athrow                  
      Exception table:
          from       to target type
             0       22    29  any
            29       31    29  any
      LineNumberTable:
        line 4004: 0
        line 4005: 4
        line 4007: 8
        line 4009: 22
        line 4007: 26
        line 4009: 29
        line 4010: 35
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       38     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       38     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       38     2  base   Ljava/lang/Object;
           0       38     3  offset J
           0       38     5  expected D
           0       38     7  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getAndSetDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1235               // Method getAndSetDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
         9: dreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 4016: 0
        line 4017: 10
        line 4018: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getAndSetDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1239               // Method jdk/internal/misc/Unsafe.getAndSetDouble:(Ljava/lang/Object;JD)D
        18: dstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: dload         7                 
        26: dreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 4025: 0
        line 4026: 4
        line 4028: 8
        line 4030: 20
        line 4028: 24
        line 4030: 27
        line 4031: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getAndSetDoubleAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1243               // Method getAndSetDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
         9: dreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 4037: 0
        line 4038: 10
        line 4039: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getAndSetDoubleAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1246               // Method jdk/internal/misc/Unsafe.getAndSetDoubleAcquire:(Ljava/lang/Object;JD)D
        18: dstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: dload         7                 
        26: dreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 4046: 0
        line 4047: 4
        line 4049: 8
        line 4051: 20
        line 4049: 24
        line 4051: 27
        line 4052: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getAndSetDoubleRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1249               // Method getAndSetDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
         9: dreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 4058: 0
        line 4059: 10
        line 4060: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  value  D
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getAndSetDoubleReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1252               // Method jdk/internal/misc/Unsafe.getAndSetDoubleRelease:(Ljava/lang/Object;JD)D
        18: dstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: dload         7                 
        26: dreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 4067: 0
        line 4068: 4
        line 4070: 8
        line 4072: 20
        line 4070: 24
        line 4072: 27
        line 4073: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  value  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getAndAddDouble(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1255               // Method getAndAddDoubleInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
         9: dreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 4079: 0
        line 4080: 10
        line 4081: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  D
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getAndAddDoubleInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1258               // Method jdk/internal/misc/Unsafe.getAndAddDouble:(Ljava/lang/Object;JD)D
        18: dstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: dload         7                 
        26: dreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 4088: 0
        line 4089: 4
        line 4091: 8
        line 4093: 20
        line 4091: 24
        line 4093: 27
        line 4094: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getAndAddDoubleAcquire(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1261               // Method getAndAddDoubleAcquireInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
         9: dreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 4100: 0
        line 4101: 10
        line 4102: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  D
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getAndAddDoubleAcquireInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1264               // Method jdk/internal/misc/Unsafe.getAndAddDoubleAcquire:(Ljava/lang/Object;JD)D
        18: dstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: dload         7                 
        26: dreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 4109: 0
        line 4110: 4
        line 4112: 8
        line 4114: 20
        line 4112: 24
        line 4114: 27
        line 4115: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  public double getAndAddDoubleRelease(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=7, locals=8, args_size=5
         0: aload_0                 
         1: aload_1                 
         2: aload_2                 
         3: lload_3                 
         4: dload         5                 
         6: invokevirtual #1267               // Method getAndAddDoubleReleaseInternal:(Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
         9: dreturn                 
        10: astore        7                 
        12: aload         7                 
        14: invokevirtual #23                 // Method jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError.newRuntimeException:()Ljava/lang/RuntimeException;
        17: athrow                  
      Exception table:
          from       to target type
             0        9    10  Class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
      LineNumberTable:
        line 4121: 0
        line 4122: 10
        line 4123: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          12        6     7  ex     Ljdk/internal/misc/ScopedMemoryAccess$ScopedAccessError;
           0       18     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       18     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       18     2  base   Ljava/lang/Object;
           0       18     3  offset J
           0       18     5  delta  D
      StackMapTable: number_of_entries = 1
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
  
  private double getAndAddDoubleReleaseInternal(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, double);
    descriptor: (Ljdk/internal/foreign/MemorySessionImpl;Ljava/lang/Object;JD)D
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=6, locals=10, args_size=5
         0: aload_1                 
         1: ifnull        8                 
         4: aload_1                 
         5: invokevirtual #27                 // Method jdk/internal/foreign/MemorySessionImpl.checkValidStateRaw:()V
         8: getstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
        11: aload_2                 
        12: lload_3                 
        13: dload         5                 
        15: invokevirtual #1270               // Method jdk/internal/misc/Unsafe.getAndAddDoubleRelease:(Ljava/lang/Object;JD)D
        18: dstore        7                 
        20: aload_1                 
        21: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        24: dload         7                 
        26: dreturn                 
        27: astore        9                 
        29: aload_1                 
        30: invokestatic  #42                 // Method java/lang/ref/Reference.reachabilityFence:(Ljava/lang/Object;)V
        33: aload         9                 
        35: athrow                  
      Exception table:
          from       to target type
             0       20    27  any
            27       29    27  any
      LineNumberTable:
        line 4130: 0
        line 4131: 4
        line 4133: 8
        line 4135: 20
        line 4133: 24
        line 4135: 27
        line 4136: 33
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       36     0  this   Ljdk/internal/misc/ScopedMemoryAccess;
           0       36     1  session Ljdk/internal/foreign/MemorySessionImpl;
           0       36     2  base   Ljava/lang/Object;
           0       36     3  offset J
           0       36     5  delta  D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
    RuntimeVisibleAnnotations:
      0: #1304()
        jdk.internal.vm.annotation.ForceInline
      1: #1307()
        jdk.internal.misc.ScopedMemoryAccess$Scoped
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: invokestatic  #1273               // Method jdk/internal/misc/Unsafe.getUnsafe:()Ljdk/internal/misc/Unsafe;
         3: putstatic     #32                 // Field UNSAFE:Ljdk/internal/misc/Unsafe;
         6: invokestatic  #1277               // Method registerNatives:()V
         9: new           #2                  // class jdk/internal/misc/ScopedMemoryAccess
        12: dup                     
        13: invokespecial #1280               // Method "<init>":()V
        16: putstatic     #13                 // Field theScopedMemoryAccess:Ljdk/internal/misc/ScopedMemoryAccess;
        19: return                  
      LineNumberTable:
        line 80: 0
        line 84: 6
        line 95: 9
}
SourceFile: "ScopedMemoryAccess.java"
NestMembers:
  jdk/internal/misc/ScopedMemoryAccess$Scoped
  jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError
InnerClasses:
  public static final #1392= #21 of #2;       // ScopedAccessError=class jdk/internal/misc/ScopedMemoryAccess$ScopedAccessError of class jdk/internal/misc/ScopedMemoryAccess
  public static #1395= #1393 of #125;         // VectorSpecies=class jdk/internal/vm/vector/VectorSupport$VectorSpecies of class jdk/internal/vm/vector/VectorSupport
  public static #1398= #1396 of #125;         // LoadOperation=class jdk/internal/vm/vector/VectorSupport$LoadOperation of class jdk/internal/vm/vector/VectorSupport
  public static #1399= #129 of #125;          // Vector=class jdk/internal/vm/vector/VectorSupport$Vector of class jdk/internal/vm/vector/VectorSupport
  public static #1402= #1400 of #125;         // VectorPayload=class jdk/internal/vm/vector/VectorSupport$VectorPayload of class jdk/internal/vm/vector/VectorSupport
  public static #1405= #1403 of #125;         // VectorMask=class jdk/internal/vm/vector/VectorSupport$VectorMask of class jdk/internal/vm/vector/VectorSupport
  public static #1408= #1406 of #125;         // LoadVectorMaskedOperation=class jdk/internal/vm/vector/VectorSupport$LoadVectorMaskedOperation of class jdk/internal/vm/vector/VectorSupport
  public static #1411= #1409 of #125;         // StoreVectorOperation=class jdk/internal/vm/vector/VectorSupport$StoreVectorOperation of class jdk/internal/vm/vector/VectorSupport
  public static #1414= #1412 of #125;         // StoreVectorMaskedOperation=class jdk/internal/vm/vector/VectorSupport$StoreVectorMaskedOperation of class jdk/internal/vm/vector/VectorSupport
  static #1415= #1389 of #2;                  // Scoped=class jdk/internal/misc/ScopedMemoryAccess$Scoped of class jdk/internal/misc/ScopedMemoryAccess
