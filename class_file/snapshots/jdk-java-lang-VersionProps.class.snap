---
source: class_file/src/lib.rs
expression: display
---
class java.lang.VersionProps 
  minor version: 0
  major version: 68
  flags: (0x0020) ACC_SUPER
  this_class: #9                       //java/lang/VersionProps
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 17, methods: 11, attributes: 1
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = String             #8               // java.version
    #8 = Utf8               java.version
    #9 = Class              #10              // java/lang/VersionProps
   #10 = Utf8               java/lang/VersionProps
   #11 = String             #12              // 24.0.2
   #12 = Utf8               24.0.2
   #13 = InterfaceMethodref #14.#15          // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #14 = Class              #16              // java/util/Map
   #15 = NameAndType        #17:#18          // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #16 = Utf8               java/util/Map
   #17 = Utf8               put
   #18 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #19 = String             #20              // java.version.date
   #20 = Utf8               java.version.date
   #21 = String             #22              // 2025-07-15
   #22 = Utf8               2025-07-15
   #23 = String             #24              // java.runtime.version
   #24 = Utf8               java.runtime.version
   #25 = String             #26              // 24.0.2+12-54
   #26 = Utf8               24.0.2+12-54
   #27 = String             #28              // java.runtime.name
   #28 = Utf8               java.runtime.name
   #29 = String             #30              // Java(TM) SE Runtime Environment
   #30 = Utf8               Java(TM) SE Runtime Environment
   #31 = Fieldref           #9.#32           // java/lang/VersionProps.VENDOR_VERSION:Ljava/lang/String;
   #32 = NameAndType        #33:#34          // VENDOR_VERSION:Ljava/lang/String;
   #33 = Utf8               VENDOR_VERSION
   #34 = Utf8               Ljava/lang/String;
   #35 = Methodref          #36.#37          // java/lang/String.isEmpty:()Z
   #36 = Class              #38              // java/lang/String
   #37 = NameAndType        #39:#40          // isEmpty:()Z
   #38 = Utf8               java/lang/String
   #39 = Utf8               isEmpty
   #40 = Utf8               ()Z
   #41 = String             #42              // java.vendor.version
   #42 = Utf8               java.vendor.version
   #43 = String             #44              // java.class.version
   #44 = Utf8               java.class.version
   #45 = String             #46              // 68.0
   #46 = Utf8               68.0
   #47 = String             #48              // java.specification.version
   #48 = Utf8               java.specification.version
   #49 = String             #50              // 24
   #50 = Utf8               24
   #51 = String             #52              // java.specification.name
   #52 = Utf8               java.specification.name
   #53 = String             #54              // Java Platform API Specification
   #54 = Utf8               Java Platform API Specification
   #55 = String             #56              // java.specification.vendor
   #56 = Utf8               java.specification.vendor
   #57 = String             #58              // Oracle Corporation
   #58 = Utf8               Oracle Corporation
   #59 = String             #60              // java.vendor
   #60 = Utf8               java.vendor
   #61 = String             #62              // java.vendor.url
   #62 = Utf8               java.vendor.url
   #63 = String             #64              // https://java.oracle.com/
   #64 = Utf8               https://java.oracle.com/
   #65 = String             #66              // java.vendor.url.bug
   #66 = Utf8               java.vendor.url.bug
   #67 = Fieldref           #9.#68           // java/lang/VersionProps.VENDOR_URL_BUG:Ljava/lang/String;
   #68 = NameAndType        #69:#34          // VENDOR_URL_BUG:Ljava/lang/String;
   #69 = Utf8               VENDOR_URL_BUG
   #70 = Methodref          #36.#71          // java/lang/String.charAt:(I)C
   #71 = NameAndType        #72:#73          // charAt:(I)C
   #72 = Utf8               charAt
   #73 = Utf8               (I)C
   #74 = Methodref          #75.#76          // java/lang/Character.digit:(CI)I
   #75 = Class              #77              // java/lang/Character
   #76 = NameAndType        #78:#79          // digit:(CI)I
   #77 = Utf8               java/lang/Character
   #78 = Utf8               digit
   #79 = Utf8               (CI)I
   #80 = Class              #81              // java/lang/IllegalArgumentException
   #81 = Utf8               java/lang/IllegalArgumentException
   #82 = Class              #83              // java/lang/StringBuilder
   #83 = Utf8               java/lang/StringBuilder
   #84 = Methodref          #82.#3           // java/lang/StringBuilder."<init>":()V
   #85 = String             #86              // Leading zeros not supported (
   #86 = Utf8               Leading zeros not supported (
   #87 = Methodref          #82.#88          // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #88 = NameAndType        #89:#90          // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #89 = Utf8               append
   #90 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #91 = Methodref          #36.#92          // java/lang/String.substring:(II)Ljava/lang/String;
   #92 = NameAndType        #93:#94          // substring:(II)Ljava/lang/String;
   #93 = Utf8               substring
   #94 = Utf8               (II)Ljava/lang/String;
   #95 = String             #96              // )
   #96 = Utf8               )
   #97 = Methodref          #82.#98          // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #98 = NameAndType        #99:#100         // toString:()Ljava/lang/String;
   #99 = Utf8               toString
  #100 = Utf8               ()Ljava/lang/String;
  #101 = Methodref          #80.#102         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #102 = NameAndType        #5:#103          // "<init>":(Ljava/lang/String;)V
  #103 = Utf8               (Ljava/lang/String;)V
  #104 = Methodref          #105.#106        // java/lang/Integer.parseInt:(Ljava/lang/CharSequence;III)I
  #105 = Class              #107             // java/lang/Integer
  #106 = NameAndType        #108:#109        // parseInt:(Ljava/lang/CharSequence;III)I
  #107 = Utf8               java/lang/Integer
  #108 = Utf8               parseInt
  #109 = Utf8               (Ljava/lang/CharSequence;III)I
  #110 = Methodref          #36.#111         // java/lang/String.indexOf:(II)I
  #111 = NameAndType        #112:#113        // indexOf:(II)I
  #112 = Utf8               indexOf
  #113 = Utf8               (II)I
  #114 = Methodref          #36.#115         // java/lang/String.indexOf:(I)I
  #115 = NameAndType        #112:#116        // indexOf:(I)I
  #116 = Utf8               (I)I
  #117 = Methodref          #9.#118          // java/lang/VersionProps.parseVersionNumber:(Ljava/lang/String;II)I
  #118 = NameAndType        #119:#120        // parseVersionNumber:(Ljava/lang/String;II)I
  #119 = Utf8               parseVersionNumber
  #120 = Utf8               (Ljava/lang/String;II)I
  #121 = Methodref          #105.#122        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #122 = NameAndType        #123:#124        // valueOf:(I)Ljava/lang/Integer;
  #123 = Utf8               valueOf
  #124 = Utf8               (I)Ljava/lang/Integer;
  #125 = Methodref          #36.#126         // java/lang/String.length:()I
  #126 = NameAndType        #127:#128        // length:()I
  #127 = Utf8               length
  #128 = Utf8               ()I
  #129 = Methodref          #105.#130        // java/lang/Integer.intValue:()I
  #130 = NameAndType        #131:#128        // intValue:()I
  #131 = Utf8               intValue
  #132 = String             #133             // Leading/trailing zeros not allowed (
  #133 = Utf8               Leading/trailing zeros not allowed (
  #134 = Methodref          #135.#136        // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
  #135 = Class              #137             // java/util/Arrays
  #136 = NameAndType        #99:#138         // toString:([Ljava/lang/Object;)Ljava/lang/String;
  #137 = Utf8               java/util/Arrays
  #138 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;
  #139 = InterfaceMethodref #140.#141        // java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
  #140 = Class              #142             // java/util/List
  #141 = NameAndType        #143:#144        // of:([Ljava/lang/Object;)Ljava/util/List;
  #142 = Utf8               java/util/List
  #143 = Utf8               of
  #144 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;
  #145 = Methodref          #9.#146          // java/lang/VersionProps.parseVersionNumbers:(Ljava/lang/String;)Ljava/util/List;
  #146 = NameAndType        #147:#148        // parseVersionNumbers:(Ljava/lang/String;)Ljava/util/List;
  #147 = Utf8               parseVersionNumbers
  #148 = Utf8               (Ljava/lang/String;)Ljava/util/List;
  #149 = String             #150             // 
  #150 = Utf8               
  #151 = Methodref          #9.#152          // java/lang/VersionProps.optionalOf:(Ljava/lang/String;)Ljava/util/Optional;
  #152 = NameAndType        #153:#154        // optionalOf:(Ljava/lang/String;)Ljava/util/Optional;
  #153 = Utf8               optionalOf
  #154 = Utf8               (Ljava/lang/String;)Ljava/util/Optional;
  #155 = String             #156             // 12
  #156 = Utf8               12
  #157 = Methodref          #158.#159        // java/util/Optional.empty:()Ljava/util/Optional;
  #158 = Class              #160             // java/util/Optional
  #159 = NameAndType        #161:#162        // empty:()Ljava/util/Optional;
  #160 = Utf8               java/util/Optional
  #161 = Utf8               empty
  #162 = Utf8               ()Ljava/util/Optional;
  #163 = Methodref          #105.#164        // java/lang/Integer.parseInt:(Ljava/lang/String;)I
  #164 = NameAndType        #108:#165        // parseInt:(Ljava/lang/String;)I
  #165 = Utf8               (Ljava/lang/String;)I
  #166 = Methodref          #158.#167        // java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
  #167 = NameAndType        #143:#168        // of:(Ljava/lang/Object;)Ljava/util/Optional;
  #168 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
  #169 = String             #170             // 54
  #170 = Utf8               54
  #171 = Fieldref           #172.#173        // java/lang/System.err:Ljava/io/PrintStream;
  #172 = Class              #174             // java/lang/System
  #173 = NameAndType        #175:#176        // err:Ljava/io/PrintStream;
  #174 = Utf8               java/lang/System
  #175 = Utf8               err
  #176 = Utf8               Ljava/io/PrintStream;
  #177 = Fieldref           #172.#178        // java/lang/System.out:Ljava/io/PrintStream;
  #178 = NameAndType        #179:#176        // out:Ljava/io/PrintStream;
  #179 = Utf8               out
  #180 = String             #181             // java version \"24.0.2\" 2025-07-15
  #181 = Utf8               java version \"24.0.2\" 2025-07-15
  #182 = Fieldref           #9.#183          // java/lang/VersionProps.isLTS:Z
  #183 = NameAndType        #184:#185        // isLTS:Z
  #184 = Utf8               isLTS
  #185 = Utf8               Z
  #186 = String             #187             //  LTS
  #187 = Utf8                LTS
  #188 = Methodref          #189.#190        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #189 = Class              #191             // java/io/PrintStream
  #190 = NameAndType        #192:#103        // println:(Ljava/lang/String;)V
  #191 = Utf8               java/io/PrintStream
  #192 = Utf8               println
  #193 = String             #194             // java 24.0.2 2025-07-15
  #194 = Utf8               java 24.0.2 2025-07-15
  #195 = String             #196             // jdk.debug
  #196 = Utf8               jdk.debug
  #197 = String             #198             // release
  #198 = Utf8               release
  #199 = Methodref          #172.#200        // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #200 = NameAndType        #201:#202        // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #201 = Utf8               getProperty
  #202 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #203 = Methodref          #36.#204         // java/lang/String.equals:(Ljava/lang/Object;)Z
  #204 = NameAndType        #205:#206        // equals:(Ljava/lang/Object;)Z
  #205 = Utf8               equals
  #206 = Utf8               (Ljava/lang/Object;)Z
  #207 = String             #208             //  
  #208 = Utf8                
  #209 = String             #210             //  (
  #210 = Utf8                (
  #211 = String             #212             // build 
  #212 = Utf8               build 
  #213 = String             #214             // java.vm.name
  #214 = Utf8               java.vm.name
  #215 = Methodref          #172.#216        // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #216 = NameAndType        #201:#217        // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #217 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #218 = String             #219             // java.vm.version
  #219 = Utf8               java.vm.version
  #220 = String             #221             // java.vm.info
  #221 = Utf8               java.vm.info
  #222 = String             #223             // , 
  #223 = Utf8               , 
  #224 = String             #225             // LTS
  #225 = Utf8               LTS
  #226 = Methodref          #36.#227         // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #227 = NameAndType        #228:#229        // startsWith:(Ljava/lang/String;)Z
  #228 = Utf8               startsWith
  #229 = Utf8               (Ljava/lang/String;)Z
  #230 = String             #231             // https://bugreport.java.com/bugreport/
  #231 = Utf8               https://bugreport.java.com/bugreport/
  #232 = String             #233             // https://bugreport.java.com/bugreport/crash.jsp
  #233 = Utf8               https://bugreport.java.com/bugreport/crash.jsp
  #234 = Fieldref           #9.#235          // java/lang/VersionProps.VENDOR_URL_VM_BUG:Ljava/lang/String;
  #235 = NameAndType        #236:#34         // VENDOR_URL_VM_BUG:Ljava/lang/String;
  #236 = Utf8               VENDOR_URL_VM_BUG
  #237 = Utf8               launcher_name
  #238 = Utf8               ConstantValue
  #239 = String             #240             // java
  #240 = Utf8               java
  #241 = Utf8               java_version
  #242 = Utf8               java_version_date
  #243 = Utf8               java_runtime_name
  #244 = Utf8               java_runtime_version
  #245 = Utf8               VERSION_NUMBER
  #246 = Utf8               VERSION_SPECIFICATION
  #247 = Utf8               VERSION_BUILD
  #248 = Utf8               VERSION_PRE
  #249 = Utf8               VERSION_OPT
  #250 = Utf8               CLASSFILE_MAJOR_MINOR
  #251 = Utf8               VENDOR
  #252 = Utf8               VENDOR_URL
  #253 = Utf8               Code
  #254 = Utf8               LineNumberTable
  #255 = Utf8               LocalVariableTable
  #256 = Utf8               this
  #257 = Utf8               Ljava/lang/VersionProps;
  #258 = Utf8               init
  #259 = Utf8               (Ljava/util/Map;)V
  #260 = Utf8               props
  #261 = Utf8               Ljava/util/Map;
  #262 = Utf8               LocalVariableTypeTable
  #263 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #264 = Utf8               StackMapTable
  #265 = Utf8               Signature
  #266 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V
  #267 = Utf8               version
  #268 = Utf8               prevIndex
  #269 = Utf8               I
  #270 = Utf8               index
  #271 = Utf8               size
  #272 = Utf8               verNumbers
  #273 = Utf8               [Ljava/lang/Integer;
  #274 = Utf8               n
  #275 = Class              #273             // "[Ljava/lang/Integer;"
  #276 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/lang/Integer;>;
  #277 = Utf8               versionNumbers
  #278 = Utf8               ()Ljava/util/List;
  #279 = Utf8               ()Ljava/util/List<Ljava/lang/Integer;>;
  #280 = Utf8               pre
  #281 = Utf8               ()Ljava/util/Optional<Ljava/lang/String;>;
  #282 = Utf8               build
  #283 = Utf8               ()Ljava/util/Optional<Ljava/lang/Integer;>;
  #284 = Utf8               optional
  #285 = Utf8               value
  #286 = Utf8               (Ljava/lang/String;)Ljava/util/Optional<Ljava/lang/String;>;
  #287 = Utf8               print
  #288 = Utf8               (Z)V
  #289 = Utf8               ps
  #290 = Utf8               jdk_debug_level
  #291 = Utf8               vendor_version
  #292 = Utf8               java_vm_name
  #293 = Utf8               java_vm_version
  #294 = Utf8               java_vm_info
  #295 = Utf8               <clinit>
  #296 = Utf8               SourceFile
  #297 = Utf8               VersionProps.java
{
  private static final java.lang.String launcher_name;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String java
  
  private static final java.lang.String java_version;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 24.0.2
  
  private static final java.lang.String java_version_date;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 2025-07-15
  
  private static final java.lang.String java_runtime_name;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String Java(TM) SE Runtime Environment
  
  private static final java.lang.String java_runtime_version;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 24.0.2+12-54
  
  private static final java.lang.String VERSION_NUMBER;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 24.0.2
  
  private static final java.lang.String VERSION_SPECIFICATION;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 24
  
  private static final java.lang.String VERSION_BUILD;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 12
  
  private static final java.lang.String VERSION_PRE;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 
  
  private static final java.lang.String VERSION_OPT;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 54
  
  private static final boolean isLTS;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final java.lang.String CLASSFILE_MAJOR_MINOR;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String 68.0
  
  private static final java.lang.String VENDOR;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String Oracle Corporation
  
  private static final java.lang.String VENDOR_URL;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String https://java.oracle.com/
  
  private static java.lang.String VENDOR_VERSION;
    descriptor: Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private static java.lang.String VENDOR_URL_BUG;
    descriptor: Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private static java.lang.String VENDOR_URL_VM_BUG;
    descriptor: Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  java.lang.VersionProps();
    descriptor: ()V
    flags: (0x0000) 
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/lang/VersionProps;
  
  public static void init(java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: ldc           #7                  // String java.version
         3: ldc           #11                 // String 24.0.2
         5: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        10: pop                     
        11: aload_0                 
        12: ldc           #19                 // String java.version.date
        14: ldc           #21                 // String 2025-07-15
        16: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        21: pop                     
        22: aload_0                 
        23: ldc           #23                 // String java.runtime.version
        25: ldc           #25                 // String 24.0.2+12-54
        27: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        32: pop                     
        33: aload_0                 
        34: ldc           #27                 // String java.runtime.name
        36: ldc           #29                 // String Java(TM) SE Runtime Environment
        38: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        43: pop                     
        44: getstatic     #31                 // Field VENDOR_VERSION:Ljava/lang/String;
        47: invokevirtual #35                 // Method java/lang/String.isEmpty:()Z
        50: ifne          65                
        53: aload_0                 
        54: ldc           #41                 // String java.vendor.version
        56: getstatic     #31                 // Field VENDOR_VERSION:Ljava/lang/String;
        59: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        64: pop                     
        65: aload_0                 
        66: ldc           #43                 // String java.class.version
        68: ldc           #45                 // String 68.0
        70: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        75: pop                     
        76: aload_0                 
        77: ldc           #47                 // String java.specification.version
        79: ldc           #49                 // String 24
        81: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        86: pop                     
        87: aload_0                 
        88: ldc           #51                 // String java.specification.name
        90: ldc           #53                 // String Java Platform API Specification
        92: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        97: pop                     
        98: aload_0                 
        99: ldc           #55                 // String java.specification.vendor
       101: ldc           #57                 // String Oracle Corporation
       103: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       108: pop                     
       109: aload_0                 
       110: ldc           #59                 // String java.vendor
       112: ldc           #57                 // String Oracle Corporation
       114: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       119: pop                     
       120: aload_0                 
       121: ldc           #61                 // String java.vendor.url
       123: ldc           #63                 // String https://java.oracle.com/
       125: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       130: pop                     
       131: aload_0                 
       132: ldc           #65                 // String java.vendor.url.bug
       134: getstatic     #67                 // Field VENDOR_URL_BUG:Ljava/lang/String;
       137: invokeinterface #13, 3              // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       142: pop                     
       143: return                  
      LineNumberTable:
        line 102: 0
        line 103: 11
        line 104: 22
        line 105: 33
        line 106: 44
        line 107: 53
        line 109: 65
        line 111: 76
        line 116: 87
        line 117: 98
        line 119: 109
        line 120: 120
        line 121: 131
        line 122: 143
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      144     0  props  Ljava/util/Map;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0      144     0  props   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 65
    Signature: #266                        // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V
  
  private static int parseVersionNumber(java.lang.String, int, int);
    descriptor: (Ljava/lang/String;II)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=6, locals=3, args_size=3
         0: iload_2                 
         1: iload_1                 
         2: isub                    
         3: iconst_1                
         4: if_icmple     57                
         7: aload_0                 
         8: iload_1                 
         9: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
        12: bipush        10                
        14: invokestatic  #74                 // Method java/lang/Character.digit:(CI)I
        17: ifgt          57                
        20: new           #80                 // class java/lang/IllegalArgumentException
        23: dup                     
        24: new           #82                 // class java/lang/StringBuilder
        27: dup                     
        28: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
        31: ldc           #85                 // String Leading zeros not supported (
        33: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: aload_0                 
        37: iload_1                 
        38: iload_2                 
        39: invokevirtual #91                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        42: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: ldc           #95                 // String )
        47: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        53: invokespecial #101                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        56: athrow                  
        57: aload_0                 
        58: iload_1                 
        59: iload_2                 
        60: bipush        10                
        62: invokestatic  #104                // Method java/lang/Integer.parseInt:(Ljava/lang/CharSequence;III)I
        65: ireturn                 
      LineNumberTable:
        line 125: 0
        line 126: 9
        line 127: 20
        line 128: 39
        line 129: 57
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       66     0  version Ljava/lang/String;
           0       66     1  prevIndex I
           0       66     2  index  I
      StackMapTable: number_of_entries = 1
        frame_type = 57 /* same */
  
  static java.util.List<java.lang.Integer> parseVersionNumbers(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/List;
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=5, locals=6, args_size=1
         0: iconst_0                
         1: istore_1                
         2: iconst_0                
         3: istore_2                
         4: aload_0                 
         5: bipush        46                
         7: iload_2                 
         8: invokevirtual #110                // Method java/lang/String.indexOf:(II)I
        11: iconst_1                
        12: iadd                    
        13: istore_2                
        14: iinc          1, 1              
        17: iload_2                 
        18: ifgt          4                 
        21: iload_1                 
        22: anewarray     #105                // class java/lang/Integer
        25: astore_3                
        26: iconst_0                
        27: istore        4                 
        29: iconst_0                
        30: istore_2                
        31: aload_0                 
        32: bipush        46                
        34: invokevirtual #114                // Method java/lang/String.indexOf:(I)I
        37: istore        5                 
        39: iload         5                 
        41: iconst_m1               
        42: if_icmple     79                
        45: aload_3                 
        46: iload         4                 
        48: aload_0                 
        49: iload_2                 
        50: iload         5                 
        52: invokestatic  #117                // Method parseVersionNumber:(Ljava/lang/String;II)I
        55: invokestatic  #121                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        58: aastore                 
        59: iload         5                 
        61: iconst_1                
        62: iadd                    
        63: istore_2                
        64: aload_0                 
        65: bipush        46                
        67: iload_2                 
        68: invokevirtual #110                // Method java/lang/String.indexOf:(II)I
        71: istore        5                 
        73: iinc          4, 1              
        76: goto          39                
        79: aload_3                 
        80: iload         4                 
        82: aload_0                 
        83: iload_2                 
        84: aload_0                 
        85: invokevirtual #125                // Method java/lang/String.length:()I
        88: invokestatic  #117                // Method parseVersionNumber:(Ljava/lang/String;II)I
        91: invokestatic  #121                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        94: aastore                 
        95: aload_3                 
        96: iconst_0                
        97: aaload                  
        98: invokevirtual #129                // Method java/lang/Integer.intValue:()I
       101: ifeq          114               
       104: aload_3                 
       105: iload         4                 
       107: aaload                  
       108: invokevirtual #129                // Method java/lang/Integer.intValue:()I
       111: ifne          149               
       114: new           #80                 // class java/lang/IllegalArgumentException
       117: dup                     
       118: new           #82                 // class java/lang/StringBuilder
       121: dup                     
       122: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
       125: ldc           #132                // String Leading/trailing zeros not allowed (
       127: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: aload_3                 
       131: invokestatic  #134                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
       134: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       137: ldc           #95                 // String )
       139: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       145: invokespecial #101                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       148: athrow                  
       149: aload_3                 
       150: invokestatic  #139                // InterfaceMethod java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
       153: areturn                 
      LineNumberTable:
        line 135: 0
        line 136: 2
        line 138: 4
        line 139: 14
        line 140: 17
        line 141: 21
        line 144: 26
        line 145: 29
        line 146: 31
        line 147: 39
        line 148: 45
        line 149: 59
        line 150: 64
        line 151: 73
        line 153: 79
        line 155: 95
        line 156: 114
        line 157: 131
        line 159: 149
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      154     0  version Ljava/lang/String;
           2      152     1  size   I
           4      150     2  prevIndex I
          26      128     3  verNumbers [Ljava/lang/Integer;
          29      125     4  n      I
          39      115     5  index  I
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 4
          locals = [int, int]
        frame_type = 254 /* append */
          offset_delta = 34
          locals = [class "[Ljava/lang/Integer;", int, int]
        frame_type = 39 /* same */
        frame_type = 34 /* same */
        frame_type = 34 /* same */
    Signature: #276                        // (Ljava/lang/String;)Ljava/util/List<Ljava/lang/Integer;>;
  
  static java.util.List<java.lang.Integer> versionNumbers();
    descriptor: ()Ljava/util/List;
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: ldc           #11                 // String 24.0.2
         2: invokestatic  #145                // Method parseVersionNumbers:(Ljava/lang/String;)Ljava/util/List;
         5: areturn                 
      LineNumberTable:
        line 163: 0
    Signature: #279                        // ()Ljava/util/List<Ljava/lang/Integer;>;
  
  static java.util.Optional<java.lang.String> pre();
    descriptor: ()Ljava/util/Optional;
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: ldc           #149                // String 
         2: invokestatic  #151                // Method optionalOf:(Ljava/lang/String;)Ljava/util/Optional;
         5: areturn                 
      LineNumberTable:
        line 167: 0
    Signature: #281                        // ()Ljava/util/Optional<Ljava/lang/String;>;
  
  static java.util.Optional<java.lang.Integer> build();
    descriptor: ()Ljava/util/Optional;
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: ldc           #155                // String 12
         2: invokevirtual #35                 // Method java/lang/String.isEmpty:()Z
         5: ifeq          14                
         8: invokestatic  #157                // Method java/util/Optional.empty:()Ljava/util/Optional;
        11: goto          25                
        14: ldc           #155                // String 12
        16: invokestatic  #163                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
        19: invokestatic  #121                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        22: invokestatic  #166                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
        25: areturn                 
      LineNumberTable:
        line 171: 0
        line 172: 8
        line 173: 14
        line 171: 25
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/util/Optional ]
    Signature: #283                        // ()Ljava/util/Optional<Ljava/lang/Integer;>;
  
  static java.util.Optional<java.lang.String> optional();
    descriptor: ()Ljava/util/Optional;
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: ldc           #169                // String 54
         2: invokestatic  #151                // Method optionalOf:(Ljava/lang/String;)Ljava/util/Optional;
         5: areturn                 
      LineNumberTable:
        line 177: 0
    Signature: #281                        // ()Ljava/util/Optional<Ljava/lang/String;>;
  
  private static java.util.Optional<java.lang.String> optionalOf(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/Optional;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #35                 // Method java/lang/String.isEmpty:()Z
         4: ifne          12                
         7: aload_0                 
         8: invokestatic  #166                // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
        11: areturn                 
        12: invokestatic  #157                // Method java/util/Optional.empty:()Ljava/util/Optional;
        15: areturn                 
      LineNumberTable:
        line 182: 0
        line 183: 7
        line 185: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  value  Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 12 /* same */
    Signature: #286                        // (Ljava/lang/String;)Ljava/util/Optional<Ljava/lang/String;>;
  
  private static void print(boolean);
    descriptor: (Z)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code: 
      stack=3, locals=7, args_size=1
         0: iload_0                 
         1: ifeq          10                
         4: getstatic     #171                // Field java/lang/System.err:Ljava/io/PrintStream;
         7: goto          13                
        10: getstatic     #177                // Field java/lang/System.out:Ljava/io/PrintStream;
        13: astore_1                
        14: iload_0                 
        15: ifeq          56                
        18: aload_1                 
        19: new           #82                 // class java/lang/StringBuilder
        22: dup                     
        23: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
        26: ldc           #180                // String java version \"24.0.2\" 2025-07-15
        28: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: getstatic     #182                // Field isLTS:Z
        34: ifeq          42                
        37: ldc           #186                // String  LTS
        39: goto          44                
        42: ldc           #149                // String 
        44: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        50: invokevirtual #188                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        53: goto          91                
        56: aload_1                 
        57: new           #82                 // class java/lang/StringBuilder
        60: dup                     
        61: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
        64: ldc           #193                // String java 24.0.2 2025-07-15
        66: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        69: getstatic     #182                // Field isLTS:Z
        72: ifeq          80                
        75: ldc           #186                // String  LTS
        77: goto          82                
        80: ldc           #149                // String 
        82: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        88: invokevirtual #188                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        91: ldc           #195                // String jdk.debug
        93: ldc           #197                // String release
        95: invokestatic  #199                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        98: astore_2                
        99: ldc           #197                // String release
       101: aload_2                 
       102: invokevirtual #203                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       105: ifeq          114               
       108: ldc           #149                // String 
       110: astore_2                
       111: goto          134               
       114: new           #82                 // class java/lang/StringBuilder
       117: dup                     
       118: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
       121: aload_2                 
       122: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       125: ldc           #207                // String  
       127: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       133: astore_2                
       134: getstatic     #31                 // Field VENDOR_VERSION:Ljava/lang/String;
       137: invokevirtual #35                 // Method java/lang/String.isEmpty:()Z
       140: ifeq          148               
       143: ldc           #149                // String 
       145: goto          169               
       148: new           #82                 // class java/lang/StringBuilder
       151: dup                     
       152: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
       155: ldc           #207                // String  
       157: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       160: getstatic     #31                 // Field VENDOR_VERSION:Ljava/lang/String;
       163: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       166: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       169: astore_3                
       170: aload_1                 
       171: new           #82                 // class java/lang/StringBuilder
       174: dup                     
       175: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
       178: ldc           #29                 // String Java(TM) SE Runtime Environment
       180: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       183: aload_3                 
       184: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       187: ldc           #209                // String  (
       189: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       192: aload_2                 
       193: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       196: ldc           #211                // String build 
       198: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       201: ldc           #25                 // String 24.0.2+12-54
       203: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       206: ldc           #95                 // String )
       208: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       211: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       214: invokevirtual #188                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       217: ldc           #213                // String java.vm.name
       219: invokestatic  #215                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       222: astore        4                 
       224: ldc           #218                // String java.vm.version
       226: invokestatic  #215                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       229: astore        5                 
       231: ldc           #220                // String java.vm.info
       233: invokestatic  #215                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       236: astore        6                 
       238: aload_1                 
       239: new           #82                 // class java/lang/StringBuilder
       242: dup                     
       243: invokespecial #84                 // Method java/lang/StringBuilder."<init>":()V
       246: aload         4                 
       248: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       251: aload_3                 
       252: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       255: ldc           #209                // String  (
       257: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       260: aload_2                 
       261: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       264: ldc           #211                // String build 
       266: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       269: aload         5                 
       271: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       274: ldc           #222                // String , 
       276: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       279: aload         6                 
       281: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       284: ldc           #95                 // String )
       286: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       289: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       292: invokevirtual #188                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       295: return                  
      LineNumberTable:
        line 196: 0
        line 199: 14
        line 200: 18
        line 202: 31
        line 200: 50
        line 205: 56
        line 207: 69
        line 205: 88
        line 211: 91
        line 212: 99
        line 214: 108
        line 216: 114
        line 219: 134
        line 220: 143
        line 222: 170
        line 226: 217
        line 227: 224
        line 228: 231
        line 229: 238
        line 233: 295
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      296     0  err    Z
          14      282     1  ps     Ljava/io/PrintStream;
          99      197     2  jdk_debug_level Ljava/lang/String;
         170      126     3  vendor_version Ljava/lang/String;
         224       72     4  java_vm_name Ljava/lang/String;
         231       65     5  java_vm_version Ljava/lang/String;
         238       58     6  java_vm_info Ljava/lang/String;
      StackMapTable: number_of_entries = 12
        frame_type = 10 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/io/PrintStream ]
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [int, class java/io/PrintStream]
          stack = [class java/io/PrintStream, class java/lang/StringBuilder]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [int, class java/io/PrintStream]
          stack = [class java/io/PrintStream, class java/lang/StringBuilder, class java/lang/String]
        frame_type = 11 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [int, class java/io/PrintStream]
          stack = [class java/io/PrintStream, class java/lang/StringBuilder]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [int, class java/io/PrintStream]
          stack = [class java/io/PrintStream, class java/lang/StringBuilder, class java/lang/String]
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [class java/lang/String]
        frame_type = 19 /* same */
        frame_type = 13 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: ldc           #169                // String 54
         2: ldc           #224                // String LTS
         4: invokevirtual #226                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         7: putstatic     #182                // Field isLTS:Z
        10: ldc           #149                // String 
        12: putstatic     #31                 // Field VENDOR_VERSION:Ljava/lang/String;
        15: ldc           #230                // String https://bugreport.java.com/bugreport/
        17: putstatic     #67                 // Field VENDOR_URL_BUG:Ljava/lang/String;
        20: ldc           #232                // String https://bugreport.java.com/bugreport/crash.jsp
        22: putstatic     #234                // Field VENDOR_URL_VM_BUG:Ljava/lang/String;
        25: return                  
      LineNumberTable:
        line 69: 0
        line 70: 4
        line 85: 10
        line 88: 15
        line 93: 20
}
SourceFile: "VersionProps.java"
