---
source: class_file/src/lib.rs
expression: display
---
public class jdk.internal.misc.VM 
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                       //jdk/internal/misc/VM
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 19, methods: 36, attributes: 3
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9            // jdk/internal/misc/VM.lock:Ljava/lang/Object;
    #8 = Class              #10              // jdk/internal/misc/VM
    #9 = NameAndType        #11:#12          // lock:Ljava/lang/Object;
   #10 = Utf8               jdk/internal/misc/VM
   #11 = Utf8               lock
   #12 = Utf8               Ljava/lang/Object;
   #13 = Fieldref           #8.#14           // jdk/internal/misc/VM.initLevel:I
   #14 = NameAndType        #15:#16          // initLevel:I
   #15 = Utf8               initLevel
   #16 = Utf8               I
   #17 = Class              #18              // java/lang/InternalError
   #18 = Utf8               java/lang/InternalError
   #19 = Class              #20              // java/lang/StringBuilder
   #20 = Utf8               java/lang/StringBuilder
   #21 = Methodref          #19.#3           // java/lang/StringBuilder."<init>":()V
   #22 = String             #23              // Bad level: 
   #23 = Utf8               Bad level: 
   #24 = Methodref          #19.#25          // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #25 = NameAndType        #26:#27          // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #26 = Utf8               append
   #27 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #28 = Methodref          #19.#29          // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #29 = NameAndType        #26:#30          // append:(I)Ljava/lang/StringBuilder;
   #30 = Utf8               (I)Ljava/lang/StringBuilder;
   #31 = Methodref          #19.#32          // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #32 = NameAndType        #33:#34          // toString:()Ljava/lang/String;
   #33 = Utf8               toString
   #34 = Utf8               ()Ljava/lang/String;
   #35 = Methodref          #17.#36          // java/lang/InternalError."<init>":(Ljava/lang/String;)V
   #36 = NameAndType        #5:#37           // "<init>":(Ljava/lang/String;)V
   #37 = Utf8               (Ljava/lang/String;)V
   #38 = Methodref          #2.#39           // java/lang/Object.notifyAll:()V
   #39 = NameAndType        #40:#6           // notifyAll:()V
   #40 = Utf8               notifyAll
   #41 = Methodref          #2.#42           // java/lang/Object.wait:()V
   #42 = NameAndType        #43:#6           // wait:()V
   #43 = Utf8               wait
   #44 = Fieldref           #8.#45           // jdk/internal/misc/VM.javaLangInvokeInited:Z
   #45 = NameAndType        #46:#47          // javaLangInvokeInited:Z
   #46 = Utf8               javaLangInvokeInited
   #47 = Utf8               Z
   #48 = String             #49              // java.lang.invoke already inited
   #49 = Utf8               java.lang.invoke already inited
   #50 = Methodref          #8.#51           // jdk/internal/misc/VM.initLevel:(I)V
   #51 = NameAndType        #15:#52          // initLevel:(I)V
   #52 = Utf8               (I)V
   #53 = Fieldref           #8.#54           // jdk/internal/misc/VM.directMemory:J
   #54 = NameAndType        #55:#56          // directMemory:J
   #55 = Utf8               directMemory
   #56 = Utf8               J
   #57 = Fieldref           #8.#58           // jdk/internal/misc/VM.pageAlignDirectMemory:Z
   #58 = NameAndType        #59:#47          // pageAlignDirectMemory:Z
   #59 = Utf8               pageAlignDirectMemory
   #60 = Class              #61              // java/lang/classfile/ClassFile
   #61 = Utf8               java/lang/classfile/ClassFile
   #62 = InterfaceMethodref #60.#63          // java/lang/classfile/ClassFile.latestMajorVersion:()I
   #63 = NameAndType        #64:#65          // latestMajorVersion:()I
   #64 = Utf8               latestMajorVersion
   #65 = Utf8               ()I
   #66 = Integer            65535
   #67 = Methodref          #8.#68           // jdk/internal/misc/VM.isSupportedClassFileVersion:(II)Z
   #68 = NameAndType        #69:#70          // isSupportedClassFileVersion:(II)Z
   #69 = Utf8               isSupportedClassFileVersion
   #70 = Utf8               (II)Z
   #71 = Methodref          #72.#73          // java/lang/ClassLoader.getPlatformClassLoader:()Ljava/lang/ClassLoader;
   #72 = Class              #74              // java/lang/ClassLoader
   #73 = NameAndType        #75:#76          // getPlatformClassLoader:()Ljava/lang/ClassLoader;
   #74 = Utf8               java/lang/ClassLoader
   #75 = Utf8               getPlatformClassLoader
   #76 = Utf8               ()Ljava/lang/ClassLoader;
   #77 = Fieldref           #8.#78           // jdk/internal/misc/VM.savedProps:Ljava/util/Map;
   #78 = NameAndType        #79:#80          // savedProps:Ljava/util/Map;
   #79 = Utf8               savedProps
   #80 = Utf8               Ljava/util/Map;
   #81 = Class              #82              // java/lang/IllegalStateException
   #82 = Utf8               java/lang/IllegalStateException
   #83 = String             #84              // Not yet initialized
   #84 = Utf8               Not yet initialized
   #85 = Methodref          #81.#36          // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #86 = InterfaceMethodref #87.#88          // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #87 = Class              #89              // java/util/Map
   #88 = NameAndType        #90:#91          // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #89 = Utf8               java/util/Map
   #90 = Utf8               get
   #91 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #92 = Class              #93              // java/lang/String
   #93 = Utf8               java/lang/String
   #94 = Methodref          #95.#96          // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
   #95 = Class              #97              // java/util/Collections
   #96 = NameAndType        #98:#99          // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
   #97 = Utf8               java/util/Collections
   #98 = Utf8               unmodifiableMap
   #99 = Utf8               (Ljava/util/Map;)Ljava/util/Map;
  #100 = Methodref          #8.#101          // jdk/internal/misc/VM.initLevel:()I
  #101 = NameAndType        #15:#65          // initLevel:()I
  #102 = String             #103             // Wrong init level
  #103 = Utf8               Wrong init level
  #104 = String             #105             // sun.nio.MaxDirectMemorySize
  #105 = Utf8               sun.nio.MaxDirectMemorySize
  #106 = Methodref          #92.#107         // java/lang/String.isEmpty:()Z
  #107 = NameAndType        #108:#109        // isEmpty:()Z
  #108 = Utf8               isEmpty
  #109 = Utf8               ()Z
  #110 = String             #111             // -1
  #111 = Utf8               -1
  #112 = Methodref          #92.#113         // java/lang/String.equals:(Ljava/lang/Object;)Z
  #113 = NameAndType        #114:#115        // equals:(Ljava/lang/Object;)Z
  #114 = Utf8               equals
  #115 = Utf8               (Ljava/lang/Object;)Z
  #116 = Methodref          #117.#118        // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #117 = Class              #119             // java/lang/Runtime
  #118 = NameAndType        #120:#121        // getRuntime:()Ljava/lang/Runtime;
  #119 = Utf8               java/lang/Runtime
  #120 = Utf8               getRuntime
  #121 = Utf8               ()Ljava/lang/Runtime;
  #122 = Methodref          #117.#123        // java/lang/Runtime.maxMemory:()J
  #123 = NameAndType        #124:#125        // maxMemory:()J
  #124 = Utf8               maxMemory
  #125 = Utf8               ()J
  #126 = Methodref          #127.#128        // java/lang/Long.parseLong:(Ljava/lang/String;)J
  #127 = Class              #129             // java/lang/Long
  #128 = NameAndType        #130:#131        // parseLong:(Ljava/lang/String;)J
  #129 = Utf8               java/lang/Long
  #130 = Utf8               parseLong
  #131 = Utf8               (Ljava/lang/String;)J
  #132 = Long               -1l
  #134 = String             #135             // sun.nio.PageAlignDirectMemory
  #135 = Utf8               sun.nio.PageAlignDirectMemory
  #136 = String             #137             // true
  #137 = Utf8               true
  #138 = Methodref          #139.#140        // jdk/internal/misc/OSEnvironment.initialize:()V
  #139 = Class              #141             // jdk/internal/misc/OSEnvironment
  #140 = NameAndType        #142:#6          // initialize:()V
  #141 = Utf8               jdk/internal/misc/OSEnvironment
  #142 = Utf8               initialize
  #143 = Fieldref           #8.#144          // jdk/internal/misc/VM.finalRefCount:I
  #144 = NameAndType        #145:#16         // finalRefCount:I
  #145 = Utf8               finalRefCount
  #146 = Fieldref           #8.#147          // jdk/internal/misc/VM.peakFinalRefCount:I
  #147 = NameAndType        #148:#16         // peakFinalRefCount:I
  #148 = Utf8               peakFinalRefCount
  #149 = Fieldref           #150.#151        // java/lang/Thread$State.RUNNABLE:Ljava/lang/Thread$State;
  #150 = Class              #152             // java/lang/Thread$State
  #151 = NameAndType        #153:#154        // RUNNABLE:Ljava/lang/Thread$State;
  #152 = Utf8               java/lang/Thread$State
  #153 = Utf8               RUNNABLE
  #154 = Utf8               Ljava/lang/Thread$State;
  #155 = Fieldref           #150.#156        // java/lang/Thread$State.BLOCKED:Ljava/lang/Thread$State;
  #156 = NameAndType        #157:#154        // BLOCKED:Ljava/lang/Thread$State;
  #157 = Utf8               BLOCKED
  #158 = Fieldref           #150.#159        // java/lang/Thread$State.WAITING:Ljava/lang/Thread$State;
  #159 = NameAndType        #160:#154        // WAITING:Ljava/lang/Thread$State;
  #160 = Utf8               WAITING
  #161 = Fieldref           #150.#162        // java/lang/Thread$State.TIMED_WAITING:Ljava/lang/Thread$State;
  #162 = NameAndType        #163:#154        // TIMED_WAITING:Ljava/lang/Thread$State;
  #163 = Utf8               TIMED_WAITING
  #164 = Fieldref           #150.#165        // java/lang/Thread$State.TERMINATED:Ljava/lang/Thread$State;
  #165 = NameAndType        #166:#154        // TERMINATED:Ljava/lang/Thread$State;
  #166 = Utf8               TERMINATED
  #167 = Fieldref           #150.#168        // java/lang/Thread$State.NEW:Ljava/lang/Thread$State;
  #168 = NameAndType        #169:#154        // NEW:Ljava/lang/Thread$State;
  #169 = Utf8               NEW
  #170 = Methodref          #8.#171          // jdk/internal/misc/VM.latestUserDefinedLoader0:()Ljava/lang/ClassLoader;
  #171 = NameAndType        #172:#76         // latestUserDefinedLoader0:()Ljava/lang/ClassLoader;
  #172 = Utf8               latestUserDefinedLoader0
  #173 = Methodref          #8.#174          // jdk/internal/misc/VM.getuid:()J
  #174 = NameAndType        #175:#125        // getuid:()J
  #175 = Utf8               getuid
  #176 = Methodref          #8.#177          // jdk/internal/misc/VM.geteuid:()J
  #177 = NameAndType        #178:#125        // geteuid:()J
  #178 = Utf8               geteuid
  #179 = Methodref          #8.#180          // jdk/internal/misc/VM.getgid:()J
  #180 = NameAndType        #181:#125        // getgid:()J
  #181 = Utf8               getgid
  #182 = Methodref          #8.#183          // jdk/internal/misc/VM.getegid:()J
  #183 = NameAndType        #184:#125        // getegid:()J
  #184 = Utf8               getegid
  #185 = Fieldref           #186.#187        // jdk/internal/misc/VM$BufferPoolsHolder.BUFFER_POOLS:Ljava/util/List;
  #186 = Class              #188             // jdk/internal/misc/VM$BufferPoolsHolder
  #187 = NameAndType        #189:#190        // BUFFER_POOLS:Ljava/util/List;
  #188 = Utf8               jdk/internal/misc/VM$BufferPoolsHolder
  #189 = Utf8               BUFFER_POOLS
  #190 = Utf8               Ljava/util/List;
  #191 = Methodref          #192.#193        // jdk/internal/access/SharedSecrets.getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;
  #192 = Class              #194             // jdk/internal/access/SharedSecrets
  #193 = NameAndType        #195:#196        // getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;
  #194 = Utf8               jdk/internal/access/SharedSecrets
  #195 = Utf8               getJavaLangAccess
  #196 = Utf8               ()Ljdk/internal/access/JavaLangAccess;
  #197 = InterfaceMethodref #198.#199        // jdk/internal/access/JavaLangAccess.initialSystemErr:()Ljava/io/PrintStream;
  #198 = Class              #200             // jdk/internal/access/JavaLangAccess
  #199 = NameAndType        #201:#202        // initialSystemErr:()Ljava/io/PrintStream;
  #200 = Utf8               jdk/internal/access/JavaLangAccess
  #201 = Utf8               initialSystemErr
  #202 = Utf8               ()Ljava/io/PrintStream;
  #203 = Long               67108864l
  #205 = Methodref          #8.#140          // jdk/internal/misc/VM.initialize:()V
  #206 = Utf8               JAVA_LANG_SYSTEM_INITED
  #207 = Utf8               ConstantValue
  #208 = Integer            1
  #209 = Utf8               MODULE_SYSTEM_INITED
  #210 = Integer            2
  #211 = Utf8               SYSTEM_LOADER_INITIALIZING
  #212 = Integer            3
  #213 = Utf8               SYSTEM_BOOTED
  #214 = Integer            4
  #215 = Utf8               SYSTEM_SHUTDOWN
  #216 = Integer            5
  #217 = Utf8               RuntimeVisibleAnnotations
  #218 = Utf8               Ljdk/internal/vm/annotation/Stable;
  #219 = Utf8               Signature
  #220 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #221 = Utf8               JVMTI_THREAD_STATE_ALIVE
  #222 = Utf8               JVMTI_THREAD_STATE_TERMINATED
  #223 = Utf8               JVMTI_THREAD_STATE_RUNNABLE
  #224 = Utf8               JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER
  #225 = Integer            1024
  #226 = Utf8               JVMTI_THREAD_STATE_WAITING_INDEFINITELY
  #227 = Integer            16
  #228 = Utf8               JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT
  #229 = Integer            32
  #230 = Utf8               Code
  #231 = Utf8               LineNumberTable
  #232 = Utf8               LocalVariableTable
  #233 = Utf8               this
  #234 = Utf8               Ljdk/internal/misc/VM;
  #235 = Utf8               value
  #236 = Utf8               StackMapTable
  #237 = Class              #238             // java/lang/Throwable
  #238 = Utf8               java/lang/Throwable
  #239 = Utf8               awaitInitLevel
  #240 = Utf8               Exceptions
  #241 = Class              #242             // java/lang/InterruptedException
  #242 = Utf8               java/lang/InterruptedException
  #243 = Utf8               isModuleSystemInited
  #244 = Utf8               setJavaLangInvokeInited
  #245 = Utf8               isJavaLangInvokeInited
  #246 = Utf8               isBooted
  #247 = Utf8               shutdown
  #248 = Utf8               isShutdown
  #249 = Utf8               maxDirectMemory
  #250 = Utf8               isDirectMemoryPageAligned
  #251 = Utf8               major
  #252 = Utf8               minor
  #253 = Utf8               isSupportedModuleDescriptorVersion
  #254 = Utf8               isSystemDomainLoader
  #255 = Utf8               (Ljava/lang/ClassLoader;)Z
  #256 = Utf8               loader
  #257 = Utf8               Ljava/lang/ClassLoader;
  #258 = Utf8               getSavedProperty
  #259 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #260 = Utf8               key
  #261 = Utf8               Ljava/lang/String;
  #262 = Utf8               getSavedProperties
  #263 = Utf8               ()Ljava/util/Map;
  #264 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #265 = Utf8               saveProperties
  #266 = Utf8               (Ljava/util/Map;)V
  #267 = Utf8               l
  #268 = Utf8               props
  #269 = Utf8               s
  #270 = Utf8               LocalVariableTypeTable
  #271 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V
  #272 = Utf8               initializeOSEnvironment
  #273 = Utf8               getFinalRefCount
  #274 = Utf8               getPeakFinalRefCount
  #275 = Utf8               addFinalRefCount
  #276 = Utf8               n
  #277 = Utf8               toThreadState
  #278 = Utf8               (I)Ljava/lang/Thread$State;
  #279 = Utf8               threadStatus
  #280 = Utf8               latestUserDefinedLoader
  #281 = Utf8               isSetUID
  #282 = Utf8               uid
  #283 = Utf8               euid
  #284 = Utf8               gid
  #285 = Utf8               egid
  #286 = Utf8               getNanoTimeAdjustment
  #287 = Utf8               (J)J
  #288 = Utf8               getRuntimeArguments
  #289 = Utf8               ()[Ljava/lang/String;
  #290 = Utf8               getBufferPools
  #291 = Utf8               ()Ljava/util/List;
  #292 = Utf8               ()Ljava/util/List<Ljdk/internal/misc/VM$BufferPool;>;
  #293 = Utf8               initialErr
  #294 = Utf8               <clinit>
  #295 = Utf8               SourceFile
  #296 = Utf8               VM.java
  #297 = Utf8               NestMembers
  #298 = Class              #299             // jdk/internal/misc/VM$BufferPool
  #299 = Utf8               jdk/internal/misc/VM$BufferPool
  #300 = Utf8               InnerClasses
  #301 = Class              #302             // java/lang/Thread
  #302 = Utf8               java/lang/Thread
  #303 = Utf8               State
  #304 = Utf8               BufferPoolsHolder
  #305 = Utf8               BufferPool
{
  private static final int JAVA_LANG_SYSTEM_INITED;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1
  
  private static final int MODULE_SYSTEM_INITED;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2
  
  private static final int SYSTEM_LOADER_INITIALIZING;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 3
  
  private static final int SYSTEM_BOOTED;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4
  
  private static final int SYSTEM_SHUTDOWN;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 5
  
  private static volatile int initLevel;
    descriptor: I
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE
  
  private static final java.lang.Object lock;
    descriptor: Ljava/lang/Object;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static boolean javaLangInvokeInited;
    descriptor: Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    RuntimeVisibleAnnotations:
      0: #218()
        jdk.internal.vm.annotation.Stable
  
  private static long directMemory;
    descriptor: J
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private static boolean pageAlignDirectMemory;
    descriptor: Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    RuntimeVisibleAnnotations:
      0: #218()
        jdk.internal.vm.annotation.Stable
  
  private static java.util.Map<java.lang.String, java.lang.String> savedProps;
    descriptor: Ljava/util/Map;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Signature: #220                        // Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  
  private static volatile int finalRefCount;
    descriptor: I
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE
  
  private static volatile int peakFinalRefCount;
    descriptor: I
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE
  
  private static final int JVMTI_THREAD_STATE_ALIVE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1
  
  private static final int JVMTI_THREAD_STATE_TERMINATED;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2
  
  private static final int JVMTI_THREAD_STATE_RUNNABLE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4
  
  private static final int JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024
  
  private static final int JVMTI_THREAD_STATE_WAITING_INDEFINITELY;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 16
  
  private static final int JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 32
  
  public jdk.internal.misc.VM();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljdk/internal/misc/VM;
  
  public static void initLevel(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=3, args_size=1
         0: getstatic     #7                  // Field lock:Ljava/lang/Object;
         3: dup                     
         4: astore_1                
         5: monitorenter            
         6: iload_0                 
         7: getstatic     #13                 // Field initLevel:I
        10: if_icmple     18                
        13: iload_0                 
        14: iconst_5                
        15: if_icmple     45                
        18: new           #17                 // class java/lang/InternalError
        21: dup                     
        22: new           #19                 // class java/lang/StringBuilder
        25: dup                     
        26: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
        29: ldc           #22                 // String Bad level: 
        31: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: iload_0                 
        35: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        38: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #35                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
        44: athrow                  
        45: iload_0                 
        46: putstatic     #13                 // Field initLevel:I
        49: getstatic     #7                  // Field lock:Ljava/lang/Object;
        52: invokevirtual #38                 // Method java/lang/Object.notifyAll:()V
        55: aload_1                 
        56: monitorexit             
        57: goto          65                
        60: astore_2                
        61: aload_1                 
        62: monitorexit             
        63: aload_2                 
        64: athrow                  
        65: return                  
      Exception table:
          from       to target type
             6       57    60  any
            60       63    60  any
      LineNumberTable:
        line 62: 0
        line 63: 6
        line 64: 18
        line 65: 45
        line 66: 49
        line 67: 55
        line 68: 65
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       66     0  value  I
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [class java/lang/Object]
        frame_type = 26 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
  
  public static int initLevel();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #13                 // Field initLevel:I
         3: ireturn                 
      LineNumberTable:
        line 74: 0
  
  public static void awaitInitLevel(int) throws java.lang.InterruptedException;
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=3, args_size=1
         0: getstatic     #7                  // Field lock:Ljava/lang/Object;
         3: dup                     
         4: astore_1                
         5: monitorenter            
         6: getstatic     #13                 // Field initLevel:I
         9: iload_0                 
        10: if_icmpge     22                
        13: getstatic     #7                  // Field lock:Ljava/lang/Object;
        16: invokevirtual #41                 // Method java/lang/Object.wait:()V
        19: goto          6                 
        22: aload_1                 
        23: monitorexit             
        24: goto          32                
        27: astore_2                
        28: aload_1                 
        29: monitorexit             
        30: aload_2                 
        31: athrow                  
        32: return                  
      Exception table:
          from       to target type
             6       24    27  any
            27       30    27  any
      LineNumberTable:
        line 81: 0
        line 82: 6
        line 83: 13
        line 85: 22
        line 86: 32
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       33     0  value  I
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [class java/lang/Object]
        frame_type = 15 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
    Exceptions:
      throws java.lang.InterruptedException
  
  public static boolean isModuleSystemInited();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #13                 // Field initLevel:I
         3: iconst_2                
         4: if_icmplt     11                
         7: iconst_1                
         8: goto          12                
        11: iconst_0                
        12: ireturn                 
      LineNumberTable:
        line 93: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static void setJavaLangInvokeInited();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=0, args_size=0
         0: getstatic     #44                 // Field javaLangInvokeInited:Z
         3: ifeq          16                
         6: new           #17                 // class java/lang/InternalError
         9: dup                     
        10: ldc           #48                 // String java.lang.invoke already inited
        12: invokespecial #35                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: iconst_1                
        17: putstatic     #44                 // Field javaLangInvokeInited:Z
        20: return                  
      LineNumberTable:
        line 98: 0
        line 99: 6
        line 101: 16
        line 102: 20
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
  
  public static boolean isJavaLangInvokeInited();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #44                 // Field javaLangInvokeInited:Z
         3: ireturn                 
      LineNumberTable:
        line 105: 0
  
  public static boolean isBooted();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #13                 // Field initLevel:I
         3: iconst_4                
         4: if_icmplt     11                
         7: iconst_1                
         8: goto          12                
        11: iconst_0                
        12: ireturn                 
      LineNumberTable:
        line 112: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static void shutdown();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: iconst_5                
         1: invokestatic  #50                 // Method initLevel:(I)V
         4: return                  
      LineNumberTable:
        line 122: 0
        line 123: 4
  
  public static boolean isShutdown();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #13                 // Field initLevel:I
         3: iconst_5                
         4: if_icmpne     11                
         7: iconst_1                
         8: goto          12                
        11: iconst_0                
        12: ireturn                 
      LineNumberTable:
        line 129: 0
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static long maxDirectMemory();
    descriptor: ()J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: getstatic     #53                 // Field directMemory:J
         3: lreturn                 
      LineNumberTable:
        line 147: 0
  
  public static boolean isDirectMemoryPageAligned();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #57                 // Field pageAlignDirectMemory:Z
         3: ireturn                 
      LineNumberTable:
        line 159: 0
  
  public static boolean isSupportedClassFileVersion(int, int);
    descriptor: (II)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: bipush        45                
         3: if_icmplt     13                
         6: iload_0                 
         7: invokestatic  #62                 // InterfaceMethod java/lang/classfile/ClassFile.latestMajorVersion:()I
        10: if_icmple     15                
        13: iconst_0                
        14: ireturn                 
        15: iload_0                 
        16: bipush        56                
        18: if_icmpge     23                
        21: iconst_1                
        22: ireturn                 
        23: iload_1                 
        24: ifeq          40                
        27: iload_1                 
        28: ldc           #66                 // int 65535
        30: if_icmpne     44                
        33: iload_0                 
        34: invokestatic  #62                 // InterfaceMethod java/lang/classfile/ClassFile.latestMajorVersion:()I
        37: if_icmpne     44                
        40: iconst_1                
        41: goto          45                
        44: iconst_0                
        45: ireturn                 
      LineNumberTable:
        line 175: 0
        line 177: 15
        line 179: 23
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  major  I
           0       46     1  minor  I
      StackMapTable: number_of_entries = 6
        frame_type = 13 /* same */
        frame_type = 1 /* same */
        frame_type = 7 /* same */
        frame_type = 16 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static boolean isSupportedModuleDescriptorVersion(int, int);
    descriptor: (II)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=2, args_size=2
         0: iload_0                 
         1: bipush        53                
         3: if_icmpge     8                 
         6: iconst_0                
         7: ireturn                 
         8: iload_0                 
         9: iload_1                 
        10: invokestatic  #67                 // Method isSupportedClassFileVersion:(II)Z
        13: ireturn                 
      LineNumberTable:
        line 189: 0
        line 190: 8
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  major  I
           0       14     1  minor  I
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */
  
  public static boolean isSystemDomainLoader(java.lang.ClassLoader);
    descriptor: (Ljava/lang/ClassLoader;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: ifnull        11                
         4: aload_0                 
         5: invokestatic  #71                 // Method java/lang/ClassLoader.getPlatformClassLoader:()Ljava/lang/ClassLoader;
         8: if_acmpne     15                
        11: iconst_1                
        12: goto          16                
        15: iconst_0                
        16: ireturn                 
      LineNumberTable:
        line 198: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       17     0  loader Ljava/lang/ClassLoader;
      StackMapTable: number_of_entries = 3
        frame_type = 11 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static java.lang.String getSavedProperty(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: getstatic     #77                 // Field savedProps:Ljava/util/Map;
         3: ifnonnull     16                
         6: new           #81                 // class java/lang/IllegalStateException
         9: dup                     
        10: ldc           #83                 // String Not yet initialized
        12: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: getstatic     #77                 // Field savedProps:Ljava/util/Map;
        19: aload_0                 
        20: invokeinterface #86, 2              // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        25: checkcast     #92                 // class java/lang/String
        28: areturn                 
      LineNumberTable:
        line 210: 0
        line 211: 6
        line 213: 16
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       29     0  key    Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
  
  public static java.util.Map<java.lang.String, java.lang.String> getSavedProperties();
    descriptor: ()Ljava/util/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=0, args_size=0
         0: getstatic     #77                 // Field savedProps:Ljava/util/Map;
         3: ifnonnull     16                
         6: new           #81                 // class java/lang/IllegalStateException
         9: dup                     
        10: ldc           #83                 // String Not yet initialized
        12: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: getstatic     #77                 // Field savedProps:Ljava/util/Map;
        19: invokestatic  #94                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
        22: areturn                 
      LineNumberTable:
        line 225: 0
        line 226: 6
        line 228: 16
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    Signature: #264                        // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  
  public static void saveProperties(java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=4, args_size=1
         0: invokestatic  #100                // Method initLevel:()I
         3: ifeq          16                
         6: new           #81                 // class java/lang/IllegalStateException
         9: dup                     
        10: ldc           #102                // String Wrong init level
        12: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        15: athrow                  
        16: getstatic     #77                 // Field savedProps:Ljava/util/Map;
        19: ifnonnull     26                
        22: aload_0                 
        23: putstatic     #77                 // Field savedProps:Ljava/util/Map;
        26: aload_0                 
        27: ldc           #104                // String sun.nio.MaxDirectMemorySize
        29: invokeinterface #86, 2              // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        34: checkcast     #92                 // class java/lang/String
        37: astore_1                
        38: aload_1                 
        39: ifnull        58                
        42: aload_1                 
        43: invokevirtual #106                // Method java/lang/String.isEmpty:()Z
        46: ifne          58                
        49: aload_1                 
        50: ldc           #110                // String -1
        52: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        55: ifeq          70                
        58: invokestatic  #116                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
        61: invokevirtual #122                // Method java/lang/Runtime.maxMemory:()J
        64: putstatic     #53                 // Field directMemory:J
        67: goto          87                
        70: aload_1                 
        71: invokestatic  #126                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
        74: lstore_2                
        75: lload_2                 
        76: ldc2_w        #132                // long -1l
        79: lcmp                    
        80: ifle          87                
        83: lload_2                 
        84: putstatic     #53                 // Field directMemory:J
        87: aload_0                 
        88: ldc           #134                // String sun.nio.PageAlignDirectMemory
        90: invokeinterface #86, 2              // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        95: checkcast     #92                 // class java/lang/String
        98: astore_1                
        99: ldc           #136                // String true
       101: aload_1                 
       102: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       105: ifeq          112               
       108: iconst_1                
       109: putstatic     #57                 // Field pageAlignDirectMemory:Z
       112: return                  
      LineNumberTable:
        line 238: 0
        line 239: 6
        line 243: 16
        line 244: 22
        line 253: 26
        line 254: 38
        line 256: 58
        line 258: 70
        line 259: 75
        line 260: 83
        line 264: 87
        line 265: 99
        line 266: 108
        line 267: 112
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          75       12     2  l      J
           0      113     0  props  Ljava/util/Map;
          38       75     1  s      Ljava/lang/String;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             0      113     0  props   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 6
        frame_type = 16 /* same */
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [class java/lang/String]
        frame_type = 11 /* same */
        frame_type = 16 /* same */
        frame_type = 24 /* same */
    Signature: #271                        // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V
  
  public static void initializeOSEnvironment();
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #100                // Method initLevel:()I
         3: ifne          9                 
         6: invokestatic  #138                // Method jdk/internal/misc/OSEnvironment.initialize:()V
         9: return                  
      LineNumberTable:
        line 273: 0
        line 274: 6
        line 276: 9
      StackMapTable: number_of_entries = 1
        frame_type = 9 /* same */
  
  public static int getFinalRefCount();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #143                // Field finalRefCount:I
         3: ireturn                 
      LineNumberTable:
        line 290: 0
  
  public static int getPeakFinalRefCount();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #146                // Field peakFinalRefCount:I
         3: ireturn                 
      LineNumberTable:
        line 299: 0
  
  public static void addFinalRefCount(int);
    descriptor: (I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: getstatic     #143                // Field finalRefCount:I
         3: iload_0                 
         4: iadd                    
         5: putstatic     #143                // Field finalRefCount:I
         8: getstatic     #143                // Field finalRefCount:I
        11: getstatic     #146                // Field peakFinalRefCount:I
        14: if_icmple     23                
        17: getstatic     #143                // Field finalRefCount:I
        20: putstatic     #146                // Field peakFinalRefCount:I
        23: return                  
      LineNumberTable:
        line 311: 0
        line 312: 8
        line 313: 17
        line 315: 23
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       24     0  n      I
      StackMapTable: number_of_entries = 1
        frame_type = 23 /* same */
  
  public static java.lang.Thread$State toThreadState(int);
    descriptor: (I)Ljava/lang/Thread$State;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=2, locals=1, args_size=1
         0: iload_0                 
         1: iconst_4                
         2: iand                    
         3: ifeq          10                
         6: getstatic     #149                // Field java/lang/Thread$State.RUNNABLE:Ljava/lang/Thread$State;
         9: areturn                 
        10: iload_0                 
        11: sipush        1024              
        14: iand                    
        15: ifeq          22                
        18: getstatic     #155                // Field java/lang/Thread$State.BLOCKED:Ljava/lang/Thread$State;
        21: areturn                 
        22: iload_0                 
        23: bipush        16                
        25: iand                    
        26: ifeq          33                
        29: getstatic     #158                // Field java/lang/Thread$State.WAITING:Ljava/lang/Thread$State;
        32: areturn                 
        33: iload_0                 
        34: bipush        32                
        36: iand                    
        37: ifeq          44                
        40: getstatic     #161                // Field java/lang/Thread$State.TIMED_WAITING:Ljava/lang/Thread$State;
        43: areturn                 
        44: iload_0                 
        45: iconst_2                
        46: iand                    
        47: ifeq          54                
        50: getstatic     #164                // Field java/lang/Thread$State.TERMINATED:Ljava/lang/Thread$State;
        53: areturn                 
        54: iload_0                 
        55: iconst_1                
        56: iand                    
        57: ifne          64                
        60: getstatic     #167                // Field java/lang/Thread$State.NEW:Ljava/lang/Thread$State;
        63: areturn                 
        64: getstatic     #149                // Field java/lang/Thread$State.RUNNABLE:Ljava/lang/Thread$State;
        67: areturn                 
      LineNumberTable:
        line 321: 0
        line 322: 6
        line 323: 10
        line 324: 18
        line 325: 22
        line 326: 29
        line 327: 33
        line 328: 40
        line 329: 44
        line 330: 50
        line 331: 54
        line 332: 60
        line 334: 64
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       68     0  threadStatus I
      StackMapTable: number_of_entries = 6
        frame_type = 10 /* same */
        frame_type = 11 /* same */
        frame_type = 10 /* same */
        frame_type = 10 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
  
  public static java.lang.ClassLoader latestUserDefinedLoader();
    descriptor: ()Ljava/lang/ClassLoader;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=1, args_size=0
         0: invokestatic  #170                // Method latestUserDefinedLoader0:()Ljava/lang/ClassLoader;
         3: astore_0                
         4: aload_0                 
         5: ifnull        12                
         8: aload_0                 
         9: goto          15                
        12: invokestatic  #71                 // Method java/lang/ClassLoader.getPlatformClassLoader:()Ljava/lang/ClassLoader;
        15: areturn                 
      LineNumberTable:
        line 355: 0
        line 356: 4
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           4       12     0  loader Ljava/lang/ClassLoader;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [class java/lang/ClassLoader]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/ClassLoader ]
  
  private static native java.lang.ClassLoader latestUserDefinedLoader0();
    descriptor: ()Ljava/lang/ClassLoader;
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  public static boolean isSetUID();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=4, locals=8, args_size=0
         0: invokestatic  #173                // Method getuid:()J
         3: lstore_0                
         4: invokestatic  #176                // Method geteuid:()J
         7: lstore_2                
         8: invokestatic  #179                // Method getgid:()J
        11: lstore        4                 
        13: invokestatic  #182                // Method getegid:()J
        16: lstore        6                 
        18: lload_0                 
        19: lload_2                 
        20: lcmp                    
        21: ifne          32                
        24: lload         4                 
        26: lload         6                 
        28: lcmp                    
        29: ifeq          36                
        32: iconst_1                
        33: goto          37                
        36: iconst_0                
        37: ireturn                 
      LineNumberTable:
        line 374: 0
        line 375: 4
        line 376: 8
        line 377: 13
        line 378: 18
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           4       34     0  uid    J
           8       30     2  euid   J
          13       25     4  gid    J
          18       20     6  egid   J
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [long, long, long, long]
          stack = []
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public static native long getuid();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static native long geteuid();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static native long getgid();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static native long getegid();
    descriptor: ()J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static native long getNanoTimeAdjustment(long);
    descriptor: (J)J
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  public static native java.lang.String[] getRuntimeArguments();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0109) ACC_PUBLIC, ACC_STATIC, ACC_NATIVE
  
  private static native void initialize();
    descriptor: ()V
    flags: (0x010a) ACC_PRIVATE, ACC_STATIC, ACC_NATIVE
  
  public static java.util.List<jdk.internal.misc.VM$BufferPool> getBufferPools();
    descriptor: ()Ljava/util/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: getstatic     #185                // Field jdk/internal/misc/VM$BufferPoolsHolder.BUFFER_POOLS:Ljava/util/List;
         3: areturn                 
      LineNumberTable:
        line 482: 0
    Signature: #292                        // ()Ljava/util/List<Ljdk/internal/misc/VM$BufferPool;>;
  
  public static java.io.PrintStream initialErr();
    descriptor: ()Ljava/io/PrintStream;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=0, args_size=0
         0: invokestatic  #191                // Method jdk/internal/access/SharedSecrets.getJavaLangAccess:()Ljdk/internal/access/JavaLangAccess;
         3: invokeinterface #197, 1             // InterfaceMethod jdk/internal/access/JavaLangAccess.initialSystemErr:()Ljava/io/PrintStream;
         8: areturn                 
      LineNumberTable:
        line 489: 0
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: new           #2                  // class java/lang/Object
         3: dup                     
         4: invokespecial #1                  // Method java/lang/Object."<init>":()V
         7: putstatic     #7                  // Field lock:Ljava/lang/Object;
        10: ldc2_w        #203                // long 67108864l
        13: putstatic     #53                 // Field directMemory:J
        16: invokestatic  #205                // Method initialize:()V
        19: return                  
      LineNumberTable:
        line 52: 0
        line 140: 10
        line 451: 16
        line 452: 19
}
SourceFile: "VM.java"
NestMembers:
  jdk/internal/misc/VM$BufferPoolsHolder
  jdk/internal/misc/VM$BufferPool
InnerClasses:
  public static final #303= #150 of #301;     // State=class java/lang/Thread$State of class java/lang/Thread
  private static #304= #186 of #8;            // BufferPoolsHolder=class jdk/internal/misc/VM$BufferPoolsHolder of class jdk/internal/misc/VM
  public static #305= #298 of #8;             // BufferPool=class jdk/internal/misc/VM$BufferPool of class jdk/internal/misc/VM
