---
source: class_file/src/lib.rs
expression: display
---
public class exception.runtime_exception_get_stack_trace.ThrowRuntimeExceptionGetStackTrace 
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                      //exception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
   #2 = Class              #4               // java/lang/Object
   #3 = NameAndType        #5:#6            // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Class              #8               // java/lang/NullPointerException
   #8 = Utf8               java/lang/NullPointerException
   #9 = Methodref          #7.#3            // java/lang/NullPointerException."<init>":()V
  #10 = Methodref          #11.#12          // exception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace.secondCall:()V
  #11 = Class              #13              // exception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace
  #12 = NameAndType        #14:#6           // secondCall:()V
  #13 = Utf8               exception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace
  #14 = Utf8               secondCall
  #15 = Methodref          #11.#16          // exception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace.firstCall:()V
  #16 = NameAndType        #17:#6           // firstCall:()V
  #17 = Utf8               firstCall
  #18 = Class              #19              // java/lang/RuntimeException
  #19 = Utf8               java/lang/RuntimeException
  #20 = Methodref          #18.#21          // java/lang/RuntimeException.getStackTrace:()[Ljava/lang/StackTraceElement;
  #21 = NameAndType        #22:#23          // getStackTrace:()[Ljava/lang/StackTraceElement;
  #22 = Utf8               getStackTrace
  #23 = Utf8               ()[Ljava/lang/StackTraceElement;
  #24 = Utf8               Code
  #25 = Utf8               LineNumberTable
  #26 = Utf8               LocalVariableTable
  #27 = Utf8               this
  #28 = Utf8               Lexception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace;
  #29 = Utf8               main
  #30 = Utf8               ([Ljava/lang/String;)V
  #31 = Utf8               e
  #32 = Utf8               Ljava/lang/RuntimeException;
  #33 = Utf8               args
  #34 = Utf8               [Ljava/lang/String;
  #35 = Utf8               StackMapTable
  #36 = Utf8               SourceFile
  #37 = Utf8               ThrowRuntimeExceptionGetStackTrace.java
{
  public exception.runtime_exception_get_stack_trace.ThrowRuntimeExceptionGetStackTrace();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return                  
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Lexception/runtime_exception_get_stack_trace/ThrowRuntimeExceptionGetStackTrace;
  
  static void secondCall();
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=2, locals=0, args_size=0
         0: new           #7                  // class java/lang/NullPointerException
         3: dup                     
         4: invokespecial #9                  // Method java/lang/NullPointerException."<init>":()V
         7: athrow                  
      LineNumberTable:
        line 5: 0
  
  static void firstCall();
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=0, locals=0, args_size=0
         0: invokestatic  #10                 // Method secondCall:()V
         3: return                  
      LineNumberTable:
        line 9: 0
        line 10: 3
  
  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=1, locals=3, args_size=1
         0: invokestatic  #15                 // Method firstCall:()V
         3: goto          12                
         6: astore_1                
         7: aload_1                 
         8: invokevirtual #20                 // Method java/lang/RuntimeException.getStackTrace:()[Ljava/lang/StackTraceElement;
        11: astore_2                
        12: return                  
      Exception table:
          from       to target type
             0        3     6  Class java/lang/RuntimeException
      LineNumberTable:
        line 14: 0
        line 17: 3
        line 15: 6
        line 16: 7
        line 18: 12
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           7        5     1  e      Ljava/lang/RuntimeException;
           0       13     0  args   [Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/RuntimeException ]
        frame_type = 5 /* same */
}
SourceFile: "ThrowRuntimeExceptionGetStackTrace.java"
