---
source: class_file/src/lib.rs
expression: display
---
public abstract class java.nio.charset.CharsetEncoder 
  minor version: 0
  major version: 68
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #14                      //java/nio/charset/CharsetEncoder
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 14, methods: 27, attributes: 1
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9            // java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
    #8 = Class              #10              // java/nio/charset/CodingErrorAction
    #9 = NameAndType        #11:#12          // REPORT:Ljava/nio/charset/CodingErrorAction;
   #10 = Utf8               java/nio/charset/CodingErrorAction
   #11 = Utf8               REPORT
   #12 = Utf8               Ljava/nio/charset/CodingErrorAction;
   #13 = Fieldref           #14.#15          // java/nio/charset/CharsetEncoder.malformedInputAction:Ljava/nio/charset/CodingErrorAction;
   #14 = Class              #16              // java/nio/charset/CharsetEncoder
   #15 = NameAndType        #17:#12          // malformedInputAction:Ljava/nio/charset/CodingErrorAction;
   #16 = Utf8               java/nio/charset/CharsetEncoder
   #17 = Utf8               malformedInputAction
   #18 = Fieldref           #14.#19          // java/nio/charset/CharsetEncoder.unmappableCharacterAction:Ljava/nio/charset/CodingErrorAction;
   #19 = NameAndType        #20:#12          // unmappableCharacterAction:Ljava/nio/charset/CodingErrorAction;
   #20 = Utf8               unmappableCharacterAction
   #21 = Fieldref           #14.#22          // java/nio/charset/CharsetEncoder.state:I
   #22 = NameAndType        #23:#24          // state:I
   #23 = Utf8               state
   #24 = Utf8               I
   #25 = Fieldref           #14.#26          // java/nio/charset/CharsetEncoder.cachedDecoder:Ljava/lang/ref/WeakReference;
   #26 = NameAndType        #27:#28          // cachedDecoder:Ljava/lang/ref/WeakReference;
   #27 = Utf8               cachedDecoder
   #28 = Utf8               Ljava/lang/ref/WeakReference;
   #29 = Fieldref           #14.#30          // java/nio/charset/CharsetEncoder.charset:Ljava/nio/charset/Charset;
   #30 = NameAndType        #31:#32          // charset:Ljava/nio/charset/Charset;
   #31 = Utf8               charset
   #32 = Utf8               Ljava/nio/charset/Charset;
   #33 = Class              #34              // java/lang/IllegalArgumentException
   #34 = Utf8               java/lang/IllegalArgumentException
   #35 = String             #36              // Non-positive averageBytesPerChar
   #36 = Utf8               Non-positive averageBytesPerChar
   #37 = Methodref          #33.#38          // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #38 = NameAndType        #5:#39           // "<init>":(Ljava/lang/String;)V
   #39 = Utf8               (Ljava/lang/String;)V
   #40 = String             #41              // Non-positive maxBytesPerChar
   #41 = Utf8               Non-positive maxBytesPerChar
   #42 = String             #43              // averageBytesPerChar exceeds maxBytesPerChar
   #43 = Utf8               averageBytesPerChar exceeds maxBytesPerChar
   #44 = Fieldref           #14.#45          // java/nio/charset/CharsetEncoder.replacement:[B
   #45 = NameAndType        #46:#47          // replacement:[B
   #46 = Utf8               replacement
   #47 = Utf8               [B
   #48 = Fieldref           #14.#49          // java/nio/charset/CharsetEncoder.averageBytesPerChar:F
   #49 = NameAndType        #50:#51          // averageBytesPerChar:F
   #50 = Utf8               averageBytesPerChar
   #51 = Utf8               F
   #52 = Fieldref           #14.#53          // java/nio/charset/CharsetEncoder.maxBytesPerChar:F
   #53 = NameAndType        #54:#51          // maxBytesPerChar:F
   #54 = Utf8               maxBytesPerChar
   #55 = Methodref          #14.#56          // java/nio/charset/CharsetEncoder.replaceWith:([B)Ljava/nio/charset/CharsetEncoder;
   #56 = NameAndType        #57:#58          // replaceWith:([B)Ljava/nio/charset/CharsetEncoder;
   #57 = Utf8               replaceWith
   #58 = Utf8               ([B)Ljava/nio/charset/CharsetEncoder;
   #59 = Methodref          #14.#60          // java/nio/charset/CharsetEncoder."<init>":(Ljava/nio/charset/Charset;FF[B)V
   #60 = NameAndType        #5:#61           // "<init>":(Ljava/nio/charset/Charset;FF[B)V
   #61 = Utf8               (Ljava/nio/charset/Charset;FF[B)V
   #62 = Methodref          #63.#64          // java/util/Arrays.copyOf:([BI)[B
   #63 = Class              #65              // java/util/Arrays
   #64 = NameAndType        #66:#67          // copyOf:([BI)[B
   #65 = Utf8               java/util/Arrays
   #66 = Utf8               copyOf
   #67 = Utf8               ([BI)[B
   #68 = String             #69              // Null replacement
   #69 = Utf8               Null replacement
   #70 = String             #71              // Empty replacement
   #71 = Utf8               Empty replacement
   #72 = String             #73              // Replacement too long
   #73 = Utf8               Replacement too long
   #74 = Methodref          #14.#75          // java/nio/charset/CharsetEncoder.isLegalReplacement:([B)Z
   #75 = NameAndType        #76:#77          // isLegalReplacement:([B)Z
   #76 = Utf8               isLegalReplacement
   #77 = Utf8               ([B)Z
   #78 = String             #79              // Illegal replacement
   #79 = Utf8               Illegal replacement
   #80 = Methodref          #14.#81          // java/nio/charset/CharsetEncoder.implReplaceWith:([B)V
   #81 = NameAndType        #82:#83          // implReplaceWith:([B)V
   #82 = Utf8               implReplaceWith
   #83 = Utf8               ([B)V
   #84 = Methodref          #85.#86          // java/lang/ref/WeakReference.get:()Ljava/lang/Object;
   #85 = Class              #87              // java/lang/ref/WeakReference
   #86 = NameAndType        #88:#89          // get:()Ljava/lang/Object;
   #87 = Utf8               java/lang/ref/WeakReference
   #88 = Utf8               get
   #89 = Utf8               ()Ljava/lang/Object;
   #90 = Class              #91              // java/nio/charset/CharsetDecoder
   #91 = Utf8               java/nio/charset/CharsetDecoder
   #92 = Methodref          #14.#93          // java/nio/charset/CharsetEncoder.charset:()Ljava/nio/charset/Charset;
   #93 = NameAndType        #31:#94          // charset:()Ljava/nio/charset/Charset;
   #94 = Utf8               ()Ljava/nio/charset/Charset;
   #95 = Methodref          #96.#97          // java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
   #96 = Class              #98              // java/nio/charset/Charset
   #97 = NameAndType        #99:#100         // newDecoder:()Ljava/nio/charset/CharsetDecoder;
   #98 = Utf8               java/nio/charset/Charset
   #99 = Utf8               newDecoder
  #100 = Utf8               ()Ljava/nio/charset/CharsetDecoder;
  #101 = Methodref          #90.#102         // java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #102 = NameAndType        #103:#104        // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #103 = Utf8               onMalformedInput
  #104 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #105 = Methodref          #90.#106         // java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #106 = NameAndType        #107:#104        // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
  #107 = Utf8               onUnmappableCharacter
  #108 = Methodref          #85.#109         // java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
  #109 = NameAndType        #5:#110          // "<init>":(Ljava/lang/Object;)V
  #110 = Utf8               (Ljava/lang/Object;)V
  #111 = Methodref          #90.#112         // java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
  #112 = NameAndType        #113:#100        // reset:()Ljava/nio/charset/CharsetDecoder;
  #113 = Utf8               reset
  #114 = Methodref          #115.#116        // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
  #115 = Class              #117             // java/nio/ByteBuffer
  #116 = NameAndType        #118:#119        // wrap:([B)Ljava/nio/ByteBuffer;
  #117 = Utf8               java/nio/ByteBuffer
  #118 = Utf8               wrap
  #119 = Utf8               ([B)Ljava/nio/ByteBuffer;
  #120 = Methodref          #115.#121        // java/nio/ByteBuffer.remaining:()I
  #121 = NameAndType        #122:#123        // remaining:()I
  #122 = Utf8               remaining
  #123 = Utf8               ()I
  #124 = Methodref          #90.#125         // java/nio/charset/CharsetDecoder.maxCharsPerByte:()F
  #125 = NameAndType        #126:#127        // maxCharsPerByte:()F
  #126 = Utf8               maxCharsPerByte
  #127 = Utf8               ()F
  #128 = Methodref          #129.#130        // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
  #129 = Class              #131             // java/nio/CharBuffer
  #130 = NameAndType        #132:#133        // allocate:(I)Ljava/nio/CharBuffer;
  #131 = Utf8               java/nio/CharBuffer
  #132 = Utf8               allocate
  #133 = Utf8               (I)Ljava/nio/CharBuffer;
  #134 = Methodref          #90.#135         // java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
  #135 = NameAndType        #136:#137        // decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
  #136 = Utf8               decode
  #137 = Utf8               (Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
  #138 = Methodref          #139.#140        // java/nio/charset/CoderResult.isError:()Z
  #139 = Class              #141             // java/nio/charset/CoderResult
  #140 = NameAndType        #142:#143        // isError:()Z
  #141 = Utf8               java/nio/charset/CoderResult
  #142 = Utf8               isError
  #143 = Utf8               ()Z
  #144 = String             #145             // Null action
  #145 = Utf8               Null action
  #146 = Methodref          #14.#147         // java/nio/charset/CharsetEncoder.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V
  #147 = NameAndType        #148:#149        // implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V
  #148 = Utf8               implOnMalformedInput
  #149 = Utf8               (Ljava/nio/charset/CodingErrorAction;)V
  #150 = Methodref          #14.#151         // java/nio/charset/CharsetEncoder.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V
  #151 = NameAndType        #152:#149        // implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V
  #152 = Utf8               implOnUnmappableCharacter
  #153 = Methodref          #14.#154         // java/nio/charset/CharsetEncoder.throwIllegalStateException:(II)V
  #154 = NameAndType        #155:#156        // throwIllegalStateException:(II)V
  #155 = Utf8               throwIllegalStateException
  #156 = Utf8               (II)V
  #157 = Methodref          #14.#158         // java/nio/charset/CharsetEncoder.encodeLoop:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #158 = NameAndType        #159:#160        // encodeLoop:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #159 = Utf8               encodeLoop
  #160 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #161 = Class              #162             // java/lang/RuntimeException
  #162 = Utf8               java/lang/RuntimeException
  #163 = Class              #164             // java/nio/charset/CoderMalfunctionError
  #164 = Utf8               java/nio/charset/CoderMalfunctionError
  #165 = Methodref          #163.#166        // java/nio/charset/CoderMalfunctionError."<init>":(Ljava/lang/Exception;)V
  #166 = NameAndType        #5:#167          // "<init>":(Ljava/lang/Exception;)V
  #167 = Utf8               (Ljava/lang/Exception;)V
  #168 = Methodref          #139.#169        // java/nio/charset/CoderResult.isOverflow:()Z
  #169 = NameAndType        #170:#143        // isOverflow:()Z
  #170 = Utf8               isOverflow
  #171 = Methodref          #139.#172        // java/nio/charset/CoderResult.isUnderflow:()Z
  #172 = NameAndType        #173:#143        // isUnderflow:()Z
  #173 = Utf8               isUnderflow
  #174 = Methodref          #129.#175        // java/nio/CharBuffer.hasRemaining:()Z
  #175 = NameAndType        #176:#143        // hasRemaining:()Z
  #176 = Utf8               hasRemaining
  #177 = Methodref          #129.#121        // java/nio/CharBuffer.remaining:()I
  #178 = Methodref          #139.#179        // java/nio/charset/CoderResult.malformedForLength:(I)Ljava/nio/charset/CoderResult;
  #179 = NameAndType        #180:#181        // malformedForLength:(I)Ljava/nio/charset/CoderResult;
  #180 = Utf8               malformedForLength
  #181 = Utf8               (I)Ljava/nio/charset/CoderResult;
  #182 = Methodref          #139.#183        // java/nio/charset/CoderResult.isMalformed:()Z
  #183 = NameAndType        #184:#143        // isMalformed:()Z
  #184 = Utf8               isMalformed
  #185 = Methodref          #139.#186        // java/nio/charset/CoderResult.isUnmappable:()Z
  #186 = NameAndType        #187:#143        // isUnmappable:()Z
  #187 = Utf8               isUnmappable
  #188 = Fieldref           #14.#189         // java/nio/charset/CharsetEncoder.$assertionsDisabled:Z
  #189 = NameAndType        #190:#191        // $assertionsDisabled:Z
  #190 = Utf8               $assertionsDisabled
  #191 = Utf8               Z
  #192 = Class              #193             // java/lang/AssertionError
  #193 = Utf8               java/lang/AssertionError
  #194 = Methodref          #139.#195        // java/nio/charset/CoderResult.toString:()Ljava/lang/String;
  #195 = NameAndType        #196:#197        // toString:()Ljava/lang/String;
  #196 = Utf8               toString
  #197 = Utf8               ()Ljava/lang/String;
  #198 = Methodref          #192.#109        // java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
  #199 = Fieldref           #8.#200          // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
  #200 = NameAndType        #201:#12         // REPLACE:Ljava/nio/charset/CodingErrorAction;
  #201 = Utf8               REPLACE
  #202 = Fieldref           #139.#203        // java/nio/charset/CoderResult.OVERFLOW:Ljava/nio/charset/CoderResult;
  #203 = NameAndType        #204:#205        // OVERFLOW:Ljava/nio/charset/CoderResult;
  #204 = Utf8               OVERFLOW
  #205 = Utf8               Ljava/nio/charset/CoderResult;
  #206 = Methodref          #115.#207        // java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
  #207 = NameAndType        #208:#119        // put:([B)Ljava/nio/ByteBuffer;
  #208 = Utf8               put
  #209 = Fieldref           #8.#210          // java/nio/charset/CodingErrorAction.IGNORE:Ljava/nio/charset/CodingErrorAction;
  #210 = NameAndType        #211:#12         // IGNORE:Ljava/nio/charset/CodingErrorAction;
  #211 = Utf8               IGNORE
  #212 = Methodref          #129.#213        // java/nio/CharBuffer.position:()I
  #213 = NameAndType        #214:#123        // position:()I
  #214 = Utf8               position
  #215 = Methodref          #139.#216        // java/nio/charset/CoderResult.length:()I
  #216 = NameAndType        #217:#123        // length:()I
  #217 = Utf8               length
  #218 = Methodref          #129.#219        // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;
  #219 = NameAndType        #214:#133        // position:(I)Ljava/nio/CharBuffer;
  #220 = Methodref          #192.#3          // java/lang/AssertionError."<init>":()V
  #221 = Methodref          #14.#222         // java/nio/charset/CharsetEncoder.implFlush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #222 = NameAndType        #223:#224        // implFlush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #223 = Utf8               implFlush
  #224 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #225 = Fieldref           #139.#226        // java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
  #226 = NameAndType        #227:#205        // UNDERFLOW:Ljava/nio/charset/CoderResult;
  #227 = Utf8               UNDERFLOW
  #228 = Methodref          #14.#229         // java/nio/charset/CharsetEncoder.implReset:()V
  #229 = NameAndType        #230:#6          // implReset:()V
  #230 = Utf8               implReset
  #231 = Methodref          #14.#232         // java/nio/charset/CharsetEncoder.averageBytesPerChar:()F
  #232 = NameAndType        #50:#127         // averageBytesPerChar:()F
  #233 = Class              #234             // jdk/internal/util/ArraysSupport
  #234 = Utf8               jdk/internal/util/ArraysSupport
  #235 = Integer            2147483639
  #236 = Methodref          #237.#238        // java/lang/Math.min:(II)I
  #237 = Class              #239             // java/lang/Math
  #238 = NameAndType        #240:#241        // min:(II)I
  #239 = Utf8               java/lang/Math
  #240 = Utf8               min
  #241 = Utf8               (II)I
  #242 = Methodref          #115.#243        // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
  #243 = NameAndType        #132:#244        // allocate:(I)Ljava/nio/ByteBuffer;
  #244 = Utf8               (I)Ljava/nio/ByteBuffer;
  #245 = Methodref          #14.#246         // java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
  #246 = NameAndType        #113:#247        // reset:()Ljava/nio/charset/CharsetEncoder;
  #247 = Utf8               ()Ljava/nio/charset/CharsetEncoder;
  #248 = Methodref          #14.#249         // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #249 = NameAndType        #250:#251        // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #250 = Utf8               encode
  #251 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #252 = Methodref          #14.#253         // java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #253 = NameAndType        #254:#224        // flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
  #254 = Utf8               flush
  #255 = Methodref          #233.#256        // jdk/internal/util/ArraysSupport.newLength:(III)I
  #256 = NameAndType        #257:#258        // newLength:(III)I
  #257 = Utf8               newLength
  #258 = Utf8               (III)I
  #259 = Methodref          #115.#260        // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
  #260 = NameAndType        #261:#262        // flip:()Ljava/nio/ByteBuffer;
  #261 = Utf8               flip
  #262 = Utf8               ()Ljava/nio/ByteBuffer;
  #263 = Methodref          #115.#264        // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #264 = NameAndType        #208:#265        // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #265 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #266 = Methodref          #139.#267        // java/nio/charset/CoderResult.throwException:()V
  #267 = NameAndType        #268:#6          // throwException:()V
  #268 = Utf8               throwException
  #269 = Methodref          #14.#270         // java/nio/charset/CharsetEncoder.malformedInputAction:()Ljava/nio/charset/CodingErrorAction;
  #270 = NameAndType        #17:#271         // malformedInputAction:()Ljava/nio/charset/CodingErrorAction;
  #271 = Utf8               ()Ljava/nio/charset/CodingErrorAction;
  #272 = Methodref          #14.#273         // java/nio/charset/CharsetEncoder.unmappableCharacterAction:()Ljava/nio/charset/CodingErrorAction;
  #273 = NameAndType        #20:#271         // unmappableCharacterAction:()Ljava/nio/charset/CodingErrorAction;
  #274 = Methodref          #14.#275         // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #275 = NameAndType        #103:#276        // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #276 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #277 = Methodref          #14.#278         // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #278 = NameAndType        #107:#276        // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #279 = Methodref          #14.#280         // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
  #280 = NameAndType        #250:#281        // encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
  #281 = Utf8               (Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
  #282 = Class              #283             // java/nio/charset/CharacterCodingException
  #283 = Utf8               java/nio/charset/CharacterCodingException
  #284 = Methodref          #129.#285        // java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
  #285 = NameAndType        #208:#286        // put:(C)Ljava/nio/CharBuffer;
  #286 = Utf8               (C)Ljava/nio/CharBuffer;
  #287 = Methodref          #129.#288        // java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;
  #288 = NameAndType        #261:#289        // flip:()Ljava/nio/CharBuffer;
  #289 = Utf8               ()Ljava/nio/CharBuffer;
  #290 = Methodref          #14.#291         // java/nio/charset/CharsetEncoder.canEncode:(Ljava/nio/CharBuffer;)Z
  #291 = NameAndType        #292:#293        // canEncode:(Ljava/nio/CharBuffer;)Z
  #292 = Utf8               canEncode
  #293 = Utf8               (Ljava/nio/CharBuffer;)Z
  #294 = Methodref          #129.#295        // java/nio/CharBuffer.duplicate:()Ljava/nio/CharBuffer;
  #295 = NameAndType        #296:#289        // duplicate:()Ljava/nio/CharBuffer;
  #296 = Utf8               duplicate
  #297 = InterfaceMethodref #298.#195        // java/lang/CharSequence.toString:()Ljava/lang/String;
  #298 = Class              #299             // java/lang/CharSequence
  #299 = Utf8               java/lang/CharSequence
  #300 = Methodref          #129.#301        // java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #301 = NameAndType        #118:#302        // wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #302 = Utf8               (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #303 = Class              #304             // java/lang/IllegalStateException
  #304 = Utf8               java/lang/IllegalStateException
  #305 = Class              #306             // java/lang/StringBuilder
  #306 = Utf8               java/lang/StringBuilder
  #307 = Methodref          #305.#3          // java/lang/StringBuilder."<init>":()V
  #308 = String             #309             // Current state = 
  #309 = Utf8               Current state = 
  #310 = Methodref          #305.#311        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #311 = NameAndType        #312:#313        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #312 = Utf8               append
  #313 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #314 = Fieldref           #14.#315         // java/nio/charset/CharsetEncoder.stateNames:[Ljava/lang/String;
  #315 = NameAndType        #316:#317        // stateNames:[Ljava/lang/String;
  #316 = Utf8               stateNames
  #317 = Utf8               [Ljava/lang/String;
  #318 = String             #319             // , new state = 
  #319 = Utf8               , new state = 
  #320 = Methodref          #305.#195        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #321 = Methodref          #303.#38         // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
  #322 = Methodref          #323.#324        // java/lang/Class.desiredAssertionStatus:()Z
  #323 = Class              #325             // java/lang/Class
  #324 = NameAndType        #326:#143        // desiredAssertionStatus:()Z
  #325 = Utf8               java/lang/Class
  #326 = Utf8               desiredAssertionStatus
  #327 = Class              #328             // java/lang/String
  #328 = Utf8               java/lang/String
  #329 = String             #330             // RESET
  #330 = Utf8               RESET
  #331 = String             #332             // CODING
  #332 = Utf8               CODING
  #333 = String             #334             // CODING_END
  #334 = Utf8               CODING_END
  #335 = String             #336             // FLUSHED
  #336 = Utf8               FLUSHED
  #337 = Utf8               ST_RESET
  #338 = Utf8               ConstantValue
  #339 = Integer            0
  #340 = Utf8               ST_CODING
  #341 = Integer            1
  #342 = Utf8               ST_END
  #343 = Integer            2
  #344 = Utf8               ST_FLUSHED
  #345 = Integer            3
  #346 = Utf8               Signature
  #347 = Utf8               Ljava/lang/ref/WeakReference<Ljava/nio/charset/CharsetDecoder;>;
  #348 = Utf8               Code
  #349 = Utf8               LineNumberTable
  #350 = Utf8               LocalVariableTable
  #351 = Utf8               this
  #352 = Utf8               Ljava/nio/charset/CharsetEncoder;
  #353 = Utf8               cs
  #354 = Utf8               StackMapTable
  #355 = Class              #47              // "[B"
  #356 = Utf8               (Ljava/nio/charset/Charset;FF)V
  #357 = Utf8               ()[B
  #358 = Utf8               newReplacement
  #359 = Utf8               len
  #360 = Utf8               repl
  #361 = Utf8               wr
  #362 = Utf8               dec
  #363 = Utf8               Ljava/nio/charset/CharsetDecoder;
  #364 = Utf8               bb
  #365 = Utf8               Ljava/nio/ByteBuffer;
  #366 = Utf8               cb
  #367 = Utf8               Ljava/nio/CharBuffer;
  #368 = Utf8               cr
  #369 = Utf8               LocalVariableTypeTable
  #370 = Utf8               newAction
  #371 = Utf8               x
  #372 = Utf8               Ljava/lang/RuntimeException;
  #373 = Utf8               action
  #374 = Utf8               in
  #375 = Utf8               out
  #376 = Utf8               endOfInput
  #377 = Utf8               newState
  #378 = Utf8               o
  #379 = Utf8               n
  #380 = Utf8               Exceptions
  #381 = Utf8               Ljava/nio/charset/CharacterCodingException;
  #382 = Utf8               ma
  #383 = Utf8               ua
  #384 = Class              #385             // java/lang/Throwable
  #385 = Utf8               java/lang/Throwable
  #386 = Utf8               (C)Z
  #387 = Utf8               c
  #388 = Utf8               C
  #389 = Utf8               (Ljava/lang/CharSequence;)Z
  #390 = Utf8               Ljava/lang/CharSequence;
  #391 = Utf8               from
  #392 = Utf8               to
  #393 = Utf8               <clinit>
  #394 = Utf8               SourceFile
  #395 = Utf8               CharsetEncoder.java
{
  private final java.nio.charset.Charset charset;
    descriptor: Ljava/nio/charset/Charset;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private final float averageBytesPerChar;
    descriptor: F
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private final float maxBytesPerChar;
    descriptor: F
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private byte[] replacement;
    descriptor: [B
    flags: (0x0002) ACC_PRIVATE
  
  private java.nio.charset.CodingErrorAction malformedInputAction;
    descriptor: Ljava/nio/charset/CodingErrorAction;
    flags: (0x0002) ACC_PRIVATE
  
  private java.nio.charset.CodingErrorAction unmappableCharacterAction;
    descriptor: Ljava/nio/charset/CodingErrorAction;
    flags: (0x0002) ACC_PRIVATE
  
  private static final int ST_RESET;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 0
  
  private static final int ST_CODING;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1
  
  private static final int ST_END;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2
  
  private static final int ST_FLUSHED;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 3
  
  private int state;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE
  
  private static java.lang.String[] stateNames;
    descriptor: [Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
  
  private java.lang.ref.WeakReference<java.nio.charset.CharsetDecoder> cachedDecoder;
    descriptor: Ljava/lang/ref/WeakReference;
    flags: (0x0002) ACC_PRIVATE
    Signature: #347                        // Ljava/lang/ref/WeakReference<Ljava/nio/charset/CharsetDecoder;>;
  
  static final boolean $assertionsDisabled;
    descriptor: Z
    flags: (0x1018) ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
  
  protected java.nio.charset.CharsetEncoder(java.nio.charset.Charset, float, float, byte[]);
    descriptor: (Ljava/nio/charset/Charset;FF[B)V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=3, locals=5, args_size=5
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0                 
         5: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
         8: putfield      #13                 // Field malformedInputAction:Ljava/nio/charset/CodingErrorAction;
        11: aload_0                 
        12: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
        15: putfield      #18                 // Field unmappableCharacterAction:Ljava/nio/charset/CodingErrorAction;
        18: aload_0                 
        19: iconst_0                
        20: putfield      #21                 // Field state:I
        23: aload_0                 
        24: aconst_null             
        25: putfield      #25                 // Field cachedDecoder:Ljava/lang/ref/WeakReference;
        28: aload_0                 
        29: aload_1                 
        30: putfield      #29                 // Field charset:Ljava/nio/charset/Charset;
        33: fload_2                 
        34: fconst_0                
        35: fcmpl                   
        36: ifgt          49                
        39: new           #33                 // class java/lang/IllegalArgumentException
        42: dup                     
        43: ldc           #35                 // String Non-positive averageBytesPerChar
        45: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        48: athrow                  
        49: fload_3                 
        50: fconst_0                
        51: fcmpl                   
        52: ifgt          65                
        55: new           #33                 // class java/lang/IllegalArgumentException
        58: dup                     
        59: ldc           #40                 // String Non-positive maxBytesPerChar
        61: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        64: athrow                  
        65: fload_2                 
        66: fload_3                 
        67: fcmpl                   
        68: ifle          81                
        71: new           #33                 // class java/lang/IllegalArgumentException
        74: dup                     
        75: ldc           #42                 // String averageBytesPerChar exceeds maxBytesPerChar
        77: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        80: athrow                  
        81: aload_0                 
        82: aload         4                 
        84: putfield      #44                 // Field replacement:[B
        87: aload_0                 
        88: fload_2                 
        89: putfield      #48                 // Field averageBytesPerChar:F
        92: aload_0                 
        93: fload_3                 
        94: putfield      #52                 // Field maxBytesPerChar:F
        97: aload_0                 
        98: aload         4                 
       100: invokevirtual #55                 // Method replaceWith:([B)Ljava/nio/charset/CharsetEncoder;
       103: pop                     
       104: return                  
      LineNumberTable:
        line 192: 0
        line 145: 4
        line 147: 11
        line 157: 18
        line 322: 23
        line 193: 28
        line 195: 33
        line 196: 39
        line 199: 49
        line 200: 55
        line 202: 65
        line 203: 71
        line 206: 81
        line 207: 87
        line 208: 92
        line 209: 97
        line 210: 104
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      105     0  this   Ljava/nio/charset/CharsetEncoder;
           0      105     1  cs     Ljava/nio/charset/Charset;
           0      105     2  averageBytesPerChar F
           0      105     3  maxBytesPerChar F
           0      105     4  replacement [B
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [class java/nio/charset/CharsetEncoder, class java/nio/charset/Charset, float, float, class "[B"]
          stack = []
        frame_type = 15 /* same */
        frame_type = 15 /* same */
  
  protected java.nio.charset.CharsetEncoder(java.nio.charset.Charset, float, float);
    descriptor: (Ljava/nio/charset/Charset;FF)V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=8, locals=4, args_size=4
         0: aload_0                 
         1: aload_1                 
         2: fload_2                 
         3: fload_3                 
         4: iconst_1                
         5: newarray      byte              
         7: dup                     
         8: iconst_0                
         9: bipush        63                
        11: bastore                 
        12: invokespecial #59                 // Method "<init>":(Ljava/nio/charset/Charset;FF[B)V
        15: return                  
      LineNumberTable:
        line 235: 0
        line 238: 15
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       16     0  this   Ljava/nio/charset/CharsetEncoder;
           0       16     1  cs     Ljava/nio/charset/Charset;
           0       16     2  averageBytesPerChar F
           0       16     3  maxBytesPerChar F
  
  public final java.nio.charset.Charset charset();
    descriptor: ()Ljava/nio/charset/Charset;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #29                 // Field charset:Ljava/nio/charset/Charset;
         4: areturn                 
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/charset/CharsetEncoder;
  
  public final byte[] replacement();
    descriptor: ()[B
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #44                 // Field replacement:[B
         4: aload_0                 
         5: getfield      #44                 // Field replacement:[B
         8: arraylength             
         9: invokestatic  #62                 // Method java/util/Arrays.copyOf:([BI)[B
        12: areturn                 
      LineNumberTable:
        line 260: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  this   Ljava/nio/charset/CharsetEncoder;
  
  public final java.nio.charset.CharsetEncoder replaceWith(byte[]);
    descriptor: ([B)Ljava/nio/charset/CharsetEncoder;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=3, locals=3, args_size=2
         0: aload_1                 
         1: ifnonnull     14                
         4: new           #33                 // class java/lang/IllegalArgumentException
         7: dup                     
         8: ldc           #68                 // String Null replacement
        10: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: aload_1                 
        15: arraylength             
        16: istore_2                
        17: iload_2                 
        18: ifne          31                
        21: new           #33                 // class java/lang/IllegalArgumentException
        24: dup                     
        25: ldc           #70                 // String Empty replacement
        27: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        30: athrow                  
        31: iload_2                 
        32: i2f                     
        33: aload_0                 
        34: getfield      #52                 // Field maxBytesPerChar:F
        37: fcmpl                   
        38: ifle          51                
        41: new           #33                 // class java/lang/IllegalArgumentException
        44: dup                     
        45: ldc           #72                 // String Replacement too long
        47: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        50: athrow                  
        51: aload_0                 
        52: aload_1                 
        53: invokevirtual #74                 // Method isLegalReplacement:([B)Z
        56: ifne          69                
        59: new           #33                 // class java/lang/IllegalArgumentException
        62: dup                     
        63: ldc           #78                 // String Illegal replacement
        65: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        68: athrow                  
        69: aload_0                 
        70: aload_1                 
        71: aload_1                 
        72: arraylength             
        73: invokestatic  #62                 // Method java/util/Arrays.copyOf:([BI)[B
        76: putfield      #44                 // Field replacement:[B
        79: aload_0                 
        80: aload_0                 
        81: getfield      #44                 // Field replacement:[B
        84: invokevirtual #80                 // Method implReplaceWith:([B)V
        87: aload_0                 
        88: areturn                 
      LineNumberTable:
        line 289: 0
        line 290: 4
        line 291: 14
        line 292: 17
        line 293: 21
        line 294: 31
        line 295: 41
        line 300: 51
        line 301: 59
        line 302: 69
        line 304: 79
        line 305: 87
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       89     0  this   Ljava/nio/charset/CharsetEncoder;
           0       89     1  newReplacement [B
          17       72     2  len    I
      StackMapTable: number_of_entries = 4
        frame_type = 14 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [int]
        frame_type = 19 /* same */
        frame_type = 17 /* same */
  
  protected void implReplaceWith(byte[]);
    descriptor: ([B)V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=0, locals=2, args_size=2
         0: return                  
      LineNumberTable:
        line 318: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        1     0  this   Ljava/nio/charset/CharsetEncoder;
           0        1     1  newReplacement [B
  
  public boolean isLegalReplacement(byte[]);
    descriptor: ([B)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=4, locals=7, args_size=2
         0: aload_0                 
         1: getfield      #25                 // Field cachedDecoder:Ljava/lang/ref/WeakReference;
         4: astore_2                
         5: aconst_null             
         6: astore_3                
         7: aload_2                 
         8: ifnull        23                
        11: aload_2                 
        12: invokevirtual #84                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
        15: checkcast     #90                 // class java/nio/charset/CharsetDecoder
        18: dup                     
        19: astore_3                
        20: ifnonnull     62                
        23: aload_0                 
        24: invokevirtual #92                 // Method charset:()Ljava/nio/charset/Charset;
        27: invokevirtual #95                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
        30: astore_3                
        31: aload_3                 
        32: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
        35: invokevirtual #101                // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
        38: pop                     
        39: aload_3                 
        40: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
        43: invokevirtual #105                // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;
        46: pop                     
        47: aload_0                 
        48: new           #85                 // class java/lang/ref/WeakReference
        51: dup                     
        52: aload_3                 
        53: invokespecial #108                // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
        56: putfield      #25                 // Field cachedDecoder:Ljava/lang/ref/WeakReference;
        59: goto          67                
        62: aload_3                 
        63: invokevirtual #111                // Method java/nio/charset/CharsetDecoder.reset:()Ljava/nio/charset/CharsetDecoder;
        66: pop                     
        67: aload_1                 
        68: invokestatic  #114                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
        71: astore        4                 
        73: aload         4                 
        75: invokevirtual #120                // Method java/nio/ByteBuffer.remaining:()I
        78: i2f                     
        79: aload_3                 
        80: invokevirtual #124                // Method java/nio/charset/CharsetDecoder.maxCharsPerByte:()F
        83: fmul                    
        84: f2i                     
        85: invokestatic  #128                // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
        88: astore        5                 
        90: aload_3                 
        91: aload         4                 
        93: aload         5                 
        95: iconst_1                
        96: invokevirtual #134                // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;
        99: astore        6                 
       101: aload         6                 
       103: invokevirtual #138                // Method java/nio/charset/CoderResult.isError:()Z
       106: ifne          113               
       109: iconst_1                
       110: goto          114               
       113: iconst_0                
       114: ireturn                 
      LineNumberTable:
        line 341: 0
        line 342: 5
        line 343: 7
        line 344: 23
        line 345: 31
        line 346: 39
        line 347: 47
        line 349: 62
        line 351: 67
        line 352: 73
        line 353: 80
        line 352: 85
        line 354: 90
        line 355: 101
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0      115     0  this   Ljava/nio/charset/CharsetEncoder;
           0      115     1  repl   [B
           5      110     2  wr     Ljava/lang/ref/WeakReference;
           7      108     3  dec    Ljava/nio/charset/CharsetDecoder;
          73       42     4  bb     Ljava/nio/ByteBuffer;
          90       25     5  cb     Ljava/nio/CharBuffer;
         101       14     6  cr     Ljava/nio/charset/CoderResult;
      LocalVariableTypeTable:
         Start   Length  Slot  Name   Signature
             5      110     2  wr     Ljava/lang/ref/WeakReference<Ljava/nio/charset/CharsetDecoder;>;
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [class java/lang/ref/WeakReference, class java/nio/charset/CharsetDecoder]
        frame_type = 38 /* same */
        frame_type = 4 /* same */
        frame_type = 254 /* append */
          offset_delta = 45
          locals = [class java/nio/ByteBuffer, class java/nio/CharBuffer, class java/nio/charset/CoderResult]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public java.nio.charset.CodingErrorAction malformedInputAction();
    descriptor: ()Ljava/nio/charset/CodingErrorAction;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #13                 // Field malformedInputAction:Ljava/nio/charset/CodingErrorAction;
         4: areturn                 
      LineNumberTable:
        line 366: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/charset/CharsetEncoder;
  
  public final java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction);
    descriptor: (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_1                 
         1: ifnonnull     14                
         4: new           #33                 // class java/lang/IllegalArgumentException
         7: dup                     
         8: ldc           #144                // String Null action
        10: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: aload_0                 
        15: aload_1                 
        16: putfield      #13                 // Field malformedInputAction:Ljava/nio/charset/CodingErrorAction;
        19: aload_0                 
        20: aload_1                 
        21: invokevirtual #146                // Method implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V
        24: aload_0                 
        25: areturn                 
      LineNumberTable:
        line 383: 0
        line 384: 4
        line 385: 14
        line 386: 19
        line 387: 24
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       26     0  this   Ljava/nio/charset/CharsetEncoder;
           0       26     1  newAction Ljava/nio/charset/CodingErrorAction;
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
  
  protected void implOnMalformedInput(java.nio.charset.CodingErrorAction);
    descriptor: (Ljava/nio/charset/CodingErrorAction;)V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=0, locals=2, args_size=2
         0: return                  
      LineNumberTable:
        line 399: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        1     0  this   Ljava/nio/charset/CharsetEncoder;
           0        1     1  newAction Ljava/nio/charset/CodingErrorAction;
  
  public java.nio.charset.CodingErrorAction unmappableCharacterAction();
    descriptor: ()Ljava/nio/charset/CodingErrorAction;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #18                 // Field unmappableCharacterAction:Ljava/nio/charset/CodingErrorAction;
         4: areturn                 
      LineNumberTable:
        line 408: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/charset/CharsetEncoder;
  
  public final java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction);
    descriptor: (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=3, locals=2, args_size=2
         0: aload_1                 
         1: ifnonnull     14                
         4: new           #33                 // class java/lang/IllegalArgumentException
         7: dup                     
         8: ldc           #144                // String Null action
        10: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: aload_0                 
        15: aload_1                 
        16: putfield      #18                 // Field unmappableCharacterAction:Ljava/nio/charset/CodingErrorAction;
        19: aload_0                 
        20: aload_1                 
        21: invokevirtual #150                // Method implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V
        24: aload_0                 
        25: areturn                 
      LineNumberTable:
        line 427: 0
        line 428: 4
        line 429: 14
        line 430: 19
        line 431: 24
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       26     0  this   Ljava/nio/charset/CharsetEncoder;
           0       26     1  newAction Ljava/nio/charset/CodingErrorAction;
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
  
  protected void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction);
    descriptor: (Ljava/nio/charset/CodingErrorAction;)V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=0, locals=2, args_size=2
         0: return                  
      LineNumberTable:
        line 443: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        1     0  this   Ljava/nio/charset/CharsetEncoder;
           0        1     1  newAction Ljava/nio/charset/CodingErrorAction;
  
  public final float averageBytesPerChar();
    descriptor: ()F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #48                 // Field averageBytesPerChar:F
         4: freturn                 
      LineNumberTable:
        line 454: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/charset/CharsetEncoder;
  
  public final float maxBytesPerChar();
    descriptor: ()F
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #52                 // Field maxBytesPerChar:F
         4: freturn                 
      LineNumberTable:
        line 473: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        5     0  this   Ljava/nio/charset/CharsetEncoder;
  
  public final java.nio.charset.CoderResult encode(java.nio.CharBuffer, java.nio.ByteBuffer, boolean);
    descriptor: (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=3, locals=7, args_size=4
         0: iload_3                 
         1: ifeq          8                 
         4: iconst_2                
         5: goto          9                 
         8: iconst_1                
         9: istore        4                 
        11: aload_0                 
        12: getfield      #21                 // Field state:I
        15: ifeq          48                
        18: aload_0                 
        19: getfield      #21                 // Field state:I
        22: iconst_1                
        23: if_icmpeq     48                
        26: iload_3                 
        27: ifeq          38                
        30: aload_0                 
        31: getfield      #21                 // Field state:I
        34: iconst_2                
        35: if_icmpeq     48                
        38: aload_0                 
        39: aload_0                 
        40: getfield      #21                 // Field state:I
        43: iload         4                 
        45: invokevirtual #153                // Method throwIllegalStateException:(II)V
        48: aload_0                 
        49: iload         4                 
        51: putfield      #21                 // Field state:I
        54: aload_0                 
        55: aload_1                 
        56: aload_2                 
        57: invokevirtual #157                // Method encodeLoop:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
        60: astore        5                 
        62: goto          77                
        65: astore        6                 
        67: new           #163                // class java/nio/charset/CoderMalfunctionError
        70: dup                     
        71: aload         6                 
        73: invokespecial #165                // Method java/nio/charset/CoderMalfunctionError."<init>":(Ljava/lang/Exception;)V
        76: athrow                  
        77: aload         5                 
        79: invokevirtual #168                // Method java/nio/charset/CoderResult.isOverflow:()Z
        82: ifeq          88                
        85: aload         5                 
        87: areturn                 
        88: aload         5                 
        90: invokevirtual #171                // Method java/nio/charset/CoderResult.isUnderflow:()Z
        93: ifeq          122               
        96: iload_3                 
        97: ifeq          119               
       100: aload_1                 
       101: invokevirtual #174                // Method java/nio/CharBuffer.hasRemaining:()Z
       104: ifeq          119               
       107: aload_1                 
       108: invokevirtual #177                // Method java/nio/CharBuffer.remaining:()I
       111: invokestatic  #178                // Method java/nio/charset/CoderResult.malformedForLength:(I)Ljava/nio/charset/CoderResult;
       114: astore        5                 
       116: goto          122               
       119: aload         5                 
       121: areturn                 
       122: aconst_null             
       123: astore        6                 
       125: aload         5                 
       127: invokevirtual #182                // Method java/nio/charset/CoderResult.isMalformed:()Z
       130: ifeq          142               
       133: aload_0                 
       134: getfield      #13                 // Field malformedInputAction:Ljava/nio/charset/CodingErrorAction;
       137: astore        6                 
       139: goto          178               
       142: aload         5                 
       144: invokevirtual #185                // Method java/nio/charset/CoderResult.isUnmappable:()Z
       147: ifeq          159               
       150: aload_0                 
       151: getfield      #18                 // Field unmappableCharacterAction:Ljava/nio/charset/CodingErrorAction;
       154: astore        6                 
       156: goto          178               
       159: getstatic     #188                // Field $assertionsDisabled:Z
       162: ifne          178               
       165: new           #192                // class java/lang/AssertionError
       168: dup                     
       169: aload         5                 
       171: invokevirtual #194                // Method java/nio/charset/CoderResult.toString:()Ljava/lang/String;
       174: invokespecial #198                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       177: athrow                  
       178: aload         6                 
       180: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
       183: if_acmpne     189               
       186: aload         5                 
       188: areturn                 
       189: aload         6                 
       191: getstatic     #199                // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
       194: if_acmpne     222               
       197: aload_2                 
       198: invokevirtual #120                // Method java/nio/ByteBuffer.remaining:()I
       201: aload_0                 
       202: getfield      #44                 // Field replacement:[B
       205: arraylength             
       206: if_icmpge     213               
       209: getstatic     #202                // Field java/nio/charset/CoderResult.OVERFLOW:Ljava/nio/charset/CoderResult;
       212: areturn                 
       213: aload_2                 
       214: aload_0                 
       215: getfield      #44                 // Field replacement:[B
       218: invokevirtual #206                // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
       221: pop                     
       222: aload         6                 
       224: getstatic     #209                // Field java/nio/charset/CodingErrorAction.IGNORE:Ljava/nio/charset/CodingErrorAction;
       227: if_acmpeq     238               
       230: aload         6                 
       232: getstatic     #199                // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
       235: if_acmpne     256               
       238: aload_1                 
       239: aload_1                 
       240: invokevirtual #212                // Method java/nio/CharBuffer.position:()I
       243: aload         5                 
       245: invokevirtual #215                // Method java/nio/charset/CoderResult.length:()I
       248: iadd                    
       249: invokevirtual #218                // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;
       252: pop                     
       253: goto          54                
       256: getstatic     #188                // Field $assertionsDisabled:Z
       259: ifne          270               
       262: new           #192                // class java/lang/AssertionError
       265: dup                     
       266: invokespecial #220                // Method java/lang/AssertionError."<init>":()V
       269: athrow                  
       270: goto          54                
      Exception table:
          from       to target type
            54       62    65  Class java/lang/RuntimeException
      LineNumberTable:
        line 577: 0
        line 578: 11
        line 580: 38
        line 581: 48
        line 587: 54
        line 590: 62
        line 588: 65
        line 589: 67
        line 592: 77
        line 593: 85
        line 595: 88
        line 596: 96
        line 597: 107
        line 600: 119
        line 604: 122
        line 605: 125
        line 606: 133
        line 607: 142
        line 608: 150
        line 610: 159
        line 612: 178
        line 613: 186
        line 615: 189
        line 616: 197
        line 617: 209
        line 618: 213
        line 621: 222
        line 624: 238
        line 625: 253
        line 628: 256
        line 629: 270
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          62        3     5  cr     Ljava/nio/charset/CoderResult;
          67       10     6  x      Ljava/lang/RuntimeException;
          77      193     5  cr     Ljava/nio/charset/CoderResult;
         125      145     6  action Ljava/nio/charset/CodingErrorAction;
           0      273     0  this   Ljava/nio/charset/CharsetEncoder;
           0      273     1  in     Ljava/nio/CharBuffer;
           0      273     2  out    Ljava/nio/ByteBuffer;
           0      273     3  endOfInput Z
          11      262     4  newState I
      StackMapTable: number_of_entries = 19
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [int]
        frame_type = 9 /* same */
        frame_type = 5 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/RuntimeException ]
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [class java/nio/charset/CoderResult]
        frame_type = 10 /* same */
        frame_type = 30 /* same */
        frame_type = 2 /* same */
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [class java/nio/charset/CodingErrorAction]
        frame_type = 16 /* same */
        frame_type = 18 /* same */
        frame_type = 10 /* same */
        frame_type = 23 /* same */
        frame_type = 8 /* same */
        frame_type = 15 /* same */
        frame_type = 17 /* same */
        frame_type = 249 /* chop */
          offset_delta = 13
  
  public final java.nio.charset.CoderResult flush(java.nio.ByteBuffer);
    descriptor: (Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=3, locals=3, args_size=2
         0: aload_0                 
         1: getfield      #21                 // Field state:I
         4: iconst_2                
         5: if_icmpne     28                
         8: aload_0                 
         9: aload_1                 
        10: invokevirtual #221                // Method implFlush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
        13: astore_2                
        14: aload_2                 
        15: invokevirtual #171                // Method java/nio/charset/CoderResult.isUnderflow:()Z
        18: ifeq          26                
        21: aload_0                 
        22: iconst_3                
        23: putfield      #21                 // Field state:I
        26: aload_2                 
        27: areturn                 
        28: aload_0                 
        29: getfield      #21                 // Field state:I
        32: iconst_3                
        33: if_icmpeq     45                
        36: aload_0                 
        37: aload_0                 
        38: getfield      #21                 // Field state:I
        41: iconst_3                
        42: invokevirtual #153                // Method throwIllegalStateException:(II)V
        45: getstatic     #225                // Field java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
        48: areturn                 
      LineNumberTable:
        line 673: 0
        line 674: 8
        line 675: 14
        line 676: 21
        line 677: 26
        line 680: 28
        line 681: 36
        line 683: 45
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          14       14     2  cr     Ljava/nio/charset/CoderResult;
           0       49     0  this   Ljava/nio/charset/CharsetEncoder;
           0       49     1  out    Ljava/nio/ByteBuffer;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [class java/nio/charset/CoderResult]
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 16 /* same */
  
  protected java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer);
    descriptor: (Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=1, locals=2, args_size=2
         0: getstatic     #225                // Field java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
         3: areturn                 
      LineNumberTable:
        line 701: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        4     0  this   Ljava/nio/charset/CharsetEncoder;
           0        4     1  out    Ljava/nio/ByteBuffer;
  
  public final java.nio.charset.CharsetEncoder reset();
    descriptor: ()Ljava/nio/charset/CharsetEncoder;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #228                // Method implReset:()V
         4: aload_0                 
         5: iconst_0                
         6: putfield      #21                 // Field state:I
         9: aload_0                 
        10: areturn                 
      LineNumberTable:
        line 715: 0
        line 716: 4
        line 717: 9
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       11     0  this   Ljava/nio/charset/CharsetEncoder;
  
  protected void implReset();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code: 
      stack=0, locals=1, args_size=1
         0: return                  
      LineNumberTable:
        line 726: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0        1     0  this   Ljava/nio/charset/CharsetEncoder;
  
  protected abstract java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer);
    descriptor: (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
    flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT
  
  public final java.nio.ByteBuffer encode(java.nio.CharBuffer) throws java.nio.charset.CharacterCodingException;
    descriptor: (Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code: 
      stack=4, locals=6, args_size=2
         0: aload_1                 
         1: invokevirtual #177                // Method java/nio/CharBuffer.remaining:()I
         4: i2f                     
         5: aload_0                 
         6: invokevirtual #231                // Method averageBytesPerChar:()F
         9: fmul                    
        10: f2i                     
        11: ldc           #235                // int 2147483639
        13: invokestatic  #236                // Method java/lang/Math.min:(II)I
        16: istore_2                
        17: iload_2                 
        18: invokestatic  #242                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        21: astore_3                
        22: iload_2                 
        23: ifne          35                
        26: aload_1                 
        27: invokevirtual #177                // Method java/nio/CharBuffer.remaining:()I
        30: ifne          35                
        33: aload_3                 
        34: areturn                 
        35: aload_0                 
        36: invokevirtual #245                // Method reset:()Ljava/nio/charset/CharsetEncoder;
        39: pop                     
        40: aload_1                 
        41: invokevirtual #174                // Method java/nio/CharBuffer.hasRemaining:()Z
        44: ifeq          57                
        47: aload_0                 
        48: aload_1                 
        49: aload_3                 
        50: iconst_1                
        51: invokevirtual #248                // Method encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
        54: goto          60                
        57: getstatic     #225                // Field java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
        60: astore        4                 
        62: aload         4                 
        64: invokevirtual #171                // Method java/nio/charset/CoderResult.isUnderflow:()Z
        67: ifeq          77                
        70: aload_0                 
        71: aload_3                 
        72: invokevirtual #252                // Method flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
        75: astore        4                 
        77: aload         4                 
        79: invokevirtual #171                // Method java/nio/charset/CoderResult.isUnderflow:()Z
        82: ifeq          88                
        85: goto          145               
        88: aload         4                 
        90: invokevirtual #168                // Method java/nio/charset/CoderResult.isOverflow:()Z
        93: ifeq          137               
        96: iload_2                 
        97: iload_2                 
        98: iconst_1                
        99: iadd                    
       100: sipush        1024              
       103: invokestatic  #236                // Method java/lang/Math.min:(II)I
       106: iload_2                 
       107: iconst_1                
       108: iadd                    
       109: invokestatic  #255                // Method jdk/internal/util/ArraysSupport.newLength:(III)I
       112: istore_2                
       113: iload_2                 
       114: invokestatic  #242                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       117: astore        5                 
       119: aload_3                 
       120: invokevirtual #259                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
       123: pop                     
       124: aload         5                 
       126: aload_3                 
       127: invokevirtual #263                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
       130: pop                     
       131: aload         5                 
       133: astore_3                
       134: goto          40                
       137: aload         4                 
       139: invokevirtual #266                // Method java/nio/charset/CoderResult.throwException:()V
       142: goto          40                
       145: aload_3                 
       146: invokevirtual #259                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
       149: pop                     
       150: aload_3                 
       151: areturn                 
      LineNumberTable:
        line 813: 0
        line 815: 17
        line 817: 22
        line 818: 33
        line 819: 35
        line 821: 40
        line 822: 47
        line 823: 62
        line 824: 70
        line 826: 77
        line 827: 85
        line 828: 88
        line 830: 96
        line 831: 113
        line 832: 119
        line 833: 124
        line 834: 131
        line 835: 134
        line 837: 137
        line 838: 142
        line 839: 145
        line 840: 150
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
         119       18     5  o      Ljava/nio/ByteBuffer;
          62       80     4  cr     Ljava/nio/charset/CoderResult;
           0      152     0  this   Ljava/nio/charset/CharsetEncoder;
           0      152     1  in     Ljava/nio/CharBuffer;
          17      135     2  n      I
          22      130     3  out    Ljava/nio/ByteBuffer;
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 35
          locals = [int, class java/nio/ByteBuffer]
        frame_type = 4 /* same */
        frame_type = 16 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/nio/charset/CoderResult ]
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [class java/nio/charset/CoderResult]
        frame_type = 10 /* same */
        frame_type = 48 /* same */
        frame_type = 250 /* chop */
          offset_delta = 7
    Exceptions:
      throws java.nio.charset.CharacterCodingException
  
  private boolean canEncode(java.nio.CharBuffer);
    descriptor: (Ljava/nio/CharBuffer;)Z
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=3, locals=7, args_size=2
         0: aload_0                 
         1: getfield      #21                 // Field state:I
         4: iconst_3                
         5: if_icmpne     16                
         8: aload_0                 
         9: invokevirtual #245                // Method reset:()Ljava/nio/charset/CharsetEncoder;
        12: pop                     
        13: goto          32                
        16: aload_0                 
        17: getfield      #21                 // Field state:I
        20: ifeq          32                
        23: aload_0                 
        24: aload_0                 
        25: getfield      #21                 // Field state:I
        28: iconst_1                
        29: invokevirtual #153                // Method throwIllegalStateException:(II)V
        32: aload_0                 
        33: invokevirtual #269                // Method malformedInputAction:()Ljava/nio/charset/CodingErrorAction;
        36: astore_2                
        37: aload_0                 
        38: invokevirtual #272                // Method unmappableCharacterAction:()Ljava/nio/charset/CodingErrorAction;
        41: astore_3                
        42: aload_0                 
        43: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
        46: invokevirtual #274                // Method onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        49: pop                     
        50: aload_0                 
        51: getstatic     #7                  // Field java/nio/charset/CodingErrorAction.REPORT:Ljava/nio/charset/CodingErrorAction;
        54: invokevirtual #277                // Method onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        57: pop                     
        58: aload_0                 
        59: aload_1                 
        60: invokevirtual #279                // Method encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
        63: pop                     
        64: aload_0                 
        65: aload_2                 
        66: invokevirtual #274                // Method onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        69: pop                     
        70: aload_0                 
        71: aload_3                 
        72: invokevirtual #277                // Method onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        75: pop                     
        76: aload_0                 
        77: invokevirtual #245                // Method reset:()Ljava/nio/charset/CharsetEncoder;
        80: pop                     
        81: goto          131               
        84: astore        4                 
        86: iconst_0                
        87: istore        5                 
        89: aload_0                 
        90: aload_2                 
        91: invokevirtual #274                // Method onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        94: pop                     
        95: aload_0                 
        96: aload_3                 
        97: invokevirtual #277                // Method onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
       100: pop                     
       101: aload_0                 
       102: invokevirtual #245                // Method reset:()Ljava/nio/charset/CharsetEncoder;
       105: pop                     
       106: iload         5                 
       108: ireturn                 
       109: astore        6                 
       111: aload_0                 
       112: aload_2                 
       113: invokevirtual #274                // Method onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
       116: pop                     
       117: aload_0                 
       118: aload_3                 
       119: invokevirtual #277                // Method onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
       122: pop                     
       123: aload_0                 
       124: invokevirtual #245                // Method reset:()Ljava/nio/charset/CharsetEncoder;
       127: pop                     
       128: aload         6                 
       130: athrow                  
       131: iconst_1                
       132: ireturn                 
      Exception table:
          from       to target type
            42       64    84  Class java/nio/charset/CharacterCodingException
            42       64   109  any
            84       89   109  any
           109      111   109  any
      LineNumberTable:
        line 922: 0
        line 923: 8
        line 924: 16
        line 925: 23
        line 926: 32
        line 927: 37
        line 929: 42
        line 930: 50
        line 931: 58
        line 935: 64
        line 936: 70
        line 937: 76
        line 938: 81
        line 932: 84
        line 933: 86
        line 935: 89
        line 936: 95
        line 937: 101
        line 933: 106
        line 935: 109
        line 936: 117
        line 937: 123
        line 938: 128
        line 939: 131
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          86       23     4  x      Ljava/nio/charset/CharacterCodingException;
           0      133     0  this   Ljava/nio/charset/CharsetEncoder;
           0      133     1  cb     Ljava/nio/CharBuffer;
          37       96     2  ma     Ljava/nio/charset/CodingErrorAction;
          42       91     3  ua     Ljava/nio/charset/CodingErrorAction;
      StackMapTable: number_of_entries = 5
        frame_type = 16 /* same */
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [class java/nio/charset/CharsetEncoder, class java/nio/CharBuffer, class java/nio/charset/CodingErrorAction, class java/nio/charset/CodingErrorAction]
          stack = [class java/nio/charset/CharacterCodingException]
        frame_type = 88 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 21 /* same */
  
  public boolean canEncode(char);
    descriptor: (C)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=3, args_size=2
         0: iconst_1                
         1: invokestatic  #128                // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
         4: astore_2                
         5: aload_2                 
         6: iload_1                 
         7: invokevirtual #284                // Method java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
        10: pop                     
        11: aload_2                 
        12: invokevirtual #287                // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;
        15: pop                     
        16: aload_0                 
        17: aload_2                 
        18: invokevirtual #290                // Method canEncode:(Ljava/nio/CharBuffer;)Z
        21: ireturn                 
      LineNumberTable:
        line 969: 0
        line 970: 5
        line 971: 11
        line 972: 16
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       22     0  this   Ljava/nio/charset/CharsetEncoder;
           0       22     1  c      C
           5       17     2  cb     Ljava/nio/CharBuffer;
  
  public boolean canEncode(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=3, args_size=2
         0: aload_1                 
         1: instanceof    #129                // class java/nio/CharBuffer
         4: ifeq          18                
         7: aload_1                 
         8: checkcast     #129                // class java/nio/CharBuffer
        11: invokevirtual #294                // Method java/nio/CharBuffer.duplicate:()Ljava/nio/CharBuffer;
        14: astore_2                
        15: goto          28                
        18: aload_1                 
        19: invokeinterface #297, 1             // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
        24: invokestatic  #300                // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
        27: astore_2                
        28: aload_0                 
        29: aload_2                 
        30: invokevirtual #290                // Method canEncode:(Ljava/nio/CharBuffer;)Z
        33: ireturn                 
      LineNumberTable:
        line 1002: 0
        line 1003: 7
        line 1005: 18
        line 1006: 28
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
          15        3     2  cb     Ljava/nio/CharBuffer;
           0       34     0  this   Ljava/nio/charset/CharsetEncoder;
           0       34     1  cs     Ljava/lang/CharSequence;
          28        6     2  cb     Ljava/nio/CharBuffer;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [class java/nio/CharBuffer]
  
  private void throwIllegalStateException(int, int);
    descriptor: (II)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=5, locals=3, args_size=3
         0: new           #303                // class java/lang/IllegalStateException
         3: dup                     
         4: new           #305                // class java/lang/StringBuilder
         7: dup                     
         8: invokespecial #307                // Method java/lang/StringBuilder."<init>":()V
        11: ldc_w         #308                // String Current state = 
        14: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: getstatic     #314                // Field stateNames:[Ljava/lang/String;
        20: iload_1                 
        21: aaload                  
        22: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: ldc_w         #318                // String , new state = 
        28: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: getstatic     #314                // Field stateNames:[Ljava/lang/String;
        34: iload_2                 
        35: aaload                  
        36: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: invokevirtual #320                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        42: invokespecial #321                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        45: athrow                  
      LineNumberTable:
        line 1013: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       46     0  this   Ljava/nio/charset/CharsetEncoder;
           0       46     1  from   I
           0       46     2  to     I
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=4, locals=0, args_size=0
         0: ldc           #14                 // class java/nio/charset/CharsetEncoder
         2: invokevirtual #322                // Method java/lang/Class.desiredAssertionStatus:()Z
         5: ifne          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: putstatic     #188                // Field $assertionsDisabled:Z
        16: iconst_4                
        17: anewarray     #327                // class java/lang/String
        20: dup                     
        21: iconst_0                
        22: ldc_w         #329                // String RESET
        25: aastore                 
        26: dup                     
        27: iconst_1                
        28: ldc_w         #331                // String CODING
        31: aastore                 
        32: dup                     
        33: iconst_2                
        34: ldc_w         #333                // String CODING_END
        37: aastore                 
        38: dup                     
        39: iconst_3                
        40: ldc_w         #335                // String FLUSHED
        43: aastore                 
        44: putstatic     #314                // Field stateNames:[Ljava/lang/String;
        47: return                  
      LineNumberTable:
        line 138: 0
        line 159: 16
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
SourceFile: "CharsetEncoder.java"
