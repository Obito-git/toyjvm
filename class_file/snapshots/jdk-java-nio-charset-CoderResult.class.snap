---
source: class_file/src/lib.rs
expression: display
---
public class java.nio.charset.CoderResult 
  minor version: 0
  major version: 68
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                       //java/nio/charset/CoderResult
  super_class: #2                      //java/lang/Object
  interfaces: 0, fields: 13, methods: 14, attributes: 4
Constant pool:
    #1 = Methodref          #2.#3            // java/lang/Object."<init>":()V
    #2 = Class              #4               // java/lang/Object
    #3 = NameAndType        #5:#6            // "<init>":()V
    #4 = Utf8               java/lang/Object
    #5 = Utf8               <init>
    #6 = Utf8               ()V
    #7 = Fieldref           #8.#9            // java/nio/charset/CoderResult.type:I
    #8 = Class              #10              // java/nio/charset/CoderResult
    #9 = NameAndType        #11:#12          // type:I
   #10 = Utf8               java/nio/charset/CoderResult
   #11 = Utf8               type
   #12 = Utf8               I
   #13 = Fieldref           #8.#14           // java/nio/charset/CoderResult.length:I
   #14 = NameAndType        #15:#12          // length:I
   #15 = Utf8               length
   #16 = Fieldref           #8.#17           // java/nio/charset/CoderResult.names:[Ljava/lang/String;
   #17 = NameAndType        #18:#19          // names:[Ljava/lang/String;
   #18 = Utf8               names
   #19 = Utf8               [Ljava/lang/String;
   #20 = Methodref          #8.#21           // java/nio/charset/CoderResult.isError:()Z
   #21 = NameAndType        #22:#23          // isError:()Z
   #22 = Utf8               isError
   #23 = Utf8               ()Z
   #24 = Class              #25              // java/lang/StringBuilder
   #25 = Utf8               java/lang/StringBuilder
   #26 = Methodref          #24.#3           // java/lang/StringBuilder."<init>":()V
   #27 = Methodref          #24.#28          // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #28 = NameAndType        #29:#30          // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #29 = Utf8               append
   #30 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #31 = String             #32              // [
   #32 = Utf8               [
   #33 = Methodref          #24.#34          // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #34 = NameAndType        #29:#35          // append:(I)Ljava/lang/StringBuilder;
   #35 = Utf8               (I)Ljava/lang/StringBuilder;
   #36 = String             #37              // ]
   #37 = Utf8               ]
   #38 = Methodref          #24.#39          // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #39 = NameAndType        #40:#41          // toString:()Ljava/lang/String;
   #40 = Utf8               toString
   #41 = Utf8               ()Ljava/lang/String;
   #42 = Class              #43              // java/lang/UnsupportedOperationException
   #43 = Utf8               java/lang/UnsupportedOperationException
   #44 = Methodref          #42.#3           // java/lang/UnsupportedOperationException."<init>":()V
   #45 = Class              #46              // java/lang/IllegalArgumentException
   #46 = Utf8               java/lang/IllegalArgumentException
   #47 = String             #48              // Non-positive length
   #48 = Utf8               Non-positive length
   #49 = Methodref          #45.#50          // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #50 = NameAndType        #5:#51           // "<init>":(Ljava/lang/String;)V
   #51 = Utf8               (Ljava/lang/String;)V
   #52 = Fieldref           #8.#53           // java/nio/charset/CoderResult.malformed4:[Ljava/nio/charset/CoderResult;
   #53 = NameAndType        #54:#55          // malformed4:[Ljava/nio/charset/CoderResult;
   #54 = Utf8               malformed4
   #55 = Utf8               [Ljava/nio/charset/CoderResult;
   #56 = Fieldref           #57.#58          // java/nio/charset/CoderResult$Cache.INSTANCE:Ljava/nio/charset/CoderResult$Cache;
   #57 = Class              #59              // java/nio/charset/CoderResult$Cache
   #58 = NameAndType        #60:#61          // INSTANCE:Ljava/nio/charset/CoderResult$Cache;
   #59 = Utf8               java/nio/charset/CoderResult$Cache
   #60 = Utf8               INSTANCE
   #61 = Utf8               Ljava/nio/charset/CoderResult$Cache;
   #62 = Fieldref           #57.#63          // java/nio/charset/CoderResult$Cache.malformed:Ljava/util/Map;
   #63 = NameAndType        #64:#65          // malformed:Ljava/util/Map;
   #64 = Utf8               malformed
   #65 = Utf8               Ljava/util/Map;
   #66 = Methodref          #67.#68          // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #67 = Class              #69              // java/lang/Integer
   #68 = NameAndType        #70:#71          // valueOf:(I)Ljava/lang/Integer;
   #69 = Utf8               java/lang/Integer
   #70 = Utf8               valueOf
   #71 = Utf8               (I)Ljava/lang/Integer;
   #72 = InvokeDynamic      #0:#73           // #0:apply:()Ljava/util/function/Function;
   #73 = NameAndType        #74:#75          // apply:()Ljava/util/function/Function;
   #74 = Utf8               apply
   #75 = Utf8               ()Ljava/util/function/Function;
   #76 = InterfaceMethodref #77.#78          // java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
   #77 = Class              #79              // java/util/Map
   #78 = NameAndType        #80:#81          // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
   #79 = Utf8               java/util/Map
   #80 = Utf8               computeIfAbsent
   #81 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
   #82 = Fieldref           #8.#83           // java/nio/charset/CoderResult.unmappable4:[Ljava/nio/charset/CoderResult;
   #83 = NameAndType        #84:#55          // unmappable4:[Ljava/nio/charset/CoderResult;
   #84 = Utf8               unmappable4
   #85 = Fieldref           #57.#86          // java/nio/charset/CoderResult$Cache.unmappable:Ljava/util/Map;
   #86 = NameAndType        #87:#65          // unmappable:Ljava/util/Map;
   #87 = Utf8               unmappable
   #88 = InvokeDynamic      #1:#73           // #1:apply:()Ljava/util/function/Function;
   #89 = Class              #90              // java/nio/BufferUnderflowException
   #90 = Utf8               java/nio/BufferUnderflowException
   #91 = Methodref          #89.#3           // java/nio/BufferUnderflowException."<init>":()V
   #92 = Class              #93              // java/nio/BufferOverflowException
   #93 = Utf8               java/nio/BufferOverflowException
   #94 = Methodref          #92.#3           // java/nio/BufferOverflowException."<init>":()V
   #95 = Class              #96              // java/nio/charset/MalformedInputException
   #96 = Utf8               java/nio/charset/MalformedInputException
   #97 = Methodref          #95.#98          // java/nio/charset/MalformedInputException."<init>":(I)V
   #98 = NameAndType        #5:#99           // "<init>":(I)V
   #99 = Utf8               (I)V
  #100 = Class              #101             // java/nio/charset/UnmappableCharacterException
  #101 = Utf8               java/nio/charset/UnmappableCharacterException
  #102 = Methodref          #100.#98         // java/nio/charset/UnmappableCharacterException."<init>":(I)V
  #103 = Fieldref           #8.#104          // java/nio/charset/CoderResult.$assertionsDisabled:Z
  #104 = NameAndType        #105:#106        // $assertionsDisabled:Z
  #105 = Utf8               $assertionsDisabled
  #106 = Utf8               Z
  #107 = Class              #108             // java/lang/AssertionError
  #108 = Utf8               java/lang/AssertionError
  #109 = Methodref          #107.#3          // java/lang/AssertionError."<init>":()V
  #110 = Methodref          #67.#111         // java/lang/Integer.intValue:()I
  #111 = NameAndType        #112:#113        // intValue:()I
  #112 = Utf8               intValue
  #113 = Utf8               ()I
  #114 = Methodref          #8.#115          // java/nio/charset/CoderResult."<init>":(II)V
  #115 = NameAndType        #5:#116          // "<init>":(II)V
  #116 = Utf8               (II)V
  #117 = Methodref          #118.#119        // java/lang/Class.desiredAssertionStatus:()Z
  #118 = Class              #120             // java/lang/Class
  #119 = NameAndType        #121:#23         // desiredAssertionStatus:()Z
  #120 = Utf8               java/lang/Class
  #121 = Utf8               desiredAssertionStatus
  #122 = Class              #123             // java/lang/String
  #123 = Utf8               java/lang/String
  #124 = String             #125             // UNDERFLOW
  #125 = Utf8               UNDERFLOW
  #126 = String             #127             // OVERFLOW
  #127 = Utf8               OVERFLOW
  #128 = String             #129             // MALFORMED
  #129 = Utf8               MALFORMED
  #130 = String             #131             // UNMAPPABLE
  #131 = Utf8               UNMAPPABLE
  #132 = Fieldref           #8.#133          // java/nio/charset/CoderResult.UNDERFLOW:Ljava/nio/charset/CoderResult;
  #133 = NameAndType        #125:#134        // UNDERFLOW:Ljava/nio/charset/CoderResult;
  #134 = Utf8               Ljava/nio/charset/CoderResult;
  #135 = Fieldref           #8.#136          // java/nio/charset/CoderResult.OVERFLOW:Ljava/nio/charset/CoderResult;
  #136 = NameAndType        #127:#134        // OVERFLOW:Ljava/nio/charset/CoderResult;
  #137 = Utf8               CR_UNDERFLOW
  #138 = Utf8               ConstantValue
  #139 = Integer            0
  #140 = Utf8               CR_OVERFLOW
  #141 = Integer            1
  #142 = Utf8               CR_ERROR_MIN
  #143 = Integer            2
  #144 = Utf8               CR_MALFORMED
  #145 = Utf8               CR_UNMAPPABLE
  #146 = Integer            3
  #147 = Utf8               Code
  #148 = Utf8               LineNumberTable
  #149 = Utf8               LocalVariableTable
  #150 = Utf8               this
  #151 = Utf8               nm
  #152 = Utf8               Ljava/lang/String;
  #153 = Utf8               StackMapTable
  #154 = Utf8               isUnderflow
  #155 = Utf8               isOverflow
  #156 = Utf8               isMalformed
  #157 = Utf8               isUnmappable
  #158 = Utf8               malformedForLength
  #159 = Utf8               (I)Ljava/nio/charset/CoderResult;
  #160 = Utf8               unmappableForLength
  #161 = Utf8               throwException
  #162 = Utf8               Exceptions
  #163 = Class              #164             // java/nio/charset/CharacterCodingException
  #164 = Utf8               java/nio/charset/CharacterCodingException
  #165 = Utf8               lambda$unmappableForLength$0
  #166 = Utf8               (Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #167 = Utf8               n
  #168 = Utf8               Ljava/lang/Integer;
  #169 = Utf8               lambda$malformedForLength$0
  #170 = Utf8               <clinit>
  #171 = Utf8               SourceFile
  #172 = Utf8               CoderResult.java
  #173 = Utf8               NestMembers
  #174 = Utf8               BootstrapMethods
  #175 = MethodType         #176             // (Ljava/lang/Object;)Ljava/lang/Object;
  #176 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #177 = MethodHandle       6:#178           // REF_invokeStatic java/nio/charset/CoderResult.lambda$malformedForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #178 = Methodref          #8.#179          // java/nio/charset/CoderResult.lambda$malformedForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #179 = NameAndType        #169:#166        // lambda$malformedForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #180 = MethodType         #166             // (Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #181 = MethodHandle       6:#182           // REF_invokeStatic java/nio/charset/CoderResult.lambda$unmappableForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #182 = Methodref          #8.#183          // java/nio/charset/CoderResult.lambda$unmappableForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #183 = NameAndType        #165:#166        // lambda$unmappableForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  #184 = MethodHandle       6:#185           // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #185 = Methodref          #186.#187        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #186 = Class              #188             // java/lang/invoke/LambdaMetafactory
  #187 = NameAndType        #189:#190        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #188 = Utf8               java/lang/invoke/LambdaMetafactory
  #189 = Utf8               metafactory
  #190 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #191 = Utf8               InnerClasses
  #192 = Utf8               Cache
  #193 = Class              #194             // java/lang/invoke/MethodHandles$Lookup
  #194 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #195 = Class              #196             // java/lang/invoke/MethodHandles
  #196 = Utf8               java/lang/invoke/MethodHandles
  #197 = Utf8               Lookup
{
  private static final int CR_UNDERFLOW;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 0
  
  private static final int CR_OVERFLOW;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1
  
  private static final int CR_ERROR_MIN;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2
  
  private static final int CR_MALFORMED;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2
  
  private static final int CR_UNMAPPABLE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 3
  
  private static final java.lang.String[] names;
    descriptor: [Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private final int type;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  private final int length;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
  
  public static final java.nio.charset.CoderResult UNDERFLOW;
    descriptor: Ljava/nio/charset/CoderResult;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
  
  public static final java.nio.charset.CoderResult OVERFLOW;
    descriptor: Ljava/nio/charset/CoderResult;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
  
  private static final java.nio.charset.CoderResult[] malformed4;
    descriptor: [Ljava/nio/charset/CoderResult;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  private static final java.nio.charset.CoderResult[] unmappable4;
    descriptor: [Ljava/nio/charset/CoderResult;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
  
  static final boolean $assertionsDisabled;
    descriptor: Z
    flags: (0x1018) ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
  
  private java.nio.charset.CoderResult(int, int);
    descriptor: (II)V
    flags: (0x0002) ACC_PRIVATE
    Code: 
      stack=2, locals=3, args_size=3
         0: aload_0                 
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0                 
         5: iload_1                 
         6: putfield      #7                  // Field type:I
         9: aload_0                 
        10: iload_2                 
        11: putfield      #13                 // Field length:I
        14: return                  
      LineNumberTable:
        line 98: 0
        line 99: 4
        line 100: 9
        line 101: 14
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       15     0  this   Ljava/nio/charset/CoderResult;
           0       15     1  type   I
           0       15     2  length I
  
  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=2, args_size=1
         0: getstatic     #16                 // Field names:[Ljava/lang/String;
         3: aload_0                 
         4: getfield      #7                  // Field type:I
         7: aaload                  
         8: astore_1                
         9: aload_0                 
        10: invokevirtual #20                 // Method isError:()Z
        13: ifeq          50                
        16: new           #24                 // class java/lang/StringBuilder
        19: dup                     
        20: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
        23: aload_1                 
        24: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: ldc           #31                 // String [
        29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: aload_0                 
        33: getfield      #13                 // Field length:I
        36: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        39: ldc           #36                 // String ]
        41: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        47: goto          51                
        50: aload_1                 
        51: areturn                 
      LineNumberTable:
        line 109: 0
        line 110: 9
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       52     0  this   Ljava/nio/charset/CoderResult;
           9       43     1  nm     Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 50
          locals = [class java/lang/String]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
  
  public boolean isUnderflow();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=1, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field type:I
         4: ifne          11                
         7: iconst_1                
         8: goto          12                
        11: iconst_0                
        12: ireturn                 
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public boolean isOverflow();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field type:I
         4: iconst_1                
         5: if_icmpne     12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public boolean isError();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field type:I
         4: iconst_2                
         5: if_icmplt     12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public boolean isMalformed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field type:I
         4: iconst_2                
         5: if_icmpne     12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public boolean isUnmappable();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field type:I
         4: iconst_3                
         5: if_icmpne     12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: ireturn                 
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       14     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
  
  public int length();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=2, locals=1, args_size=1
         0: aload_0                 
         1: invokevirtual #20                 // Method isError:()Z
         4: ifne          15                
         7: new           #42                 // class java/lang/UnsupportedOperationException
        10: dup                     
        11: invokespecial #44                 // Method java/lang/UnsupportedOperationException."<init>":()V
        14: athrow                  
        15: aload_0                 
        16: getfield      #13                 // Field length:I
        19: ireturn                 
      LineNumberTable:
        line 173: 0
        line 174: 7
        line 175: 15
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       20     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
  
  public static java.nio.charset.CoderResult malformedForLength(int);
    descriptor: (I)Ljava/nio/charset/CoderResult;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: ifgt          14                
         4: new           #45                 // class java/lang/IllegalArgumentException
         7: dup                     
         8: ldc           #47                 // String Non-positive length
        10: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: iload_0                 
        15: iconst_4                
        16: if_icmpgt     27                
        19: getstatic     #52                 // Field malformed4:[Ljava/nio/charset/CoderResult;
        22: iload_0                 
        23: iconst_1                
        24: isub                    
        25: aaload                  
        26: areturn                 
        27: getstatic     #56                 // Field java/nio/charset/CoderResult$Cache.INSTANCE:Ljava/nio/charset/CoderResult$Cache;
        30: getfield      #62                 // Field java/nio/charset/CoderResult$Cache.malformed:Ljava/util/Map;
        33: iload_0                 
        34: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        37: invokedynamic #72, 0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
        42: invokeinterface #76, 3              // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
        47: checkcast     #8                  // class java/nio/charset/CoderResult
        50: areturn                 
      LineNumberTable:
        line 218: 0
        line 219: 4
        line 220: 14
        line 221: 19
        line 222: 27
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  length I
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 12 /* same */
  
  public static java.nio.charset.CoderResult unmappableForLength(int);
    descriptor: (I)Ljava/nio/charset/CoderResult;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code: 
      stack=3, locals=1, args_size=1
         0: iload_0                 
         1: ifgt          14                
         4: new           #45                 // class java/lang/IllegalArgumentException
         7: dup                     
         8: ldc           #47                 // String Non-positive length
        10: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        13: athrow                  
        14: iload_0                 
        15: iconst_4                
        16: if_icmpgt     27                
        19: getstatic     #82                 // Field unmappable4:[Ljava/nio/charset/CoderResult;
        22: iload_0                 
        23: iconst_1                
        24: isub                    
        25: aaload                  
        26: areturn                 
        27: getstatic     #56                 // Field java/nio/charset/CoderResult$Cache.INSTANCE:Ljava/nio/charset/CoderResult$Cache;
        30: getfield      #85                 // Field java/nio/charset/CoderResult$Cache.unmappable:Ljava/util/Map;
        33: iload_0                 
        34: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        37: invokedynamic #88, 0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
        42: invokeinterface #76, 3              // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
        47: checkcast     #8                  // class java/nio/charset/CoderResult
        50: areturn                 
      LineNumberTable:
        line 243: 0
        line 244: 4
        line 245: 14
        line 246: 19
        line 247: 27
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       51     0  length I
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 12 /* same */
  
  public void throwException() throws java.nio.charset.CharacterCodingException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code: 
      stack=3, locals=1, args_size=1
         0: aload_0                 
         1: getfield      #7                  // Field type:I
         4: tableswitch   { // 0 to 3
                         0: 36
                         1: 44
                         2: 52
                         3: 64
                   default: 76
            }
        36: new           #89                 // class java/nio/BufferUnderflowException
        39: dup                     
        40: invokespecial #91                 // Method java/nio/BufferUnderflowException."<init>":()V
        43: athrow                  
        44: new           #92                 // class java/nio/BufferOverflowException
        47: dup                     
        48: invokespecial #94                 // Method java/nio/BufferOverflowException."<init>":()V
        51: athrow                  
        52: new           #95                 // class java/nio/charset/MalformedInputException
        55: dup                     
        56: aload_0                 
        57: getfield      #13                 // Field length:I
        60: invokespecial #97                 // Method java/nio/charset/MalformedInputException."<init>":(I)V
        63: athrow                  
        64: new           #100                // class java/nio/charset/UnmappableCharacterException
        67: dup                     
        68: aload_0                 
        69: getfield      #13                 // Field length:I
        72: invokespecial #102                // Method java/nio/charset/UnmappableCharacterException."<init>":(I)V
        75: athrow                  
        76: getstatic     #103                // Field $assertionsDisabled:Z
        79: ifne          90                
        82: new           #107                // class java/lang/AssertionError
        85: dup                     
        86: invokespecial #109                // Method java/lang/AssertionError."<init>":()V
        89: athrow                  
        90: return                  
      LineNumberTable:
        line 276: 0
        line 277: 36
        line 278: 44
        line 279: 52
        line 280: 64
        line 282: 76
        line 284: 90
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       91     0  this   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 6
        frame_type = 36 /* same */
        frame_type = 7 /* same */
        frame_type = 7 /* same */
        frame_type = 11 /* same */
        frame_type = 11 /* same */
        frame_type = 13 /* same */
    Exceptions:
      throws java.nio.charset.CharacterCodingException
  
  private static java.nio.charset.CoderResult lambda$unmappableForLength$0(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code: 
      stack=4, locals=1, args_size=1
         0: new           #8                  // class java/nio/charset/CoderResult
         3: dup                     
         4: iconst_3                
         5: aload_0                 
         6: invokevirtual #110                // Method java/lang/Integer.intValue:()I
         9: invokespecial #114                // Method "<init>":(II)V
        12: areturn                 
      LineNumberTable:
        line 248: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  n      Ljava/lang/Integer;
  
  private static java.nio.charset.CoderResult lambda$malformedForLength$0(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code: 
      stack=4, locals=1, args_size=1
         0: new           #8                  // class java/nio/charset/CoderResult
         3: dup                     
         4: iconst_2                
         5: aload_0                 
         6: invokevirtual #110                // Method java/lang/Integer.intValue:()I
         9: invokespecial #114                // Method "<init>":(II)V
        12: areturn                 
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
       Start   Length  Slot  Name   Signature
           0       13     0  n      Ljava/lang/Integer;
  
  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code: 
      stack=7, locals=0, args_size=0
         0: ldc           #8                  // class java/nio/charset/CoderResult
         2: invokevirtual #117                // Method java/lang/Class.desiredAssertionStatus:()Z
         5: ifne          12                
         8: iconst_1                
         9: goto          13                
        12: iconst_0                
        13: putstatic     #103                // Field $assertionsDisabled:Z
        16: iconst_4                
        17: anewarray     #122                // class java/lang/String
        20: dup                     
        21: iconst_0                
        22: ldc           #124                // String UNDERFLOW
        24: aastore                 
        25: dup                     
        26: iconst_1                
        27: ldc           #126                // String OVERFLOW
        29: aastore                 
        30: dup                     
        31: iconst_2                
        32: ldc           #128                // String MALFORMED
        34: aastore                 
        35: dup                     
        36: iconst_3                
        37: ldc           #130                // String UNMAPPABLE
        39: aastore                 
        40: putstatic     #16                 // Field names:[Ljava/lang/String;
        43: new           #8                  // class java/nio/charset/CoderResult
        46: dup                     
        47: iconst_0                
        48: iconst_0                
        49: invokespecial #114                // Method "<init>":(II)V
        52: putstatic     #132                // Field UNDERFLOW:Ljava/nio/charset/CoderResult;
        55: new           #8                  // class java/nio/charset/CoderResult
        58: dup                     
        59: iconst_1                
        60: iconst_0                
        61: invokespecial #114                // Method "<init>":(II)V
        64: putstatic     #135                // Field OVERFLOW:Ljava/nio/charset/CoderResult;
        67: iconst_4                
        68: anewarray     #8                  // class java/nio/charset/CoderResult
        71: dup                     
        72: iconst_0                
        73: new           #8                  // class java/nio/charset/CoderResult
        76: dup                     
        77: iconst_2                
        78: iconst_1                
        79: invokespecial #114                // Method "<init>":(II)V
        82: aastore                 
        83: dup                     
        84: iconst_1                
        85: new           #8                  // class java/nio/charset/CoderResult
        88: dup                     
        89: iconst_2                
        90: iconst_2                
        91: invokespecial #114                // Method "<init>":(II)V
        94: aastore                 
        95: dup                     
        96: iconst_2                
        97: new           #8                  // class java/nio/charset/CoderResult
       100: dup                     
       101: iconst_2                
       102: iconst_3                
       103: invokespecial #114                // Method "<init>":(II)V
       106: aastore                 
       107: dup                     
       108: iconst_3                
       109: new           #8                  // class java/nio/charset/CoderResult
       112: dup                     
       113: iconst_2                
       114: iconst_4                
       115: invokespecial #114                // Method "<init>":(II)V
       118: aastore                 
       119: putstatic     #52                 // Field malformed4:[Ljava/nio/charset/CoderResult;
       122: iconst_4                
       123: anewarray     #8                  // class java/nio/charset/CoderResult
       126: dup                     
       127: iconst_0                
       128: new           #8                  // class java/nio/charset/CoderResult
       131: dup                     
       132: iconst_3                
       133: iconst_1                
       134: invokespecial #114                // Method "<init>":(II)V
       137: aastore                 
       138: dup                     
       139: iconst_1                
       140: new           #8                  // class java/nio/charset/CoderResult
       143: dup                     
       144: iconst_3                
       145: iconst_2                
       146: invokespecial #114                // Method "<init>":(II)V
       149: aastore                 
       150: dup                     
       151: iconst_2                
       152: new           #8                  // class java/nio/charset/CoderResult
       155: dup                     
       156: iconst_3                
       157: iconst_3                
       158: invokespecial #114                // Method "<init>":(II)V
       161: aastore                 
       162: dup                     
       163: iconst_3                
       164: new           #8                  // class java/nio/charset/CoderResult
       167: dup                     
       168: iconst_3                
       169: iconst_4                
       170: invokespecial #114                // Method "<init>":(II)V
       173: aastore                 
       174: putstatic     #82                 // Field unmappable4:[Ljava/nio/charset/CoderResult;
       177: return                  
      LineNumberTable:
        line 84: 0
        line 92: 16
        line 183: 43
        line 190: 55
        line 201: 67
        line 226: 122
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
}
SourceFile: "CoderResult.java"
NestMembers:
  java/nio/charset/CoderResult$Cache
BootstrapMethods:
  0: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #175 (Ljava/lang/Object;)Ljava/lang/Object;
      #177 REF_invokeStatic java/nio/charset/CoderResult.lambda$malformedForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
      #180 (Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
  1: #184 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #175 (Ljava/lang/Object;)Ljava/lang/Object;
      #181 REF_invokeStatic java/nio/charset/CoderResult.lambda$unmappableForLength$0:(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
      #180 (Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;
InnerClasses:
  private static final #192= #57 of #8;       // Cache=class java/nio/charset/CoderResult$Cache of class java/nio/charset/CoderResult
  public static final #197= #193 of #195;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
